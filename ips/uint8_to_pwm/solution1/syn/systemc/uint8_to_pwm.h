// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _uint8_to_pwm_HH_
#define _uint8_to_pwm_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct uint8_to_pwm : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<8> > m0_V;
    sc_in< sc_lv<8> > m1_V;
    sc_in< sc_lv<8> > m2_V;
    sc_in< sc_lv<8> > m3_V;
    sc_in< sc_lv<8> > m4_V;
    sc_in< sc_lv<8> > m5_V;
    sc_out< sc_lv<6> > out_V;


    // Module declarations
    uint8_to_pwm(sc_module_name name);
    SC_HAS_PROCESS(uint8_to_pwm);

    ~uint8_to_pwm();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<8> > accumulator_V;
    sc_signal< sc_lv<6> > out_p_V;
    sc_signal< sc_lv<8> > tmp_s_fu_216_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > p_tmp_9_5_fu_201_p3;
    sc_signal< sc_lv<1> > tmp_1_fu_195_p2;
    sc_signal< sc_lv<1> > tmp_3_1_fu_115_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_105_p2;
    sc_signal< sc_lv<2> > tmp1_demorgan_fu_145_p3;
    sc_signal< sc_lv<6> > tmp1_demorgan_cast_fu_153_p1;
    sc_signal< sc_lv<6> > tmp1_fu_157_p2;
    sc_signal< sc_lv<1> > tmp_3_5_fu_139_p2;
    sc_signal< sc_lv<1> > tmp_3_4_fu_133_p2;
    sc_signal< sc_lv<1> > tmp_3_3_fu_127_p2;
    sc_signal< sc_lv<1> > tmp_3_2_fu_121_p2;
    sc_signal< sc_lv<6> > tmp2_demorgan_fu_169_p6;
    sc_signal< sc_lv<6> > tmp_fu_163_p2;
    sc_signal< sc_lv<6> > tmp2_fu_183_p2;
    sc_signal< sc_lv<6> > tmp_9_5_fu_189_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_out_V();
    void thread_p_tmp_9_5_fu_201_p3();
    void thread_tmp1_demorgan_cast_fu_153_p1();
    void thread_tmp1_demorgan_fu_145_p3();
    void thread_tmp1_fu_157_p2();
    void thread_tmp2_demorgan_fu_169_p6();
    void thread_tmp2_fu_183_p2();
    void thread_tmp_1_fu_195_p2();
    void thread_tmp_3_1_fu_115_p2();
    void thread_tmp_3_2_fu_121_p2();
    void thread_tmp_3_3_fu_127_p2();
    void thread_tmp_3_4_fu_133_p2();
    void thread_tmp_3_5_fu_139_p2();
    void thread_tmp_3_fu_105_p2();
    void thread_tmp_9_5_fu_189_p2();
    void thread_tmp_fu_163_p2();
    void thread_tmp_s_fu_216_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
