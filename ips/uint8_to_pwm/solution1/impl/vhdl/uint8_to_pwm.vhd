-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity uint8_to_pwm is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    m0_V : IN STD_LOGIC_VECTOR (7 downto 0);
    m1_V : IN STD_LOGIC_VECTOR (7 downto 0);
    m2_V : IN STD_LOGIC_VECTOR (7 downto 0);
    m3_V : IN STD_LOGIC_VECTOR (7 downto 0);
    m4_V : IN STD_LOGIC_VECTOR (7 downto 0);
    m5_V : IN STD_LOGIC_VECTOR (7 downto 0);
    out_V : OUT STD_LOGIC_VECTOR (5 downto 0) );
end;


architecture behav of uint8_to_pwm is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "uint8_to_pwm,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10000.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.921000,HLS_SYN_LAT=0,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=15,HLS_SYN_LUT=150}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal accumulator_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal out_p_V : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    signal tmp_s_fu_216_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_tmp_9_5_fu_201_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_1_fu_115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_demorgan_fu_145_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp1_demorgan_cast_fu_153_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp1_fu_157_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_3_5_fu_139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_4_fu_133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_3_fu_127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_2_fu_121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_demorgan_fu_169_p6 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_163_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp2_fu_183_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_5_fu_189_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                accumulator_V <= tmp_s_fu_216_p2;
                out_p_V <= p_tmp_9_5_fu_201_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    out_V <= 
        ap_const_lv6_3F when (tmp_1_fu_195_p2(0) = '1') else 
        tmp_9_5_fu_189_p2;
    p_tmp_9_5_fu_201_p3 <= 
        ap_const_lv6_3F when (tmp_1_fu_195_p2(0) = '1') else 
        tmp_9_5_fu_189_p2;
    tmp1_demorgan_cast_fu_153_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_demorgan_fu_145_p3),6));
    tmp1_demorgan_fu_145_p3 <= (tmp_3_1_fu_115_p2 & tmp_3_fu_105_p2);
    tmp1_fu_157_p2 <= (tmp1_demorgan_cast_fu_153_p1 xor ap_const_lv6_3F);
    tmp2_demorgan_fu_169_p6 <= ((((tmp_3_5_fu_139_p2 & tmp_3_4_fu_133_p2) & tmp_3_3_fu_127_p2) & tmp_3_2_fu_121_p2) & ap_const_lv2_0);
    tmp2_fu_183_p2 <= (tmp2_demorgan_fu_169_p6 xor ap_const_lv6_3F);
    tmp_1_fu_195_p2 <= "1" when (accumulator_V = ap_const_lv8_0) else "0";
    tmp_3_1_fu_115_p2 <= "1" when (unsigned(accumulator_V) > unsigned(m1_V)) else "0";
    tmp_3_2_fu_121_p2 <= "1" when (unsigned(accumulator_V) > unsigned(m2_V)) else "0";
    tmp_3_3_fu_127_p2 <= "1" when (unsigned(accumulator_V) > unsigned(m3_V)) else "0";
    tmp_3_4_fu_133_p2 <= "1" when (unsigned(accumulator_V) > unsigned(m4_V)) else "0";
    tmp_3_5_fu_139_p2 <= "1" when (unsigned(accumulator_V) > unsigned(m5_V)) else "0";
    tmp_3_fu_105_p2 <= "1" when (unsigned(accumulator_V) > unsigned(m0_V)) else "0";
    tmp_9_5_fu_189_p2 <= (tmp_fu_163_p2 and tmp2_fu_183_p2);
    tmp_fu_163_p2 <= (tmp1_fu_157_p2 and out_p_V);
    tmp_s_fu_216_p2 <= std_logic_vector(unsigned(accumulator_V) + unsigned(ap_const_lv8_1));
end behav;
