// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="uint8_to_pwm,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10000.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.921000,HLS_SYN_LAT=0,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=15,HLS_SYN_LUT=150}" *)

module uint8_to_pwm (
        ap_clk,
        ap_rst,
        m0_V,
        m1_V,
        m2_V,
        m3_V,
        m4_V,
        m5_V,
        out_V
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input  [7:0] m0_V;
input  [7:0] m1_V;
input  [7:0] m2_V;
input  [7:0] m3_V;
input  [7:0] m4_V;
input  [7:0] m5_V;
output  [5:0] out_V;

reg   [7:0] accumulator_V;
reg   [5:0] out_p_V;
wire   [7:0] tmp_s_fu_216_p2;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] p_tmp_9_5_fu_201_p3;
wire   [0:0] tmp_1_fu_195_p2;
wire   [0:0] tmp_3_1_fu_115_p2;
wire   [0:0] tmp_3_fu_105_p2;
wire   [1:0] tmp1_demorgan_fu_145_p3;
wire   [5:0] tmp1_demorgan_cast_fu_153_p1;
wire   [5:0] tmp1_fu_157_p2;
wire   [0:0] tmp_3_5_fu_139_p2;
wire   [0:0] tmp_3_4_fu_133_p2;
wire   [0:0] tmp_3_3_fu_127_p2;
wire   [0:0] tmp_3_2_fu_121_p2;
wire   [5:0] tmp2_demorgan_fu_169_p6;
wire   [5:0] tmp_fu_163_p2;
wire   [5:0] tmp2_fu_183_p2;
wire   [5:0] tmp_9_5_fu_189_p2;
reg   [0:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 accumulator_V = 8'd0;
#0 out_p_V = 6'd63;
#0 ap_CS_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        accumulator_V <= tmp_s_fu_216_p2;
        out_p_V <= p_tmp_9_5_fu_201_p3;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign out_V = ((tmp_1_fu_195_p2[0:0] === 1'b1) ? 6'd63 : tmp_9_5_fu_189_p2);

assign p_tmp_9_5_fu_201_p3 = ((tmp_1_fu_195_p2[0:0] === 1'b1) ? 6'd63 : tmp_9_5_fu_189_p2);

assign tmp1_demorgan_cast_fu_153_p1 = tmp1_demorgan_fu_145_p3;

assign tmp1_demorgan_fu_145_p3 = {{tmp_3_1_fu_115_p2}, {tmp_3_fu_105_p2}};

assign tmp1_fu_157_p2 = (tmp1_demorgan_cast_fu_153_p1 ^ 6'd63);

assign tmp2_demorgan_fu_169_p6 = {{{{{tmp_3_5_fu_139_p2}, {tmp_3_4_fu_133_p2}}, {tmp_3_3_fu_127_p2}}, {tmp_3_2_fu_121_p2}}, {2'd0}};

assign tmp2_fu_183_p2 = (tmp2_demorgan_fu_169_p6 ^ 6'd63);

assign tmp_1_fu_195_p2 = ((accumulator_V == 8'd0) ? 1'b1 : 1'b0);

assign tmp_3_1_fu_115_p2 = ((accumulator_V > m1_V) ? 1'b1 : 1'b0);

assign tmp_3_2_fu_121_p2 = ((accumulator_V > m2_V) ? 1'b1 : 1'b0);

assign tmp_3_3_fu_127_p2 = ((accumulator_V > m3_V) ? 1'b1 : 1'b0);

assign tmp_3_4_fu_133_p2 = ((accumulator_V > m4_V) ? 1'b1 : 1'b0);

assign tmp_3_5_fu_139_p2 = ((accumulator_V > m5_V) ? 1'b1 : 1'b0);

assign tmp_3_fu_105_p2 = ((accumulator_V > m0_V) ? 1'b1 : 1'b0);

assign tmp_9_5_fu_189_p2 = (tmp_fu_163_p2 & tmp2_fu_183_p2);

assign tmp_fu_163_p2 = (tmp1_fu_157_p2 & out_p_V);

assign tmp_s_fu_216_p2 = (accumulator_V + 8'd1);

endmodule //uint8_to_pwm
