

================================================================
== Vivado HLS Report for 'uint8_to_pwm'
================================================================
* Date:           Fri Jul 13 12:13:05 2018

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        uint8_to_pwm
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10000.00|      2.92|     1250.00|
    +--------+----------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    0|    0|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

 <State 1> : 2.92ns
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8 %m0_V), !map !49"
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8 %m1_V), !map !55"
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8 %m2_V), !map !59"
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8 %m3_V), !map !63"
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8 %m4_V), !map !67"
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8 %m5_V), !map !71"
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i6* %out_V), !map !75"
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([13 x i8]* @uint8_to_pwm_str) nounwind"
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%m5_V_read = call i8 @_ssdm_op_Read.ap_none.i8(i8 %m5_V)"
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%m4_V_read = call i8 @_ssdm_op_Read.ap_none.i8(i8 %m4_V)"
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%m3_V_read = call i8 @_ssdm_op_Read.ap_none.i8(i8 %m3_V)"
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%m2_V_read = call i8 @_ssdm_op_Read.ap_none.i8(i8 %m2_V)"
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%m1_V_read = call i8 @_ssdm_op_Read.ap_none.i8(i8 %m1_V)"
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%m0_V_read = call i8 @_ssdm_op_Read.ap_none.i8(i8 %m0_V)"
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8 %m0_V, [8 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [2 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [uint8_to_pwm/uint8_to_pwm.cpp:5]
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8 %m1_V, [8 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [2 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [uint8_to_pwm/uint8_to_pwm.cpp:6]
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8 %m2_V, [8 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [2 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [uint8_to_pwm/uint8_to_pwm.cpp:7]
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8 %m3_V, [8 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [2 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [uint8_to_pwm/uint8_to_pwm.cpp:8]
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8 %m4_V, [8 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [2 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [uint8_to_pwm/uint8_to_pwm.cpp:9]
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8 %m5_V, [8 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [2 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [uint8_to_pwm/uint8_to_pwm.cpp:10]
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i6* %out_V, [8 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [uint8_to_pwm/uint8_to_pwm.cpp:11]
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [uint8_to_pwm/uint8_to_pwm.cpp:12]
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [uint8_to_pwm/uint8_to_pwm.cpp:14]
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%t_V = load i8* @accumulator_V, align 1" [uint8_to_pwm/uint8_to_pwm.cpp:31]
ST_1 : Operation 26 [1/1] (1.55ns)   --->   "%tmp_3 = icmp ugt i8 %t_V, %m0_V_read" [uint8_to_pwm/uint8_to_pwm.cpp:31]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%out_p_V_load = load i6* @out_p_V, align 1" [uint8_to_pwm/uint8_to_pwm.cpp:31]
ST_1 : Operation 28 [1/1] (1.55ns)   --->   "%tmp_3_1 = icmp ugt i8 %t_V, %m1_V_read" [uint8_to_pwm/uint8_to_pwm.cpp:31]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (1.55ns)   --->   "%tmp_3_2 = icmp ugt i8 %t_V, %m2_V_read" [uint8_to_pwm/uint8_to_pwm.cpp:31]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (1.55ns)   --->   "%tmp_3_3 = icmp ugt i8 %t_V, %m3_V_read" [uint8_to_pwm/uint8_to_pwm.cpp:31]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (1.55ns)   --->   "%tmp_3_4 = icmp ugt i8 %t_V, %m4_V_read" [uint8_to_pwm/uint8_to_pwm.cpp:31]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (1.55ns)   --->   "%tmp_3_5 = icmp ugt i8 %t_V, %m5_V_read" [uint8_to_pwm/uint8_to_pwm.cpp:31]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node p_tmp_9_5)   --->   "%tmp1_demorgan = call i2 @_ssdm_op_BitConcatenate.i2.i1.i1(i1 %tmp_3_1, i1 %tmp_3)" [uint8_to_pwm/uint8_to_pwm.cpp:31]
ST_1 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node p_tmp_9_5)   --->   "%tmp1_demorgan_cast = zext i2 %tmp1_demorgan to i6" [uint8_to_pwm/uint8_to_pwm.cpp:31]
ST_1 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node p_tmp_9_5)   --->   "%tmp1 = xor i6 %tmp1_demorgan_cast, -1" [uint8_to_pwm/uint8_to_pwm.cpp:31]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node p_tmp_9_5)   --->   "%tmp = and i6 %out_p_V_load, %tmp1" [uint8_to_pwm/uint8_to_pwm.cpp:31]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node p_tmp_9_5)   --->   "%tmp2_demorgan = call i6 @_ssdm_op_BitConcatenate.i6.i1.i1.i1.i1.i2(i1 %tmp_3_5, i1 %tmp_3_4, i1 %tmp_3_3, i1 %tmp_3_2, i2 0)" [uint8_to_pwm/uint8_to_pwm.cpp:31]
ST_1 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node p_tmp_9_5)   --->   "%tmp2 = xor i6 %tmp2_demorgan, -1" [uint8_to_pwm/uint8_to_pwm.cpp:31]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node p_tmp_9_5)   --->   "%tmp_9_5 = and i6 %tmp, %tmp2" [uint8_to_pwm/uint8_to_pwm.cpp:31]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (1.55ns)   --->   "%tmp_1 = icmp eq i8 %t_V, 0" [uint8_to_pwm/uint8_to_pwm.cpp:34]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (1.37ns) (out node of the LUT)   --->   "%p_tmp_9_5 = select i1 %tmp_1, i6 -1, i6 %tmp_9_5" [uint8_to_pwm/uint8_to_pwm.cpp:34]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "store i6 %p_tmp_9_5, i6* @out_p_V, align 1" [uint8_to_pwm/uint8_to_pwm.cpp:31]
ST_1 : Operation 43 [1/1] (1.91ns)   --->   "%tmp_s = add i8 %t_V, 1" [uint8_to_pwm/uint8_to_pwm.cpp:36]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "store i8 %tmp_s, i8* @accumulator_V, align 1" [uint8_to_pwm/uint8_to_pwm.cpp:36]
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i6P(i6* %out_V, i6 %p_tmp_9_5)" [uint8_to_pwm/uint8_to_pwm.cpp:37]
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "ret void" [uint8_to_pwm/uint8_to_pwm.cpp:38]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 1e+04ns, clock uncertainty: 1.25e+03ns.

 <State 1>: 2.92ns
The critical path consists of the following:
	wire read on port 'm5_V' [18]  (0 ns)
	'icmp' operation ('tmp_3_5', uint8_to_pwm/uint8_to_pwm.cpp:31) [40]  (1.55 ns)
	'xor' operation ('tmp2', uint8_to_pwm/uint8_to_pwm.cpp:31) [46]  (0 ns)
	'and' operation ('tmp_9_5', uint8_to_pwm/uint8_to_pwm.cpp:31) [47]  (0 ns)
	'select' operation ('p_tmp_9_5', uint8_to_pwm/uint8_to_pwm.cpp:34) [49]  (1.37 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
