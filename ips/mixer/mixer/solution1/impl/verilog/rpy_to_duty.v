// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="rpy_to_duty,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=50.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=36.732779,HLS_SYN_LAT=3,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=38,HLS_SYN_FF=189,HLS_SYN_LUT=2877}" *)

module rpy_to_duty (
        ap_clk,
        ap_rst_n,
        kill,
        m0_V,
        m1_V,
        m2_V,
        m3_V,
        m4_V,
        m5_V,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   kill;
output  [7:0] m0_V;
output  [7:0] m1_V;
output  [7:0] m2_V;
output  [7:0] m3_V;
output  [7:0] m4_V;
output  [7:0] m5_V;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg[7:0] m0_V;
reg[7:0] m1_V;
reg[7:0] m2_V;
reg[7:0] m3_V;
reg[7:0] m4_V;
reg[7:0] m5_V;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [1:0] regs_in_V_address0;
reg    regs_in_V_ce0;
wire   [7:0] regs_in_V_q0;
reg   [7:0] reg_228;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [0:0] kill_read_read_fu_134_p2;
reg   [7:0] p_Val2_s_reg_1405;
wire    ap_CS_fsm_state2;
wire  signed [25:0] tmp_8_fu_1384_p2;
reg  signed [25:0] tmp_8_reg_1426;
wire  signed [25:0] tmp_23_fu_1390_p2;
reg  signed [25:0] tmp_23_reg_1432;
wire   [7:0] tmp_62_fu_1375_p3;
wire    ap_CS_fsm_state5;
wire   [7:0] tmp_56_fu_1197_p3;
wire   [7:0] tmp_50_fu_1028_p3;
wire   [7:0] tmp_43_fu_850_p3;
wire   [7:0] tmp_26_fu_672_p3;
wire   [7:0] tmp_12_fu_496_p3;
wire   [12:0] tmp_4_fu_232_p3;
wire   [12:0] p_Val2_4_fu_244_p3;
wire  signed [13:0] tmp_9_cast_fu_252_p1;
wire   [23:0] p_Val2_5_fu_262_p3;
wire   [24:0] p_Val2_8_fu_273_p3;
wire  signed [25:0] tmp_10_cast4_cast_fu_285_p1;
wire   [25:0] tmp_s_fu_289_p2;
wire  signed [25:0] p_Val2_5_cast_fu_269_p1;
(* use_dsp48 = "no" *) wire   [25:0] tmp_1_fu_299_p2;
wire  signed [26:0] tmp_12_cast_fu_304_p1;
wire  signed [26:0] tmp_10_cast4_fu_281_p1;
wire   [26:0] r_V_19_tr_fu_308_p2;
wire  signed [26:0] mul1_fu_318_p1;
wire   [53:0] mul1_fu_318_p2;
wire   [53:0] neg_mul1_fu_324_p2;
wire   [24:0] tmp_33_fu_338_p4;
wire   [24:0] tmp_51_fu_352_p4;
wire   [0:0] tmp_14_fu_330_p3;
wire  signed [26:0] tmp_fu_348_p1;
wire  signed [26:0] tmp_2_fu_362_p1;
wire   [26:0] tmp_6_fu_366_p3;
wire   [26:0] neg_ti1_fu_374_p2;
wire   [13:0] r_V_fu_256_p2;
wire   [26:0] tmp_3_fu_380_p3;
wire   [13:0] p_Val2_6_fu_404_p0;
wire   [37:0] OP1_V_2_cast_fu_396_p1;
wire  signed [26:0] p_Val2_6_fu_404_p1;
wire   [36:0] tmp_5_fu_410_p3;
wire   [37:0] p_Val2_6_fu_404_p2;
wire  signed [38:0] tmp_13_cast_fu_422_p1;
wire  signed [38:0] tmp_14_cast_fu_426_p1;
wire   [38:0] r_V_1_fu_430_p2;
wire   [46:0] p_shl1_fu_440_p3;
wire  signed [46:0] OP1_V_3_cast_fu_436_p1;
wire   [46:0] r_V_13_fu_448_p2;
wire   [35:0] tmp_67_fu_462_p1;
wire   [7:0] tmp_9_fu_472_p4;
wire   [0:0] tmp_7_fu_466_p2;
wire   [7:0] tmp_10_fu_482_p2;
wire   [0:0] tmp_66_fu_454_p3;
wire   [7:0] tmp_11_fu_488_p3;
wire   [24:0] tmp_13_fu_505_p3;
wire  signed [25:0] tmp_14_cast1_fu_512_p1;
wire   [25:0] r_V_21_tr_fu_516_p2;
wire  signed [25:0] mul3_fu_526_p1;
wire   [53:0] mul3_fu_526_p2;
wire   [53:0] neg_mul2_fu_532_p2;
wire   [24:0] tmp_69_fu_546_p4;
wire   [24:0] tmp_70_fu_560_p4;
wire   [0:0] tmp_68_fu_538_p3;
wire  signed [26:0] tmp_15_fu_556_p1;
wire  signed [26:0] tmp_16_fu_570_p1;
wire   [26:0] tmp_18_fu_574_p3;
wire   [26:0] neg_ti2_fu_582_p2;
wire   [26:0] tmp_17_fu_588_p3;
wire   [13:0] p_Val2_9_fu_600_p0;
wire  signed [26:0] p_Val2_9_fu_600_p1;
wire   [38:0] p_Val2_9_fu_600_p2;
wire   [38:0] r_V_3_fu_606_p2;
wire   [46:0] p_shl2_fu_616_p3;
wire  signed [46:0] OP1_V_4_cast_fu_612_p1;
wire   [46:0] r_V_14_fu_624_p2;
wire   [35:0] tmp_72_fu_638_p1;
wire   [7:0] tmp_20_fu_648_p4;
wire   [0:0] tmp_19_fu_642_p2;
wire   [7:0] tmp_21_fu_658_p2;
wire   [0:0] tmp_71_fu_630_p3;
wire   [7:0] tmp_22_fu_664_p3;
(* use_dsp48 = "no" *) wire   [25:0] tmp_24_fu_681_p2;
wire  signed [26:0] tmp_24_cast_fu_686_p1;
wire   [26:0] r_V_23_tr_fu_690_p2;
wire  signed [26:0] mul4_fu_700_p1;
wire   [53:0] mul4_fu_700_p2;
wire   [53:0] neg_mul4_fu_706_p2;
wire   [24:0] tmp_74_fu_720_p4;
wire   [24:0] tmp_75_fu_734_p4;
wire   [0:0] tmp_73_fu_712_p3;
wire  signed [26:0] tmp_30_fu_730_p1;
wire  signed [26:0] tmp_32_fu_744_p1;
wire   [26:0] tmp_35_fu_748_p3;
wire   [26:0] neg_ti3_fu_756_p2;
wire   [26:0] tmp_25_fu_762_p3;
wire   [13:0] p_Val2_11_fu_774_p0;
wire  signed [26:0] p_Val2_11_fu_774_p1;
wire   [37:0] p_Val2_11_fu_774_p2;
wire  signed [38:0] tmp_26_cast_fu_780_p1;
wire   [38:0] r_V_5_fu_784_p2;
wire   [46:0] p_shl3_fu_794_p3;
wire  signed [46:0] OP1_V_5_cast_fu_790_p1;
wire   [46:0] r_V_15_fu_802_p2;
wire   [35:0] tmp_77_fu_816_p1;
wire   [7:0] tmp_39_fu_826_p4;
wire   [0:0] tmp_27_fu_820_p2;
wire   [7:0] tmp_41_fu_836_p2;
wire   [0:0] tmp_76_fu_808_p3;
wire   [7:0] tmp_42_fu_842_p3;
(* use_dsp48 = "no" *) wire   [25:0] tmp_28_fu_859_p2;
wire  signed [26:0] tmp_28_cast_fu_864_p1;
wire   [26:0] r_V_25_tr_fu_868_p2;
wire  signed [26:0] mul5_fu_878_p1;
wire   [53:0] mul5_fu_878_p2;
wire   [53:0] neg_mul5_fu_884_p2;
wire   [24:0] tmp_79_fu_898_p4;
wire   [24:0] tmp_80_fu_912_p4;
wire   [0:0] tmp_78_fu_890_p3;
wire  signed [26:0] tmp_44_fu_908_p1;
wire  signed [26:0] tmp_45_fu_922_p1;
wire   [26:0] tmp_49_fu_926_p3;
wire   [26:0] neg_ti4_fu_934_p2;
wire   [26:0] tmp_29_fu_940_p3;
wire   [13:0] p_Val2_13_fu_952_p0;
wire  signed [26:0] p_Val2_13_fu_952_p1;
wire   [37:0] p_Val2_13_fu_952_p2;
wire  signed [38:0] tmp_30_cast_fu_958_p1;
wire   [38:0] r_V_7_fu_962_p2;
wire   [46:0] p_shl4_fu_972_p3;
wire  signed [46:0] OP1_V_6_cast_fu_968_p1;
wire   [46:0] r_V_16_fu_980_p2;
wire   [35:0] tmp_82_fu_994_p1;
wire   [7:0] tmp_46_fu_1004_p4;
wire   [0:0] tmp_31_fu_998_p2;
wire   [7:0] tmp_47_fu_1014_p2;
wire   [0:0] tmp_81_fu_986_p3;
wire   [7:0] tmp_48_fu_1020_p3;
wire  signed [26:0] tmp_11_cast_cast_fu_295_p1;
wire  signed [26:0] tmp_33_cast_fu_1037_p1;
wire   [26:0] r_V_27_tr_fu_1041_p2;
wire  signed [26:0] mul2_fu_1051_p1;
wire   [54:0] mul2_fu_1051_p2;
wire   [54:0] neg_mul3_fu_1057_p2;
wire   [24:0] tmp_84_fu_1071_p4;
wire   [24:0] tmp_85_fu_1085_p4;
wire   [0:0] tmp_83_fu_1063_p3;
wire  signed [27:0] tmp_55_fu_1081_p1;
wire  signed [27:0] tmp_57_fu_1095_p1;
wire   [27:0] tmp_61_fu_1099_p3;
wire   [27:0] neg_ti8_fu_1107_p2;
wire   [27:0] tmp_34_fu_1113_p3;
wire   [13:0] p_Val2_15_fu_1125_p0;
wire  signed [26:0] p_Val2_15_fu_1125_p1;
wire  signed [39:0] tmp_13_cast1_fu_418_p1;
wire   [39:0] p_Val2_15_fu_1125_p2;
wire   [39:0] r_V_9_fu_1131_p2;
wire   [47:0] p_shl5_fu_1141_p3;
wire  signed [47:0] OP1_V_7_cast_fu_1137_p1;
wire   [47:0] r_V_17_fu_1149_p2;
wire   [35:0] tmp_87_fu_1163_p1;
wire   [7:0] tmp_52_fu_1173_p4;
wire   [0:0] tmp_36_fu_1167_p2;
wire   [7:0] tmp_53_fu_1183_p2;
wire   [0:0] tmp_86_fu_1155_p3;
wire   [7:0] tmp_54_fu_1189_p3;
(* use_dsp48 = "no" *) wire   [25:0] tmp_37_fu_1206_p2;
wire  signed [26:0] tmp_37_cast_fu_1211_p1;
wire   [26:0] r_V_29_tr_fu_1215_p2;
wire  signed [26:0] mul_fu_1225_p1;
wire   [53:0] mul_fu_1225_p2;
wire   [53:0] neg_mul_fu_1231_p2;
wire   [24:0] tmp_89_fu_1245_p4;
wire   [24:0] tmp_90_fu_1259_p4;
wire   [0:0] tmp_88_fu_1237_p3;
wire  signed [26:0] tmp_63_fu_1255_p1;
wire  signed [26:0] tmp_64_fu_1269_p1;
wire   [26:0] tmp_65_fu_1273_p3;
wire   [26:0] neg_ti_fu_1281_p2;
wire   [26:0] tmp_38_fu_1287_p3;
wire   [13:0] p_Val2_17_fu_1299_p0;
wire  signed [26:0] p_Val2_17_fu_1299_p1;
wire   [37:0] p_Val2_17_fu_1299_p2;
wire  signed [38:0] tmp_39_cast_fu_1305_p1;
wire   [38:0] r_V_11_fu_1309_p2;
wire   [46:0] p_shl_fu_1319_p3;
wire  signed [46:0] OP1_V_8_cast_fu_1315_p1;
wire   [46:0] r_V_18_fu_1327_p2;
wire   [35:0] tmp_92_fu_1341_p1;
wire   [7:0] tmp_58_fu_1351_p4;
wire   [0:0] tmp_40_fu_1345_p2;
wire   [7:0] tmp_59_fu_1361_p2;
wire   [0:0] tmp_91_fu_1333_p3;
wire   [7:0] tmp_60_fu_1367_p3;
wire  signed [12:0] tmp_8_fu_1384_p0;
wire  signed [12:0] tmp_8_fu_1384_p1;
wire  signed [25:0] tmp_cast_fu_240_p1;
wire   [12:0] tmp_23_fu_1390_p0;
wire  signed [12:0] tmp_23_fu_1390_p1;
reg   [4:0] ap_NS_fsm;
wire   [39:0] p_Val2_15_fu_1125_p00;
wire   [38:0] p_Val2_9_fu_600_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
end

rpy_to_duty_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
rpy_to_duty_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .regs_in_V_address0(regs_in_V_address0),
    .regs_in_V_ce0(regs_in_V_ce0),
    .regs_in_V_q0(regs_in_V_q0)
);

rpy_to_duty_mul_mbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
rpy_to_duty_mul_mbkb_U1(
    .din0(tmp_8_fu_1384_p0),
    .din1(tmp_8_fu_1384_p1),
    .dout(tmp_8_fu_1384_p2)
);

rpy_to_duty_mul_mcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
rpy_to_duty_mul_mcud_U2(
    .din0(tmp_23_fu_1390_p0),
    .din1(tmp_23_fu_1390_p1),
    .dout(tmp_23_fu_1390_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_Val2_s_reg_1405 <= regs_in_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_228 <= regs_in_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_23_reg_1432 <= tmp_23_fu_1390_p2;
        tmp_8_reg_1426 <= tmp_8_fu_1384_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((kill_read_read_fu_134_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        m0_V = tmp_12_fu_496_p3;
    end else if (((kill_read_read_fu_134_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        m0_V = 8'd0;
    end else begin
        m0_V = 8'd0;
    end
end

always @ (*) begin
    if (((kill_read_read_fu_134_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        m1_V = tmp_26_fu_672_p3;
    end else if (((kill_read_read_fu_134_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        m1_V = 8'd0;
    end else begin
        m1_V = 8'd0;
    end
end

always @ (*) begin
    if (((kill_read_read_fu_134_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        m2_V = tmp_43_fu_850_p3;
    end else if (((kill_read_read_fu_134_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        m2_V = 8'd0;
    end else begin
        m2_V = 8'd0;
    end
end

always @ (*) begin
    if (((kill_read_read_fu_134_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        m3_V = tmp_50_fu_1028_p3;
    end else if (((kill_read_read_fu_134_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        m3_V = 8'd0;
    end else begin
        m3_V = 8'd0;
    end
end

always @ (*) begin
    if (((kill_read_read_fu_134_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        m4_V = tmp_56_fu_1197_p3;
    end else if (((kill_read_read_fu_134_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        m4_V = 8'd0;
    end else begin
        m4_V = 8'd0;
    end
end

always @ (*) begin
    if (((kill_read_read_fu_134_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        m5_V = tmp_62_fu_1375_p3;
    end else if (((kill_read_read_fu_134_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        m5_V = 8'd0;
    end else begin
        m5_V = 8'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        regs_in_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        regs_in_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        regs_in_V_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        regs_in_V_address0 = 64'd0;
    end else begin
        regs_in_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        regs_in_V_ce0 = 1'b1;
    end else begin
        regs_in_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((kill_read_read_fu_134_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((kill_read_read_fu_134_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP1_V_2_cast_fu_396_p1 = r_V_fu_256_p2;

assign OP1_V_3_cast_fu_436_p1 = $signed(r_V_1_fu_430_p2);

assign OP1_V_4_cast_fu_612_p1 = $signed(r_V_3_fu_606_p2);

assign OP1_V_5_cast_fu_790_p1 = $signed(r_V_5_fu_784_p2);

assign OP1_V_6_cast_fu_968_p1 = $signed(r_V_7_fu_962_p2);

assign OP1_V_7_cast_fu_1137_p1 = $signed(r_V_9_fu_1131_p2);

assign OP1_V_8_cast_fu_1315_p1 = $signed(r_V_11_fu_1309_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign kill_read_read_fu_134_p2 = kill;

assign mul1_fu_318_p1 = r_V_19_tr_fu_308_p2;

assign mul1_fu_318_p2 = ($signed({{1'b0}, {54'd178956971}}) * $signed(mul1_fu_318_p1));

assign mul2_fu_1051_p1 = r_V_27_tr_fu_1041_p2;

assign mul2_fu_1051_p2 = ($signed({{1'b0}, {55'd357913942}}) * $signed(mul2_fu_1051_p1));

assign mul3_fu_526_p1 = r_V_21_tr_fu_516_p2;

assign mul3_fu_526_p2 = ($signed({{1'b0}, {54'd178956971}}) * $signed(mul3_fu_526_p1));

assign mul4_fu_700_p1 = r_V_23_tr_fu_690_p2;

assign mul4_fu_700_p2 = ($signed({{1'b0}, {54'd178956971}}) * $signed(mul4_fu_700_p1));

assign mul5_fu_878_p1 = r_V_25_tr_fu_868_p2;

assign mul5_fu_878_p2 = ($signed({{1'b0}, {54'd178956971}}) * $signed(mul5_fu_878_p1));

assign mul_fu_1225_p1 = r_V_29_tr_fu_1215_p2;

assign mul_fu_1225_p2 = ($signed({{1'b0}, {54'd178956971}}) * $signed(mul_fu_1225_p1));

assign neg_mul1_fu_324_p2 = (54'd0 - mul1_fu_318_p2);

assign neg_mul2_fu_532_p2 = (54'd0 - mul3_fu_526_p2);

assign neg_mul3_fu_1057_p2 = (55'd0 - mul2_fu_1051_p2);

assign neg_mul4_fu_706_p2 = (54'd0 - mul4_fu_700_p2);

assign neg_mul5_fu_884_p2 = (54'd0 - mul5_fu_878_p2);

assign neg_mul_fu_1231_p2 = (54'd0 - mul_fu_1225_p2);

assign neg_ti1_fu_374_p2 = (27'd0 - tmp_6_fu_366_p3);

assign neg_ti2_fu_582_p2 = (27'd0 - tmp_18_fu_574_p3);

assign neg_ti3_fu_756_p2 = (27'd0 - tmp_35_fu_748_p3);

assign neg_ti4_fu_934_p2 = (27'd0 - tmp_49_fu_926_p3);

assign neg_ti8_fu_1107_p2 = (28'd0 - tmp_61_fu_1099_p3);

assign neg_ti_fu_1281_p2 = (27'd0 - tmp_65_fu_1273_p3);

assign p_Val2_11_fu_774_p0 = OP1_V_2_cast_fu_396_p1;

assign p_Val2_11_fu_774_p1 = tmp_25_fu_762_p3;

assign p_Val2_11_fu_774_p2 = ($signed({{1'b0}, {p_Val2_11_fu_774_p0}}) * $signed(p_Val2_11_fu_774_p1));

assign p_Val2_13_fu_952_p0 = OP1_V_2_cast_fu_396_p1;

assign p_Val2_13_fu_952_p1 = tmp_29_fu_940_p3;

assign p_Val2_13_fu_952_p2 = ($signed({{1'b0}, {p_Val2_13_fu_952_p0}}) * $signed(p_Val2_13_fu_952_p1));

assign p_Val2_15_fu_1125_p0 = p_Val2_15_fu_1125_p00;

assign p_Val2_15_fu_1125_p00 = r_V_fu_256_p2;

assign p_Val2_15_fu_1125_p1 = tmp_34_fu_1113_p3;

assign p_Val2_15_fu_1125_p2 = ($signed({{1'b0}, {p_Val2_15_fu_1125_p0}}) * $signed(p_Val2_15_fu_1125_p1));

assign p_Val2_17_fu_1299_p0 = OP1_V_2_cast_fu_396_p1;

assign p_Val2_17_fu_1299_p1 = tmp_38_fu_1287_p3;

assign p_Val2_17_fu_1299_p2 = ($signed({{1'b0}, {p_Val2_17_fu_1299_p0}}) * $signed(p_Val2_17_fu_1299_p1));

assign p_Val2_4_fu_244_p3 = {{regs_in_V_q0}, {5'd0}};

assign p_Val2_5_cast_fu_269_p1 = $signed(p_Val2_5_fu_262_p3);

assign p_Val2_5_fu_262_p3 = {{p_Val2_s_reg_1405}, {16'd0}};

assign p_Val2_6_fu_404_p0 = OP1_V_2_cast_fu_396_p1;

assign p_Val2_6_fu_404_p1 = tmp_3_fu_380_p3;

assign p_Val2_6_fu_404_p2 = ($signed({{1'b0}, {p_Val2_6_fu_404_p0}}) * $signed(p_Val2_6_fu_404_p1));

assign p_Val2_8_fu_273_p3 = {{reg_228}, {17'd0}};

assign p_Val2_9_fu_600_p0 = p_Val2_9_fu_600_p00;

assign p_Val2_9_fu_600_p00 = r_V_fu_256_p2;

assign p_Val2_9_fu_600_p1 = tmp_17_fu_588_p3;

assign p_Val2_9_fu_600_p2 = ($signed({{1'b0}, {p_Val2_9_fu_600_p0}}) * $signed(p_Val2_9_fu_600_p1));

assign p_shl1_fu_440_p3 = {{r_V_1_fu_430_p2}, {8'd0}};

assign p_shl2_fu_616_p3 = {{r_V_3_fu_606_p2}, {8'd0}};

assign p_shl3_fu_794_p3 = {{r_V_5_fu_784_p2}, {8'd0}};

assign p_shl4_fu_972_p3 = {{r_V_7_fu_962_p2}, {8'd0}};

assign p_shl5_fu_1141_p3 = {{r_V_9_fu_1131_p2}, {8'd0}};

assign p_shl_fu_1319_p3 = {{r_V_11_fu_1309_p2}, {8'd0}};

assign r_V_11_fu_1309_p2 = ($signed(tmp_13_cast_fu_422_p1) + $signed(tmp_39_cast_fu_1305_p1));

assign r_V_13_fu_448_p2 = ($signed(p_shl1_fu_440_p3) - $signed(OP1_V_3_cast_fu_436_p1));

assign r_V_14_fu_624_p2 = ($signed(p_shl2_fu_616_p3) - $signed(OP1_V_4_cast_fu_612_p1));

assign r_V_15_fu_802_p2 = ($signed(p_shl3_fu_794_p3) - $signed(OP1_V_5_cast_fu_790_p1));

assign r_V_16_fu_980_p2 = ($signed(p_shl4_fu_972_p3) - $signed(OP1_V_6_cast_fu_968_p1));

assign r_V_17_fu_1149_p2 = ($signed(p_shl5_fu_1141_p3) - $signed(OP1_V_7_cast_fu_1137_p1));

assign r_V_18_fu_1327_p2 = ($signed(p_shl_fu_1319_p3) - $signed(OP1_V_8_cast_fu_1315_p1));

assign r_V_19_tr_fu_308_p2 = ($signed(tmp_12_cast_fu_304_p1) - $signed(tmp_10_cast4_fu_281_p1));

assign r_V_1_fu_430_p2 = ($signed(tmp_13_cast_fu_422_p1) + $signed(tmp_14_cast_fu_426_p1));

assign r_V_21_tr_fu_516_p2 = ($signed(tmp_10_cast4_cast_fu_285_p1) + $signed(tmp_14_cast1_fu_512_p1));

assign r_V_23_tr_fu_690_p2 = ($signed(tmp_24_cast_fu_686_p1) - $signed(tmp_10_cast4_fu_281_p1));

assign r_V_25_tr_fu_868_p2 = ($signed(tmp_28_cast_fu_864_p1) + $signed(tmp_10_cast4_fu_281_p1));

assign r_V_27_tr_fu_1041_p2 = ($signed(tmp_11_cast_cast_fu_295_p1) - $signed(tmp_33_cast_fu_1037_p1));

assign r_V_29_tr_fu_1215_p2 = ($signed(tmp_37_cast_fu_1211_p1) + $signed(tmp_10_cast4_fu_281_p1));

assign r_V_3_fu_606_p2 = ($signed(tmp_13_cast_fu_422_p1) + $signed(p_Val2_9_fu_600_p2));

assign r_V_5_fu_784_p2 = ($signed(tmp_13_cast_fu_422_p1) + $signed(tmp_26_cast_fu_780_p1));

assign r_V_7_fu_962_p2 = ($signed(tmp_13_cast_fu_422_p1) + $signed(tmp_30_cast_fu_958_p1));

assign r_V_9_fu_1131_p2 = ($signed(tmp_13_cast1_fu_418_p1) + $signed(p_Val2_15_fu_1125_p2));

assign r_V_fu_256_p2 = ($signed(14'd4096) - $signed(tmp_9_cast_fu_252_p1));

assign tmp_10_cast4_cast_fu_285_p1 = $signed(p_Val2_8_fu_273_p3);

assign tmp_10_cast4_fu_281_p1 = $signed(p_Val2_8_fu_273_p3);

assign tmp_10_fu_482_p2 = (8'd1 + tmp_9_fu_472_p4);

assign tmp_11_cast_cast_fu_295_p1 = $signed(tmp_s_fu_289_p2);

assign tmp_11_fu_488_p3 = ((tmp_7_fu_466_p2[0:0] === 1'b1) ? tmp_9_fu_472_p4 : tmp_10_fu_482_p2);

assign tmp_12_cast_fu_304_p1 = $signed(tmp_1_fu_299_p2);

assign tmp_12_fu_496_p3 = ((tmp_66_fu_454_p3[0:0] === 1'b1) ? tmp_11_fu_488_p3 : tmp_9_fu_472_p4);

assign tmp_13_cast1_fu_418_p1 = $signed(tmp_5_fu_410_p3);

assign tmp_13_cast_fu_422_p1 = $signed(tmp_5_fu_410_p3);

assign tmp_13_fu_505_p3 = {{p_Val2_s_reg_1405}, {17'd0}};

assign tmp_14_cast1_fu_512_p1 = $signed(tmp_13_fu_505_p3);

assign tmp_14_cast_fu_426_p1 = $signed(p_Val2_6_fu_404_p2);

assign tmp_14_fu_330_p3 = r_V_19_tr_fu_308_p2[32'd26];

assign tmp_15_fu_556_p1 = $signed(tmp_69_fu_546_p4);

assign tmp_16_fu_570_p1 = $signed(tmp_70_fu_560_p4);

assign tmp_17_fu_588_p3 = ((tmp_68_fu_538_p3[0:0] === 1'b1) ? neg_ti2_fu_582_p2 : tmp_16_fu_570_p1);

assign tmp_18_fu_574_p3 = ((tmp_68_fu_538_p3[0:0] === 1'b1) ? tmp_15_fu_556_p1 : tmp_16_fu_570_p1);

assign tmp_19_fu_642_p2 = ((tmp_72_fu_638_p1 == 36'd0) ? 1'b1 : 1'b0);

assign tmp_1_fu_299_p2 = ($signed(tmp_8_reg_1426) + $signed(p_Val2_5_cast_fu_269_p1));

assign tmp_20_fu_648_p4 = {{r_V_14_fu_624_p2[43:36]}};

assign tmp_21_fu_658_p2 = (8'd1 + tmp_20_fu_648_p4);

assign tmp_22_fu_664_p3 = ((tmp_19_fu_642_p2[0:0] === 1'b1) ? tmp_20_fu_648_p4 : tmp_21_fu_658_p2);

assign tmp_23_fu_1390_p0 = 26'd2364;

assign tmp_23_fu_1390_p1 = tmp_cast_fu_240_p1;

assign tmp_24_cast_fu_686_p1 = $signed(tmp_24_fu_681_p2);

assign tmp_24_fu_681_p2 = ($signed(tmp_23_reg_1432) + $signed(p_Val2_5_cast_fu_269_p1));

assign tmp_25_fu_762_p3 = ((tmp_73_fu_712_p3[0:0] === 1'b1) ? neg_ti3_fu_756_p2 : tmp_32_fu_744_p1);

assign tmp_26_cast_fu_780_p1 = $signed(p_Val2_11_fu_774_p2);

assign tmp_26_fu_672_p3 = ((tmp_71_fu_630_p3[0:0] === 1'b1) ? tmp_22_fu_664_p3 : tmp_20_fu_648_p4);

assign tmp_27_fu_820_p2 = ((tmp_77_fu_816_p1 == 36'd0) ? 1'b1 : 1'b0);

assign tmp_28_cast_fu_864_p1 = $signed(tmp_28_fu_859_p2);

assign tmp_28_fu_859_p2 = ($signed(tmp_8_reg_1426) - $signed(p_Val2_5_cast_fu_269_p1));

assign tmp_29_fu_940_p3 = ((tmp_78_fu_890_p3[0:0] === 1'b1) ? neg_ti4_fu_934_p2 : tmp_45_fu_922_p1);

assign tmp_2_fu_362_p1 = $signed(tmp_51_fu_352_p4);

assign tmp_30_cast_fu_958_p1 = $signed(p_Val2_13_fu_952_p2);

assign tmp_30_fu_730_p1 = $signed(tmp_74_fu_720_p4);

assign tmp_31_fu_998_p2 = ((tmp_82_fu_994_p1 == 36'd0) ? 1'b1 : 1'b0);

assign tmp_32_fu_744_p1 = $signed(tmp_75_fu_734_p4);

assign tmp_33_cast_fu_1037_p1 = $signed(tmp_13_fu_505_p3);

assign tmp_33_fu_338_p4 = {{neg_mul1_fu_324_p2[53:29]}};

assign tmp_34_fu_1113_p3 = ((tmp_83_fu_1063_p3[0:0] === 1'b1) ? neg_ti8_fu_1107_p2 : tmp_57_fu_1095_p1);

assign tmp_35_fu_748_p3 = ((tmp_73_fu_712_p3[0:0] === 1'b1) ? tmp_30_fu_730_p1 : tmp_32_fu_744_p1);

assign tmp_36_fu_1167_p2 = ((tmp_87_fu_1163_p1 == 36'd0) ? 1'b1 : 1'b0);

assign tmp_37_cast_fu_1211_p1 = $signed(tmp_37_fu_1206_p2);

assign tmp_37_fu_1206_p2 = ($signed(tmp_23_reg_1432) - $signed(p_Val2_5_cast_fu_269_p1));

assign tmp_38_fu_1287_p3 = ((tmp_88_fu_1237_p3[0:0] === 1'b1) ? neg_ti_fu_1281_p2 : tmp_64_fu_1269_p1);

assign tmp_39_cast_fu_1305_p1 = $signed(p_Val2_17_fu_1299_p2);

assign tmp_39_fu_826_p4 = {{r_V_15_fu_802_p2[43:36]}};

assign tmp_3_fu_380_p3 = ((tmp_14_fu_330_p3[0:0] === 1'b1) ? neg_ti1_fu_374_p2 : tmp_2_fu_362_p1);

assign tmp_40_fu_1345_p2 = ((tmp_92_fu_1341_p1 == 36'd0) ? 1'b1 : 1'b0);

assign tmp_41_fu_836_p2 = (8'd1 + tmp_39_fu_826_p4);

assign tmp_42_fu_842_p3 = ((tmp_27_fu_820_p2[0:0] === 1'b1) ? tmp_39_fu_826_p4 : tmp_41_fu_836_p2);

assign tmp_43_fu_850_p3 = ((tmp_76_fu_808_p3[0:0] === 1'b1) ? tmp_42_fu_842_p3 : tmp_39_fu_826_p4);

assign tmp_44_fu_908_p1 = $signed(tmp_79_fu_898_p4);

assign tmp_45_fu_922_p1 = $signed(tmp_80_fu_912_p4);

assign tmp_46_fu_1004_p4 = {{r_V_16_fu_980_p2[43:36]}};

assign tmp_47_fu_1014_p2 = (8'd1 + tmp_46_fu_1004_p4);

assign tmp_48_fu_1020_p3 = ((tmp_31_fu_998_p2[0:0] === 1'b1) ? tmp_46_fu_1004_p4 : tmp_47_fu_1014_p2);

assign tmp_49_fu_926_p3 = ((tmp_78_fu_890_p3[0:0] === 1'b1) ? tmp_44_fu_908_p1 : tmp_45_fu_922_p1);

assign tmp_4_fu_232_p3 = {{reg_228}, {5'd0}};

assign tmp_50_fu_1028_p3 = ((tmp_81_fu_986_p3[0:0] === 1'b1) ? tmp_48_fu_1020_p3 : tmp_46_fu_1004_p4);

assign tmp_51_fu_352_p4 = {{mul1_fu_318_p2[53:29]}};

assign tmp_52_fu_1173_p4 = {{r_V_17_fu_1149_p2[43:36]}};

assign tmp_53_fu_1183_p2 = (8'd1 + tmp_52_fu_1173_p4);

assign tmp_54_fu_1189_p3 = ((tmp_36_fu_1167_p2[0:0] === 1'b1) ? tmp_52_fu_1173_p4 : tmp_53_fu_1183_p2);

assign tmp_55_fu_1081_p1 = $signed(tmp_84_fu_1071_p4);

assign tmp_56_fu_1197_p3 = ((tmp_86_fu_1155_p3[0:0] === 1'b1) ? tmp_54_fu_1189_p3 : tmp_52_fu_1173_p4);

assign tmp_57_fu_1095_p1 = $signed(tmp_85_fu_1085_p4);

assign tmp_58_fu_1351_p4 = {{r_V_18_fu_1327_p2[43:36]}};

assign tmp_59_fu_1361_p2 = (8'd1 + tmp_58_fu_1351_p4);

assign tmp_5_fu_410_p3 = {{regs_in_V_q0}, {29'd0}};

assign tmp_60_fu_1367_p3 = ((tmp_40_fu_1345_p2[0:0] === 1'b1) ? tmp_58_fu_1351_p4 : tmp_59_fu_1361_p2);

assign tmp_61_fu_1099_p3 = ((tmp_83_fu_1063_p3[0:0] === 1'b1) ? tmp_55_fu_1081_p1 : tmp_57_fu_1095_p1);

assign tmp_62_fu_1375_p3 = ((tmp_91_fu_1333_p3[0:0] === 1'b1) ? tmp_60_fu_1367_p3 : tmp_58_fu_1351_p4);

assign tmp_63_fu_1255_p1 = $signed(tmp_89_fu_1245_p4);

assign tmp_64_fu_1269_p1 = $signed(tmp_90_fu_1259_p4);

assign tmp_65_fu_1273_p3 = ((tmp_88_fu_1237_p3[0:0] === 1'b1) ? tmp_63_fu_1255_p1 : tmp_64_fu_1269_p1);

assign tmp_66_fu_454_p3 = r_V_13_fu_448_p2[32'd46];

assign tmp_67_fu_462_p1 = r_V_13_fu_448_p2[35:0];

assign tmp_68_fu_538_p3 = r_V_21_tr_fu_516_p2[32'd25];

assign tmp_69_fu_546_p4 = {{neg_mul2_fu_532_p2[53:29]}};

assign tmp_6_fu_366_p3 = ((tmp_14_fu_330_p3[0:0] === 1'b1) ? tmp_fu_348_p1 : tmp_2_fu_362_p1);

assign tmp_70_fu_560_p4 = {{mul3_fu_526_p2[53:29]}};

assign tmp_71_fu_630_p3 = r_V_14_fu_624_p2[32'd46];

assign tmp_72_fu_638_p1 = r_V_14_fu_624_p2[35:0];

assign tmp_73_fu_712_p3 = r_V_23_tr_fu_690_p2[32'd26];

assign tmp_74_fu_720_p4 = {{neg_mul4_fu_706_p2[53:29]}};

assign tmp_75_fu_734_p4 = {{mul4_fu_700_p2[53:29]}};

assign tmp_76_fu_808_p3 = r_V_15_fu_802_p2[32'd46];

assign tmp_77_fu_816_p1 = r_V_15_fu_802_p2[35:0];

assign tmp_78_fu_890_p3 = r_V_25_tr_fu_868_p2[32'd26];

assign tmp_79_fu_898_p4 = {{neg_mul5_fu_884_p2[53:29]}};

assign tmp_7_fu_466_p2 = ((tmp_67_fu_462_p1 == 36'd0) ? 1'b1 : 1'b0);

assign tmp_80_fu_912_p4 = {{mul5_fu_878_p2[53:29]}};

assign tmp_81_fu_986_p3 = r_V_16_fu_980_p2[32'd46];

assign tmp_82_fu_994_p1 = r_V_16_fu_980_p2[35:0];

assign tmp_83_fu_1063_p3 = r_V_27_tr_fu_1041_p2[32'd26];

assign tmp_84_fu_1071_p4 = {{neg_mul3_fu_1057_p2[54:30]}};

assign tmp_85_fu_1085_p4 = {{mul2_fu_1051_p2[54:30]}};

assign tmp_86_fu_1155_p3 = r_V_17_fu_1149_p2[32'd47];

assign tmp_87_fu_1163_p1 = r_V_17_fu_1149_p2[35:0];

assign tmp_88_fu_1237_p3 = r_V_29_tr_fu_1215_p2[32'd26];

assign tmp_89_fu_1245_p4 = {{neg_mul_fu_1231_p2[53:29]}};

assign tmp_8_fu_1384_p0 = 26'd67106499;

assign tmp_8_fu_1384_p1 = tmp_cast_fu_240_p1;

assign tmp_90_fu_1259_p4 = {{mul_fu_1225_p2[53:29]}};

assign tmp_91_fu_1333_p3 = r_V_18_fu_1327_p2[32'd46];

assign tmp_92_fu_1341_p1 = r_V_18_fu_1327_p2[35:0];

assign tmp_9_cast_fu_252_p1 = $signed(p_Val2_4_fu_244_p3);

assign tmp_9_fu_472_p4 = {{r_V_13_fu_448_p2[43:36]}};

assign tmp_cast_fu_240_p1 = $signed(tmp_4_fu_232_p3);

assign tmp_fu_348_p1 = $signed(tmp_33_fu_338_p4);

assign tmp_s_fu_289_p2 = ($signed(26'd0) - $signed(tmp_10_cast4_cast_fu_285_p1));

endmodule //rpy_to_duty
