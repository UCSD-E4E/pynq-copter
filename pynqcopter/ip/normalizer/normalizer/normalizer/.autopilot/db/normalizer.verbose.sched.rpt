

================================================================
== Vivado HLS Report for 'normalizer'
================================================================
* Date:           Mon Aug 13 16:36:59 2018

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        normalizer
* Solution:       normalizer
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.00|      4.39|        0.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |   27|   27|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 28


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 28
* Pipeline : 1
  Pipeline-0 : II = 1, D = 28, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 

* FSM state operations: 

 <State 1> : 3.50ns
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%m_V_addr = getelementptr i16* %m_V, i64 4"
ST_1 : Operation 30 [7/7] (3.50ns)   --->   "%m_V_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %m_V_addr, i32 1)" [normalizer.cpp:79]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 2> : 3.50ns
ST_2 : Operation 31 [6/7] (3.50ns)   --->   "%m_V_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %m_V_addr, i32 1)" [normalizer.cpp:79]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 3> : 3.50ns
ST_3 : Operation 32 [5/7] (3.50ns)   --->   "%m_V_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %m_V_addr, i32 1)" [normalizer.cpp:79]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 4> : 3.50ns
ST_4 : Operation 33 [4/7] (3.50ns)   --->   "%m_V_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %m_V_addr, i32 1)" [normalizer.cpp:79]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 5> : 3.50ns
ST_5 : Operation 34 [3/7] (3.50ns)   --->   "%m_V_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %m_V_addr, i32 1)" [normalizer.cpp:79]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 6> : 3.50ns
ST_6 : Operation 35 [2/7] (3.50ns)   --->   "%m_V_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %m_V_addr, i32 1)" [normalizer.cpp:79]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 7> : 3.50ns
ST_7 : Operation 36 [1/1] (1.00ns)   --->   "%max_high_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %max_high)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_7 : Operation 37 [1/1] (1.00ns)   --->   "%min_high_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %min_high)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_7 : Operation 38 [1/7] (3.50ns)   --->   "%m_V_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i16P(i16* %m_V_addr, i32 1)" [normalizer.cpp:79]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 39 [1/1] (1.00ns)   --->   "%regs_in_0_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %regs_in_0)" [normalizer.cpp:83]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_7 : Operation 40 [1/1] (2.47ns)   --->   "%tmp_9 = icmp eq i32 %regs_in_0_read, 0" [normalizer.cpp:83]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 41 [1/1] (1.00ns)   --->   "%regs_in_1_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %regs_in_1)" [normalizer.cpp:83]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_7 : Operation 42 [1/1] (2.47ns)   --->   "%tmp_9_1 = icmp eq i32 %regs_in_1_read, 0" [normalizer.cpp:83]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node tmp_12)   --->   "%tmp_3 = or i32 %regs_in_1_read, %regs_in_0_read" [normalizer.cpp:83]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 44 [1/1] (1.00ns)   --->   "%regs_in_2_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %regs_in_2)" [normalizer.cpp:83]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_7 : Operation 45 [1/1] (2.47ns)   --->   "%tmp_9_2 = icmp eq i32 %regs_in_2_read, 0" [normalizer.cpp:83]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 46 [1/1] (1.00ns)   --->   "%regs_in_3_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %regs_in_3)" [normalizer.cpp:83]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_7 : Operation 47 [1/1] (2.47ns)   --->   "%tmp_9_3 = icmp eq i32 %regs_in_3_read, 0" [normalizer.cpp:83]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node tmp_12)   --->   "%tmp_4 = or i32 %regs_in_2_read, %regs_in_3_read" [normalizer.cpp:83]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node tmp_12)   --->   "%tmp_s = or i32 %tmp_4, %tmp_3" [normalizer.cpp:83]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 50 [1/1] (2.47ns) (out node of the LUT)   --->   "%tmp_12 = icmp eq i32 %tmp_s, 0" [normalizer.cpp:83]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 51 [1/1] (0.00ns)   --->   "br i1 %tmp_12, label %._crit_edge.3.new, label %mergeST" [normalizer.cpp:83]

 <State 8> : 3.50ns
ST_8 : Operation 52 [1/1] (2.55ns)   --->   "%p_Val2_s = sub i32 %max_high_read, %min_high_read" [normalizer.cpp:76]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 53 [1/1] (0.00ns)   --->   "%tmp = trunc i32 %p_Val2_s to i4" [normalizer.cpp:76]
ST_8 : Operation 54 [1/1] (2.55ns)   --->   "%tmp_2 = add i32 %min_high_read, %max_high_read" [normalizer.cpp:79]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 55 [1/1] (3.50ns)   --->   "%m_V_addr_read = call i16 @_ssdm_op_Read.m_axi.i16P(i16* %m_V_addr)" [normalizer.cpp:79]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_1 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %tmp_2, i32 1, i32 31)" [normalizer.cpp:79]
ST_8 : Operation 57 [1/1] (0.00ns)   --->   "%changed_load = load i2* @changed, align 1"
ST_8 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node changed_loc_3)   --->   "%changed_load_s = select i1 %tmp_9, i2 %changed_load, i2 0" [normalizer.cpp:83]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node changed_new_3)   --->   "%not_tmp_9_1 = xor i1 %tmp_9_1, true" [normalizer.cpp:83]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node changed_new_3)   --->   "%changed_new_1_cast = zext i1 %not_tmp_9_1 to i2" [normalizer.cpp:83]
ST_8 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node changed_loc_3)   --->   "%changed_loc_1 = select i1 %tmp_9_1, i2 %changed_load_s, i2 1" [normalizer.cpp:83]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node changed_new_3)   --->   "%changed_new_1_s = select i1 %tmp_9_2, i2 %changed_new_1_cast, i2 -2" [normalizer.cpp:83]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node changed_loc_3)   --->   "%changed_loc_1_s = select i1 %tmp_9_2, i2 %changed_loc_1, i2 -2" [normalizer.cpp:83]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 64 [1/1] (1.37ns) (out node of the LUT)   --->   "%changed_new_3 = select i1 %tmp_9_3, i2 %changed_new_1_s, i2 -1" [normalizer.cpp:83]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 65 [1/1] (1.37ns) (out node of the LUT)   --->   "%changed_loc_3 = select i1 %tmp_9_3, i2 %changed_loc_1_s, i2 -1" [normalizer.cpp:83]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 66 [1/1] (0.00ns)   --->   "store i2 %changed_new_3, i2* @changed, align 1" [normalizer.cpp:84]

 <State 9> : 2.76ns
ST_9 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_3_cast = sext i16 %m_V_addr_read to i46" [normalizer.cpp:79]
ST_9 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_5 = call i46 @_ssdm_op_BitConcatenate.i46.i31.i15(i31 %tmp_1, i15 0)" [normalizer.cpp:79]
ST_9 : Operation 69 [1/1] (2.76ns)   --->   "%output = icmp ugt i46 %tmp_3_cast, %tmp_5" [normalizer.cpp:79]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 70 [1/1] (2.55ns)   --->   "%p_Val2_1 = sub i32 %regs_in_0_read, %min_high_read" [normalizer.cpp:88]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_13 = trunc i32 %p_Val2_1 to i4" [normalizer.cpp:88]

 <State 10> : 4.39ns
ST_10 : Operation 72 [1/1] (0.00ns)   --->   "%range_V = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %tmp, i2 0)" [normalizer.cpp:76]
ST_10 : Operation 73 [1/1] (1.76ns)   --->   "br i1 %output, label %0, label %1" [normalizer.cpp:88]
ST_10 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_6 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %tmp_13, i4 0)" [normalizer.cpp:88]
ST_10 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_8 = zext i6 %range_V to i8" [normalizer.cpp:88]
ST_10 : Operation 76 [12/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_8" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 11> : 4.39ns
ST_11 : Operation 77 [11/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_8" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 12> : 4.39ns
ST_12 : Operation 78 [10/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_8" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 13> : 4.39ns
ST_13 : Operation 79 [9/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_8" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 14> : 4.39ns
ST_14 : Operation 80 [8/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_8" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 15> : 4.39ns
ST_15 : Operation 81 [7/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_8" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 16> : 4.39ns
ST_16 : Operation 82 [6/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_8" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 17> : 4.39ns
ST_17 : Operation 83 [5/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_8" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 18> : 4.39ns
ST_18 : Operation 84 [4/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_8" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 19> : 4.39ns
ST_19 : Operation 85 [3/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_8" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 20> : 4.39ns
ST_20 : Operation 86 [2/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_8" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 21> : 4.39ns
ST_21 : Operation 87 [1/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_8" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 22> : 3.50ns
ST_22 : Operation 88 [1/1] (0.00ns)   --->   "%tmp_7 = zext i2 %changed_loc_3 to i64" [normalizer.cpp:88]
ST_22 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_14 = trunc i8 %p_Val2_2 to i3" [normalizer.cpp:88]
ST_22 : Operation 90 [1/1] (0.00ns)   --->   "%tmp_10 = call i16 @_ssdm_op_BitConcatenate.i16.i3.i13(i3 %tmp_14, i13 0)" [normalizer.cpp:88]
ST_22 : Operation 91 [1/1] (1.76ns)   --->   "br label %1" [normalizer.cpp:88]
ST_22 : Operation 92 [1/1] (0.00ns)   --->   "%m_V_addr_1 = getelementptr i16* %m_V, i64 %tmp_7" [normalizer.cpp:88]
ST_22 : Operation 93 [1/1] (3.50ns)   --->   "%m_V_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i16P(i16* %m_V_addr_1, i32 1)" [normalizer.cpp:88]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 23> : 3.50ns
ST_23 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_11 = phi i16 [ %tmp_10, %0 ], [ 0, %._crit_edge.3.new ]" [normalizer.cpp:88]
ST_23 : Operation 95 [1/1] (3.50ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %m_V_addr_1, i16 %tmp_11, i2 -1)" [normalizer.cpp:88]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 24> : 3.50ns
ST_24 : Operation 96 [5/5] (3.50ns)   --->   "%m_V_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %m_V_addr_1)" [normalizer.cpp:88]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 25> : 3.50ns
ST_25 : Operation 97 [4/5] (3.50ns)   --->   "%m_V_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %m_V_addr_1)" [normalizer.cpp:88]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 26> : 3.50ns
ST_26 : Operation 98 [3/5] (3.50ns)   --->   "%m_V_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %m_V_addr_1)" [normalizer.cpp:88]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 27> : 3.50ns
ST_27 : Operation 99 [2/5] (3.50ns)   --->   "%m_V_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %m_V_addr_1)" [normalizer.cpp:88]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 28> : 3.50ns
ST_28 : Operation 100 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %regs_in_4), !map !56"
ST_28 : Operation 101 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %regs_in_3), !map !62"
ST_28 : Operation 102 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %regs_in_2), !map !68"
ST_28 : Operation 103 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %regs_in_1), !map !74"
ST_28 : Operation 104 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %regs_in_0), !map !80"
ST_28 : Operation 105 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %min_high), !map !86"
ST_28 : Operation 106 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %max_high), !map !92"
ST_28 : Operation 107 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %m_V), !map !96"
ST_28 : Operation 108 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @normalizer_str) nounwind"
ST_28 : Operation 109 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [3 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [normalizer.cpp:66]
ST_28 : Operation 110 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %regs_in_0, i32* %regs_in_1, i32* %regs_in_2, i32* %regs_in_3, i32* %regs_in_4, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [3 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"
ST_28 : Operation 111 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %min_high, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [3 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [normalizer.cpp:68]
ST_28 : Operation 112 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %max_high, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [3 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [normalizer.cpp:69]
ST_28 : Operation 113 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %m_V, [6 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [4 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"
ST_28 : Operation 114 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [normalizer.cpp:74]
ST_28 : Operation 115 [1/1] (0.00ns)   --->   "br label %._crit_edge.3.new"
ST_28 : Operation 116 [1/5] (3.50ns)   --->   "%m_V_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %m_V_addr_1)" [normalizer.cpp:88]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 117 [1/1] (0.00ns)   --->   "ret void" [normalizer.cpp:90]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 0.5ns.

 <State 1>: 3.5ns
The critical path consists of the following:
	'getelementptr' operation ('m_V_addr') [31]  (0 ns)
	bus request on port 'm_V' (normalizer.cpp:79) [32]  (3.5 ns)

 <State 2>: 3.5ns
The critical path consists of the following:
	bus request on port 'm_V' (normalizer.cpp:79) [32]  (3.5 ns)

 <State 3>: 3.5ns
The critical path consists of the following:
	bus request on port 'm_V' (normalizer.cpp:79) [32]  (3.5 ns)

 <State 4>: 3.5ns
The critical path consists of the following:
	bus request on port 'm_V' (normalizer.cpp:79) [32]  (3.5 ns)

 <State 5>: 3.5ns
The critical path consists of the following:
	bus request on port 'm_V' (normalizer.cpp:79) [32]  (3.5 ns)

 <State 6>: 3.5ns
The critical path consists of the following:
	bus request on port 'm_V' (normalizer.cpp:79) [32]  (3.5 ns)

 <State 7>: 3.5ns
The critical path consists of the following:
	bus request on port 'm_V' (normalizer.cpp:79) [32]  (3.5 ns)

 <State 8>: 3.5ns
The critical path consists of the following:
	bus read on port 'm_V' (normalizer.cpp:79) [33]  (3.5 ns)

 <State 9>: 2.76ns
The critical path consists of the following:
	'icmp' operation ('output', normalizer.cpp:79) [37]  (2.76 ns)

 <State 10>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [71]  (4.39 ns)

 <State 11>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [71]  (4.39 ns)

 <State 12>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [71]  (4.39 ns)

 <State 13>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [71]  (4.39 ns)

 <State 14>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [71]  (4.39 ns)

 <State 15>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [71]  (4.39 ns)

 <State 16>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [71]  (4.39 ns)

 <State 17>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [71]  (4.39 ns)

 <State 18>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [71]  (4.39 ns)

 <State 19>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [71]  (4.39 ns)

 <State 20>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [71]  (4.39 ns)

 <State 21>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [71]  (4.39 ns)

 <State 22>: 3.5ns
The critical path consists of the following:
	'getelementptr' operation ('m_V_addr_1', normalizer.cpp:88) [77]  (0 ns)
	bus request on port 'm_V' (normalizer.cpp:88) [78]  (3.5 ns)

 <State 23>: 3.5ns
The critical path consists of the following:
	'phi' operation ('tmp_11', normalizer.cpp:88) with incoming values : ('tmp_10', normalizer.cpp:88) [76]  (0 ns)
	bus write on port 'm_V' (normalizer.cpp:88) [79]  (3.5 ns)

 <State 24>: 3.5ns
The critical path consists of the following:
	bus access on port 'm_V' (normalizer.cpp:88) [80]  (3.5 ns)

 <State 25>: 3.5ns
The critical path consists of the following:
	bus access on port 'm_V' (normalizer.cpp:88) [80]  (3.5 ns)

 <State 26>: 3.5ns
The critical path consists of the following:
	bus access on port 'm_V' (normalizer.cpp:88) [80]  (3.5 ns)

 <State 27>: 3.5ns
The critical path consists of the following:
	bus access on port 'm_V' (normalizer.cpp:88) [80]  (3.5 ns)

 <State 28>: 3.5ns
The critical path consists of the following:
	bus access on port 'm_V' (normalizer.cpp:88) [80]  (3.5 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
