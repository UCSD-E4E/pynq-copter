

================================================================
== Vivado HLS Report for 'normalizer'
================================================================
* Date:           Tue Aug 14 12:36:50 2018

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        normalizer
* Solution:       normalizer
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.00|      5.24|        0.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |   80|   80|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 81


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 81
* Pipeline : 1
  Pipeline-0 : II = 1, D = 81, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 

* FSM state operations: 

 <State 1> : 3.47ns
ST_1 : Operation 82 [1/1] (1.00ns)   --->   "%regs_in_1_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %regs_in_1)" [normalizer.cpp:80]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%last_1_load = load i32* @last_1, align 4" [normalizer.cpp:80]
ST_1 : Operation 84 [1/1] (2.47ns)   --->   "%tmp_2_1 = icmp eq i32 %regs_in_1_read, %last_1_load" [normalizer.cpp:80]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "store i32 %regs_in_1_read, i32* @last_1, align 4" [normalizer.cpp:82]

 <State 2> : 3.47ns
ST_2 : Operation 86 [1/1] (1.76ns)   --->   "br i1 %tmp_2_1, label %._crit_edge.1, label %2" [normalizer.cpp:80]
ST_2 : Operation 87 [1/1] (1.76ns)   --->   "br label %._crit_edge.1" [normalizer.cpp:83]
ST_2 : Operation 88 [1/1] (1.00ns)   --->   "%regs_in_2_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %regs_in_2)" [normalizer.cpp:80]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 89 [1/1] (0.00ns)   --->   "%last_2_load = load i32* @last_2, align 8" [normalizer.cpp:80]
ST_2 : Operation 90 [1/1] (2.47ns)   --->   "%tmp_2_2 = icmp eq i32 %regs_in_2_read, %last_2_load" [normalizer.cpp:80]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 91 [1/1] (0.00ns)   --->   "store i32 %regs_in_2_read, i32* @last_2, align 8" [normalizer.cpp:82]

 <State 3> : 3.47ns
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%changed_1_1 = phi i1 [ true, %2 ], [ false, %._crit_edge.0 ]"
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%changed_1_1_cast = zext i1 %changed_1_1 to i2" [normalizer.cpp:80]
ST_3 : Operation 94 [1/1] (1.76ns)   --->   "br i1 %tmp_2_2, label %._crit_edge.2, label %3" [normalizer.cpp:80]
ST_3 : Operation 95 [1/1] (1.76ns)   --->   "br label %._crit_edge.2" [normalizer.cpp:83]
ST_3 : Operation 96 [1/1] (1.00ns)   --->   "%regs_in_3_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %regs_in_3)" [normalizer.cpp:80]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%last_3_load = load i32* @last_3, align 4" [normalizer.cpp:80]
ST_3 : Operation 98 [1/1] (2.47ns)   --->   "%tmp_2_3 = icmp eq i32 %regs_in_3_read, %last_3_load" [normalizer.cpp:80]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "store i32 %regs_in_3_read, i32* @last_3, align 4" [normalizer.cpp:82]

 <State 4> : 3.47ns
ST_4 : Operation 100 [1/1] (0.00ns)   --->   "%changed_1_2 = phi i2 [ -2, %3 ], [ %changed_1_1_cast, %._crit_edge.1 ]" [normalizer.cpp:80]
ST_4 : Operation 101 [1/1] (1.76ns)   --->   "br i1 %tmp_2_3, label %._crit_edge.3, label %4" [normalizer.cpp:80]
ST_4 : Operation 102 [1/1] (1.76ns)   --->   "br label %._crit_edge.3" [normalizer.cpp:83]
ST_4 : Operation 103 [1/1] (1.00ns)   --->   "%regs_in_4_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %regs_in_4)" [normalizer.cpp:80]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%last_4_load = load i32* @last_4, align 16" [normalizer.cpp:80]
ST_4 : Operation 105 [1/1] (2.47ns)   --->   "%tmp_2_4 = icmp eq i32 %regs_in_4_read, %last_4_load" [normalizer.cpp:80]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "store i32 %regs_in_4_read, i32* @last_4, align 16" [normalizer.cpp:82]

 <State 5> : 3.47ns
ST_5 : Operation 107 [1/1] (0.00ns)   --->   "%changed_1_3 = phi i2 [ -1, %4 ], [ %changed_1_2, %._crit_edge.2 ]" [normalizer.cpp:80]
ST_5 : Operation 108 [1/1] (0.00ns)   --->   "%changed_1_3_cast = zext i2 %changed_1_3 to i3" [normalizer.cpp:80]
ST_5 : Operation 109 [1/1] (1.76ns)   --->   "br i1 %tmp_2_4, label %._crit_edge.4, label %5" [normalizer.cpp:80]
ST_5 : Operation 110 [1/1] (1.76ns)   --->   "br label %._crit_edge.4" [normalizer.cpp:83]
ST_5 : Operation 111 [1/1] (1.00ns)   --->   "%regs_in_5_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %regs_in_5)" [normalizer.cpp:80]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_5 : Operation 112 [1/1] (0.00ns)   --->   "%last_5_load = load i32* @last_5, align 4" [normalizer.cpp:80]
ST_5 : Operation 113 [1/1] (2.47ns)   --->   "%tmp_2_5 = icmp eq i32 %regs_in_5_read, %last_5_load" [normalizer.cpp:80]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 114 [1/1] (0.00ns)   --->   "store i32 %regs_in_5_read, i32* @last_5, align 4" [normalizer.cpp:82]

 <State 6> : 1.77ns
ST_6 : Operation 115 [1/1] (0.00ns)   --->   "%changed_1_4 = phi i3 [ -4, %5 ], [ %changed_1_3_cast, %._crit_edge.3 ]" [normalizer.cpp:80]
ST_6 : Operation 116 [1/1] (1.76ns)   --->   "br i1 %tmp_2_5, label %._crit_edge.5, label %6" [normalizer.cpp:80]
ST_6 : Operation 117 [1/1] (1.76ns)   --->   "br label %._crit_edge.5" [normalizer.cpp:83]

 <State 7> : 3.48ns
ST_7 : Operation 118 [1/1] (1.00ns)   --->   "%max_high_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %max_high)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_7 : Operation 119 [1/1] (1.00ns)   --->   "%min_high_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %min_high)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_7 : Operation 120 [1/1] (1.00ns)   --->   "%regs_in_0_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %regs_in_0)" [normalizer.cpp:80]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_7 : Operation 121 [1/1] (0.00ns)   --->   "%last_0_load = load i32* @last_0, align 16" [normalizer.cpp:80]
ST_7 : Operation 122 [1/1] (2.47ns)   --->   "%tmp_2 = icmp eq i32 %regs_in_0_read, %last_0_load" [normalizer.cpp:80]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 123 [1/1] (0.00ns)   --->   "br i1 %tmp_2, label %._crit_edge.0, label %1" [normalizer.cpp:80]
ST_7 : Operation 124 [1/1] (0.00ns)   --->   "store i32 %regs_in_0_read, i32* @last_0, align 16" [normalizer.cpp:82]
ST_7 : Operation 125 [1/1] (0.00ns)   --->   "%changed_1_5 = phi i3 [ -3, %6 ], [ %changed_1_4, %._crit_edge.4 ]" [normalizer.cpp:80]
ST_7 : Operation 126 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i3.i32(i3 %changed_1_5, i32 2)" [normalizer.cpp:85]
ST_7 : Operation 127 [1/1] (0.00ns)   --->   "br i1 %tmp, label %._crit_edge40, label %branch0" [normalizer.cpp:85]
ST_7 : Operation 128 [1/1] (2.47ns)   --->   "%regs_in_load_1_phi = call i32 @_ssdm_op_Mux.ap_auto.8i32.i3(i32 %regs_in_0_read, i32 %regs_in_1_read, i32 %regs_in_2_read, i32 %regs_in_3_read, i32 %regs_in_3_read, i32 %regs_in_3_read, i32 %regs_in_3_read, i32 %regs_in_3_read, i3 %changed_1_5)" [normalizer.cpp:86]   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>

 <State 8> : 2.55ns
ST_8 : Operation 129 [1/1] (2.55ns)   --->   "%p_Val2_s = sub i32 %regs_in_load_1_phi, %min_high_read" [normalizer.cpp:86]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 130 [1/1] (2.55ns)   --->   "%p_Val2_1 = sub i32 %max_high_read, %min_high_read" [normalizer.cpp:86]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

 <State 9> : 5.24ns
ST_9 : Operation 131 [1/1] (0.00ns)   --->   "%tmp_7 = call i48 @_ssdm_op_BitConcatenate.i48.i32.i16(i32 %p_Val2_1, i16 0)" [normalizer.cpp:86]
ST_9 : Operation 132 [1/1] (0.00ns)   --->   "%tmp_9 = call i63 @_ssdm_op_BitConcatenate.i63.i32.i31(i32 %p_Val2_s, i31 0)" [normalizer.cpp:86]
ST_9 : Operation 133 [1/1] (0.00ns)   --->   "%tmp_cast = zext i48 %tmp_7 to i63" [normalizer.cpp:86]
ST_9 : Operation 134 [67/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 10> : 5.24ns
ST_10 : Operation 135 [66/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 11> : 5.24ns
ST_11 : Operation 136 [65/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 12> : 5.24ns
ST_12 : Operation 137 [64/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 13> : 5.24ns
ST_13 : Operation 138 [63/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 14> : 5.24ns
ST_14 : Operation 139 [62/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 15> : 5.24ns
ST_15 : Operation 140 [61/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 16> : 5.24ns
ST_16 : Operation 141 [60/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 17> : 5.24ns
ST_17 : Operation 142 [59/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 18> : 5.24ns
ST_18 : Operation 143 [58/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 19> : 5.24ns
ST_19 : Operation 144 [57/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 20> : 5.24ns
ST_20 : Operation 145 [56/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 21> : 5.24ns
ST_21 : Operation 146 [55/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 22> : 5.24ns
ST_22 : Operation 147 [54/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 23> : 5.24ns
ST_23 : Operation 148 [53/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 24> : 5.24ns
ST_24 : Operation 149 [52/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 25> : 5.24ns
ST_25 : Operation 150 [51/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 26> : 5.24ns
ST_26 : Operation 151 [50/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 27> : 5.24ns
ST_27 : Operation 152 [49/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 28> : 5.24ns
ST_28 : Operation 153 [48/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 29> : 5.24ns
ST_29 : Operation 154 [47/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 30> : 5.24ns
ST_30 : Operation 155 [46/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 31> : 5.24ns
ST_31 : Operation 156 [45/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 32> : 5.24ns
ST_32 : Operation 157 [44/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 33> : 5.24ns
ST_33 : Operation 158 [43/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 34> : 5.24ns
ST_34 : Operation 159 [42/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 35> : 5.24ns
ST_35 : Operation 160 [41/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 36> : 5.24ns
ST_36 : Operation 161 [40/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 37> : 5.24ns
ST_37 : Operation 162 [39/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 38> : 5.24ns
ST_38 : Operation 163 [38/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 39> : 5.24ns
ST_39 : Operation 164 [37/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 40> : 5.24ns
ST_40 : Operation 165 [36/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 41> : 5.24ns
ST_41 : Operation 166 [35/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 42> : 5.24ns
ST_42 : Operation 167 [34/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 43> : 5.24ns
ST_43 : Operation 168 [33/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 44> : 5.24ns
ST_44 : Operation 169 [32/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 45> : 5.24ns
ST_45 : Operation 170 [31/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 46> : 5.24ns
ST_46 : Operation 171 [30/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 47> : 5.24ns
ST_47 : Operation 172 [29/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 48> : 5.24ns
ST_48 : Operation 173 [28/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 49> : 5.24ns
ST_49 : Operation 174 [27/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 50> : 5.24ns
ST_50 : Operation 175 [26/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 51> : 5.24ns
ST_51 : Operation 176 [25/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 52> : 5.24ns
ST_52 : Operation 177 [24/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 53> : 5.24ns
ST_53 : Operation 178 [23/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 54> : 5.24ns
ST_54 : Operation 179 [22/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 55> : 5.24ns
ST_55 : Operation 180 [21/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 56> : 5.24ns
ST_56 : Operation 181 [20/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 57> : 5.24ns
ST_57 : Operation 182 [19/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 58> : 5.24ns
ST_58 : Operation 183 [18/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 59> : 5.24ns
ST_59 : Operation 184 [17/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 60> : 5.24ns
ST_60 : Operation 185 [16/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 61> : 5.24ns
ST_61 : Operation 186 [15/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 62> : 5.24ns
ST_62 : Operation 187 [14/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 63> : 5.24ns
ST_63 : Operation 188 [13/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 64> : 5.24ns
ST_64 : Operation 189 [12/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 65> : 5.24ns
ST_65 : Operation 190 [11/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 66> : 5.24ns
ST_66 : Operation 191 [10/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 67> : 5.24ns
ST_67 : Operation 192 [9/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 68> : 5.24ns
ST_68 : Operation 193 [8/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 69> : 5.24ns
ST_69 : Operation 194 [7/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 70> : 5.24ns
ST_70 : Operation 195 [6/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 71> : 5.24ns
ST_71 : Operation 196 [5/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 72> : 5.24ns
ST_72 : Operation 197 [4/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 73> : 5.24ns
ST_73 : Operation 198 [3/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 74> : 5.24ns
ST_74 : Operation 199 [2/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 75> : 5.24ns
ST_75 : Operation 200 [1/1] (0.00ns)   --->   "%tmp_3 = zext i3 %changed_1_5 to i64" [normalizer.cpp:86]
ST_75 : Operation 201 [1/67] (5.23ns)   --->   "%tmp_5 = udiv i63 %tmp_9, %tmp_cast" [normalizer.cpp:86]   --->   Core 23 'DivnS' <Latency = 66> <II = 1> <Delay = 5.23> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_75 : Operation 202 [1/1] (0.00ns)   --->   "%m_V_addr = getelementptr i16* %m_V, i64 %tmp_3" [normalizer.cpp:86]
ST_75 : Operation 203 [1/1] (3.50ns)   --->   "%m_V_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i16P(i16* %m_V_addr, i32 1)" [normalizer.cpp:86]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 76> : 3.50ns
ST_76 : Operation 204 [1/1] (0.00ns)   --->   "%tmp_1 = trunc i63 %tmp_5 to i16" [normalizer.cpp:86]
ST_76 : Operation 205 [1/1] (3.50ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %m_V_addr, i16 %tmp_1, i2 -1)" [normalizer.cpp:86]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 77> : 3.50ns
ST_77 : Operation 206 [5/5] (3.50ns)   --->   "%m_V_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %m_V_addr)" [normalizer.cpp:86]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 78> : 3.50ns
ST_78 : Operation 207 [4/5] (3.50ns)   --->   "%m_V_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %m_V_addr)" [normalizer.cpp:86]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 79> : 3.50ns
ST_79 : Operation 208 [3/5] (3.50ns)   --->   "%m_V_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %m_V_addr)" [normalizer.cpp:86]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 80> : 3.50ns
ST_80 : Operation 209 [2/5] (3.50ns)   --->   "%m_V_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %m_V_addr)" [normalizer.cpp:86]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 81> : 3.50ns
ST_81 : Operation 210 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %regs_in_5), !map !41"
ST_81 : Operation 211 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %regs_in_4), !map !47"
ST_81 : Operation 212 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %regs_in_3), !map !53"
ST_81 : Operation 213 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %regs_in_2), !map !59"
ST_81 : Operation 214 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %regs_in_1), !map !65"
ST_81 : Operation 215 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %regs_in_0), !map !71"
ST_81 : Operation 216 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %min_high), !map !77"
ST_81 : Operation 217 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %max_high), !map !83"
ST_81 : Operation 218 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %m_V), !map !87"
ST_81 : Operation 219 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @normalizer_str) nounwind"
ST_81 : Operation 220 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [3 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [normalizer.cpp:66]
ST_81 : Operation 221 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %regs_in_0, i32* %regs_in_1, i32* %regs_in_2, i32* %regs_in_3, i32* %regs_in_4, i32* %regs_in_5, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [3 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"
ST_81 : Operation 222 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %min_high, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [3 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [normalizer.cpp:68]
ST_81 : Operation 223 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %max_high, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [3 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [normalizer.cpp:69]
ST_81 : Operation 224 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %m_V, [6 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [4 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"
ST_81 : Operation 225 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [normalizer.cpp:74]
ST_81 : Operation 226 [1/1] (0.00ns)   --->   "br label %._crit_edge.0" [normalizer.cpp:83]
ST_81 : Operation 227 [1/5] (3.50ns)   --->   "%m_V_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %m_V_addr)" [normalizer.cpp:86]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_81 : Operation 228 [1/1] (0.00ns)   --->   "br label %._crit_edge40" [normalizer.cpp:87]
ST_81 : Operation 229 [1/1] (0.00ns)   --->   "ret void" [normalizer.cpp:88]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 0.5ns.

 <State 1>: 3.47ns
The critical path consists of the following:
	s_axi read on port 'regs_in_1' (normalizer.cpp:80) [42]  (1 ns)
	'icmp' operation ('tmp_2_1', normalizer.cpp:80) [44]  (2.47 ns)

 <State 2>: 3.47ns
The critical path consists of the following:
	s_axi read on port 'regs_in_2' (normalizer.cpp:80) [52]  (1 ns)
	'icmp' operation ('tmp_2_2', normalizer.cpp:80) [54]  (2.47 ns)

 <State 3>: 3.47ns
The critical path consists of the following:
	s_axi read on port 'regs_in_3' (normalizer.cpp:80) [61]  (1 ns)
	'icmp' operation ('tmp_2_3', normalizer.cpp:80) [63]  (2.47 ns)

 <State 4>: 3.47ns
The critical path consists of the following:
	s_axi read on port 'regs_in_4' (normalizer.cpp:80) [71]  (1 ns)
	'icmp' operation ('tmp_2_4', normalizer.cpp:80) [73]  (2.47 ns)

 <State 5>: 3.47ns
The critical path consists of the following:
	s_axi read on port 'regs_in_5' (normalizer.cpp:80) [80]  (1 ns)
	'icmp' operation ('tmp_2_5', normalizer.cpp:80) [82]  (2.47 ns)

 <State 6>: 1.77ns
The critical path consists of the following:
	'phi' operation ('changed_1_4', normalizer.cpp:80) with incoming values : ('changed_1_3_cast', normalizer.cpp:80) [79]  (0 ns)
	multiplexor before 'phi' operation ('changed_1_5', normalizer.cpp:80) with incoming values : ('changed_1_3_cast', normalizer.cpp:80) [88]  (1.77 ns)

 <State 7>: 3.48ns
The critical path consists of the following:
	s_axi read on port 'regs_in_0' (normalizer.cpp:80) [34]  (1 ns)
	'mux' operation ('regs_in_load_1_phi', normalizer.cpp:86) [93]  (2.48 ns)

 <State 8>: 2.55ns
The critical path consists of the following:
	'sub' operation ('v', normalizer.cpp:86) [94]  (2.55 ns)

 <State 9>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 10>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 11>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 12>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 13>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 14>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 15>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 16>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 17>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 18>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 19>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 20>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 21>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 22>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 23>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 24>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 25>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 26>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 27>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 28>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 29>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 30>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 31>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 32>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 33>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 34>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 35>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 36>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 37>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 38>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 39>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 40>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 41>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 42>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 43>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 44>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 45>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 46>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 47>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 48>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 49>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 50>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 51>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 52>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 53>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 54>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 55>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 56>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 57>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 58>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 59>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 60>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 61>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 62>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 63>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 64>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 65>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 66>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 67>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 68>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 69>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 70>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 71>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 72>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 73>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 74>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 75>: 5.24ns
The critical path consists of the following:
	'udiv' operation ('tmp_5', normalizer.cpp:86) [99]  (5.24 ns)

 <State 76>: 3.5ns
The critical path consists of the following:
	bus write on port 'm_V' (normalizer.cpp:86) [103]  (3.5 ns)

 <State 77>: 3.5ns
The critical path consists of the following:
	bus access on port 'm_V' (normalizer.cpp:86) [104]  (3.5 ns)

 <State 78>: 3.5ns
The critical path consists of the following:
	bus access on port 'm_V' (normalizer.cpp:86) [104]  (3.5 ns)

 <State 79>: 3.5ns
The critical path consists of the following:
	bus access on port 'm_V' (normalizer.cpp:86) [104]  (3.5 ns)

 <State 80>: 3.5ns
The critical path consists of the following:
	bus access on port 'm_V' (normalizer.cpp:86) [104]  (3.5 ns)

 <State 81>: 3.5ns
The critical path consists of the following:
	bus access on port 'm_V' (normalizer.cpp:86) [104]  (3.5 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
