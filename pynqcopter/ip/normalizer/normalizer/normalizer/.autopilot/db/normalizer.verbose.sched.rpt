

================================================================
== Vivado HLS Report for 'normalizer'
================================================================
* Date:           Mon Aug 13 19:05:53 2018

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        normalizer
* Solution:       normalizer
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.00|      4.39|        0.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |   21|   21|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 22


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 22
* Pipeline : 1
  Pipeline-0 : II = 1, D = 22, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 

* FSM state operations: 

 <State 1> : 3.47ns
ST_1 : Operation 23 [1/1] (1.00ns)   --->   "%max_high_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %max_high)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 24 [1/1] (1.00ns)   --->   "%min_high_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %min_high)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 25 [1/1] (1.00ns)   --->   "%regs_in_0_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %regs_in_0)" [normalizer.cpp:83]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 26 [1/1] (2.47ns)   --->   "%tmp_4 = icmp eq i32 %regs_in_0_read, 0" [normalizer.cpp:83]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (1.00ns)   --->   "%regs_in_1_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %regs_in_1)" [normalizer.cpp:83]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 28 [1/1] (2.47ns)   --->   "%tmp_4_1 = icmp eq i32 %regs_in_1_read, 0" [normalizer.cpp:83]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (1.00ns)   --->   "%regs_in_2_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %regs_in_2)" [normalizer.cpp:83]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 30 [1/1] (2.47ns)   --->   "%tmp_4_2 = icmp eq i32 %regs_in_2_read, 0" [normalizer.cpp:83]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (1.00ns)   --->   "%regs_in_3_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %regs_in_3)" [normalizer.cpp:83]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 32 [1/1] (2.47ns)   --->   "%tmp_4_3 = icmp eq i32 %regs_in_3_read, 0" [normalizer.cpp:83]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

 <State 2> : 2.55ns
ST_2 : Operation 33 [1/1] (2.55ns)   --->   "%p_Val2_s = sub i32 %max_high_read, %min_high_read" [normalizer.cpp:76]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%tmp = trunc i32 %p_Val2_s to i4" [normalizer.cpp:76]
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%changed_load = load i2* @changed, align 1"
ST_2 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node changed_loc_3)   --->   "%changed_load_s = select i1 %tmp_4, i2 %changed_load, i2 0" [normalizer.cpp:83]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node tmp_3)   --->   "%tmp_1 = or i32 %regs_in_1_read, %regs_in_0_read" [normalizer.cpp:83]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node changed_new_3)   --->   "%not_tmp_4_1 = xor i1 %tmp_4_1, true" [normalizer.cpp:83]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node changed_new_3)   --->   "%changed_new_1_cast = zext i1 %not_tmp_4_1 to i2" [normalizer.cpp:83]
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node changed_loc_3)   --->   "%changed_loc_1 = select i1 %tmp_4_1, i2 %changed_load_s, i2 1" [normalizer.cpp:83]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node changed_new_3)   --->   "%changed_new_1_s = select i1 %tmp_4_2, i2 %changed_new_1_cast, i2 -2" [normalizer.cpp:83]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node changed_loc_3)   --->   "%changed_loc_1_s = select i1 %tmp_4_2, i2 %changed_loc_1, i2 -2" [normalizer.cpp:83]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node tmp_3)   --->   "%tmp_8 = or i32 %regs_in_2_read, %regs_in_3_read" [normalizer.cpp:83]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node tmp_3)   --->   "%tmp_9 = or i32 %tmp_8, %tmp_1" [normalizer.cpp:83]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (2.47ns) (out node of the LUT)   --->   "%tmp_3 = icmp eq i32 %tmp_9, 0" [normalizer.cpp:83]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (1.37ns) (out node of the LUT)   --->   "%changed_new_3 = select i1 %tmp_4_3, i2 %changed_new_1_s, i2 -1" [normalizer.cpp:83]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (1.37ns) (out node of the LUT)   --->   "%changed_loc_3 = select i1 %tmp_4_3, i2 %changed_loc_1_s, i2 -1" [normalizer.cpp:83]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "br i1 %tmp_3, label %._crit_edge.3.new, label %mergeST" [normalizer.cpp:83]
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "store i2 %changed_new_3, i2* @changed, align 1" [normalizer.cpp:84]

 <State 3> : 2.48ns
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%changed_load_t = zext i2 %changed_loc_3 to i3" [normalizer.cpp:83]
ST_3 : Operation 51 [1/1] (2.47ns)   --->   "%regs_in_load_phi = call i32 @_ssdm_op_Mux.ap_auto.8i32.i3(i32 %regs_in_0_read, i32 %regs_in_1_read, i32 %regs_in_2_read, i32 %regs_in_3_read, i32 %regs_in_3_read, i32 %regs_in_3_read, i32 %regs_in_3_read, i32 %regs_in_3_read, i3 %changed_load_t)" [normalizer.cpp:88]   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>

 <State 4> : 2.55ns
ST_4 : Operation 52 [1/1] (2.55ns)   --->   "%p_Val2_1 = sub i32 %regs_in_load_phi, %min_high_read" [normalizer.cpp:88]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_5 = trunc i32 %p_Val2_1 to i4" [normalizer.cpp:88]

 <State 5> : 4.39ns
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%range_V = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %tmp, i2 0)" [normalizer.cpp:76]
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_6 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %tmp_5, i4 0)" [normalizer.cpp:88]
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_7 = zext i6 %range_V to i8" [normalizer.cpp:88]
ST_5 : Operation 57 [12/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_7" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 6> : 4.39ns
ST_6 : Operation 58 [11/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_7" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 7> : 4.39ns
ST_7 : Operation 59 [10/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_7" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 8> : 4.39ns
ST_8 : Operation 60 [9/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_7" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 9> : 4.39ns
ST_9 : Operation 61 [8/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_7" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 10> : 4.39ns
ST_10 : Operation 62 [7/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_7" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 11> : 4.39ns
ST_11 : Operation 63 [6/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_7" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 12> : 4.39ns
ST_12 : Operation 64 [5/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_7" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 13> : 4.39ns
ST_13 : Operation 65 [4/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_7" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 14> : 4.39ns
ST_14 : Operation 66 [3/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_7" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 15> : 4.39ns
ST_15 : Operation 67 [2/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_7" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

 <State 16> : 4.39ns
ST_16 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_2 = zext i2 %changed_loc_3 to i64" [normalizer.cpp:88]
ST_16 : Operation 69 [1/12] (4.38ns)   --->   "%p_Val2_2 = udiv i8 %tmp_6, %tmp_7" [normalizer.cpp:88]   --->   Core 23 'DivnS' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 70 [1/1] (0.00ns)   --->   "%m_V_addr = getelementptr i16* %m_V, i64 %tmp_2" [normalizer.cpp:88]
ST_16 : Operation 71 [1/1] (3.50ns)   --->   "%m_V_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i16P(i16* %m_V_addr, i32 1)" [normalizer.cpp:88]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 17> : 3.50ns
ST_17 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_10 = trunc i8 %p_Val2_2 to i3" [normalizer.cpp:88]
ST_17 : Operation 73 [1/1] (0.00ns)   --->   "%tmp_s = call i16 @_ssdm_op_BitConcatenate.i16.i3.i13(i3 %tmp_10, i13 0)" [normalizer.cpp:88]
ST_17 : Operation 74 [1/1] (3.50ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %m_V_addr, i16 %tmp_s, i2 -1)" [normalizer.cpp:88]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 18> : 3.50ns
ST_18 : Operation 75 [5/5] (3.50ns)   --->   "%m_V_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %m_V_addr)" [normalizer.cpp:88]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 19> : 3.50ns
ST_19 : Operation 76 [4/5] (3.50ns)   --->   "%m_V_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %m_V_addr)" [normalizer.cpp:88]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 20> : 3.50ns
ST_20 : Operation 77 [3/5] (3.50ns)   --->   "%m_V_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %m_V_addr)" [normalizer.cpp:88]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 21> : 3.50ns
ST_21 : Operation 78 [2/5] (3.50ns)   --->   "%m_V_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %m_V_addr)" [normalizer.cpp:88]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 22> : 3.50ns
ST_22 : Operation 79 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %regs_in_4), !map !41"
ST_22 : Operation 80 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %regs_in_3), !map !47"
ST_22 : Operation 81 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %regs_in_2), !map !53"
ST_22 : Operation 82 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %regs_in_1), !map !59"
ST_22 : Operation 83 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %regs_in_0), !map !65"
ST_22 : Operation 84 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %min_high), !map !71"
ST_22 : Operation 85 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %max_high), !map !77"
ST_22 : Operation 86 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %m_V), !map !81"
ST_22 : Operation 87 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @normalizer_str) nounwind"
ST_22 : Operation 88 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [3 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [normalizer.cpp:66]
ST_22 : Operation 89 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %regs_in_0, i32* %regs_in_1, i32* %regs_in_2, i32* %regs_in_3, i32* %regs_in_4, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [3 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"
ST_22 : Operation 90 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %min_high, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [3 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [normalizer.cpp:68]
ST_22 : Operation 91 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %max_high, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [3 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [normalizer.cpp:69]
ST_22 : Operation 92 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %m_V, [6 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [4 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"
ST_22 : Operation 93 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [normalizer.cpp:74]
ST_22 : Operation 94 [1/1] (0.00ns)   --->   "br label %._crit_edge.3.new"
ST_22 : Operation 95 [1/5] (3.50ns)   --->   "%m_V_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %m_V_addr)" [normalizer.cpp:88]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 96 [1/1] (0.00ns)   --->   "ret void" [normalizer.cpp:90]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 0.5ns.

 <State 1>: 3.47ns
The critical path consists of the following:
	s_axi read on port 'regs_in_0' (normalizer.cpp:83) [30]  (1 ns)
	'icmp' operation ('tmp_4', normalizer.cpp:83) [31]  (2.47 ns)

 <State 2>: 2.55ns
The critical path consists of the following:
	'sub' operation ('v', normalizer.cpp:76) [27]  (2.55 ns)

 <State 3>: 2.48ns
The critical path consists of the following:
	'mux' operation ('regs_in_load_phi', normalizer.cpp:88) [58]  (2.48 ns)

 <State 4>: 2.55ns
The critical path consists of the following:
	'sub' operation ('v', normalizer.cpp:88) [59]  (2.55 ns)

 <State 5>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [63]  (4.39 ns)

 <State 6>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [63]  (4.39 ns)

 <State 7>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [63]  (4.39 ns)

 <State 8>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [63]  (4.39 ns)

 <State 9>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [63]  (4.39 ns)

 <State 10>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [63]  (4.39 ns)

 <State 11>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [63]  (4.39 ns)

 <State 12>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [63]  (4.39 ns)

 <State 13>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [63]  (4.39 ns)

 <State 14>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [63]  (4.39 ns)

 <State 15>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [63]  (4.39 ns)

 <State 16>: 4.39ns
The critical path consists of the following:
	'udiv' operation ('__Val2__', normalizer.cpp:88) [63]  (4.39 ns)

 <State 17>: 3.5ns
The critical path consists of the following:
	bus write on port 'm_V' (normalizer.cpp:88) [68]  (3.5 ns)

 <State 18>: 3.5ns
The critical path consists of the following:
	bus access on port 'm_V' (normalizer.cpp:88) [69]  (3.5 ns)

 <State 19>: 3.5ns
The critical path consists of the following:
	bus access on port 'm_V' (normalizer.cpp:88) [69]  (3.5 ns)

 <State 20>: 3.5ns
The critical path consists of the following:
	bus access on port 'm_V' (normalizer.cpp:88) [69]  (3.5 ns)

 <State 21>: 3.5ns
The critical path consists of the following:
	bus access on port 'm_V' (normalizer.cpp:88) [69]  (3.5 ns)

 <State 22>: 3.5ns
The critical path consists of the following:
	bus access on port 'm_V' (normalizer.cpp:88) [69]  (3.5 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
