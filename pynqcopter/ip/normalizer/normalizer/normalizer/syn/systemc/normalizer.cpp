// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "normalizer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic normalizer::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic normalizer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> normalizer::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> normalizer::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool normalizer::ap_const_boolean_1 = true;
const bool normalizer::ap_const_boolean_0 = false;
const int normalizer::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<1> normalizer::ap_const_lv1_0 = "0";
const sc_lv<64> normalizer::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> normalizer::ap_const_lv32_11 = "10001";
const sc_lv<32> normalizer::ap_const_lv32_20 = "100000";

normalizer::normalizer(sc_module_name name) : sc_module(name), mVcdFile(0) {
    normalizer_in_s_axi_U = new normalizer_in_s_axi<C_S_AXI_IN_ADDR_WIDTH,C_S_AXI_IN_DATA_WIDTH>("normalizer_in_s_axi_U");
    normalizer_in_s_axi_U->AWVALID(s_axi_in_AWVALID);
    normalizer_in_s_axi_U->AWREADY(s_axi_in_AWREADY);
    normalizer_in_s_axi_U->AWADDR(s_axi_in_AWADDR);
    normalizer_in_s_axi_U->WVALID(s_axi_in_WVALID);
    normalizer_in_s_axi_U->WREADY(s_axi_in_WREADY);
    normalizer_in_s_axi_U->WDATA(s_axi_in_WDATA);
    normalizer_in_s_axi_U->WSTRB(s_axi_in_WSTRB);
    normalizer_in_s_axi_U->ARVALID(s_axi_in_ARVALID);
    normalizer_in_s_axi_U->ARREADY(s_axi_in_ARREADY);
    normalizer_in_s_axi_U->ARADDR(s_axi_in_ARADDR);
    normalizer_in_s_axi_U->RVALID(s_axi_in_RVALID);
    normalizer_in_s_axi_U->RREADY(s_axi_in_RREADY);
    normalizer_in_s_axi_U->RDATA(s_axi_in_RDATA);
    normalizer_in_s_axi_U->RRESP(s_axi_in_RRESP);
    normalizer_in_s_axi_U->BVALID(s_axi_in_BVALID);
    normalizer_in_s_axi_U->BREADY(s_axi_in_BREADY);
    normalizer_in_s_axi_U->BRESP(s_axi_in_BRESP);
    normalizer_in_s_axi_U->ACLK(ap_clk);
    normalizer_in_s_axi_U->ARESET(ap_rst_n_inv);
    normalizer_in_s_axi_U->ACLK_EN(ap_var_for_const0);
    normalizer_in_s_axi_U->ap_start(ap_start);
    normalizer_in_s_axi_U->interrupt(interrupt);
    normalizer_in_s_axi_U->ap_ready(ap_ready);
    normalizer_in_s_axi_U->ap_done(ap_done);
    normalizer_in_s_axi_U->ap_idle(ap_idle);
    normalizer_in_s_axi_U->regs_in(regs_in);
    normalizer_in_s_axi_U->min_high(min_high);
    normalizer_in_s_axi_U->max_high(max_high);
    normalizer_in_s_axi_U->m_V(tmp_2_reg_171);
    normalizer_in_s_axi_U->m_V_ap_vld(m_V_ap_vld);
    normalizer_sdiv_9bkb_U1 = new normalizer_sdiv_9bkb<1,100,96,64,96>("normalizer_sdiv_9bkb_U1");
    normalizer_sdiv_9bkb_U1->clk(ap_clk);
    normalizer_sdiv_9bkb_U1->reset(ap_rst_n_inv);
    normalizer_sdiv_9bkb_U1->din0(grp_fu_113_p0);
    normalizer_sdiv_9bkb_U1->din1(tmp_4_fu_95_p3);
    normalizer_sdiv_9bkb_U1->ce(ap_var_for_const0);
    normalizer_sdiv_9bkb_U1->dout(grp_fu_113_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_state100_pp0_stage0_iter99);

    SC_METHOD(thread_ap_block_state101_pp0_stage0_iter100);

    SC_METHOD(thread_ap_block_state102_pp0_stage0_iter101);

    SC_METHOD(thread_ap_block_state103_pp0_stage0_iter102);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter14);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter15);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter16);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter17);

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter18);

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_state20_pp0_stage0_iter19);

    SC_METHOD(thread_ap_block_state21_pp0_stage0_iter20);

    SC_METHOD(thread_ap_block_state22_pp0_stage0_iter21);

    SC_METHOD(thread_ap_block_state23_pp0_stage0_iter22);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter23);

    SC_METHOD(thread_ap_block_state25_pp0_stage0_iter24);

    SC_METHOD(thread_ap_block_state26_pp0_stage0_iter25);

    SC_METHOD(thread_ap_block_state27_pp0_stage0_iter26);

    SC_METHOD(thread_ap_block_state28_pp0_stage0_iter27);

    SC_METHOD(thread_ap_block_state29_pp0_stage0_iter28);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state30_pp0_stage0_iter29);

    SC_METHOD(thread_ap_block_state31_pp0_stage0_iter30);

    SC_METHOD(thread_ap_block_state32_pp0_stage0_iter31);

    SC_METHOD(thread_ap_block_state33_pp0_stage0_iter32);

    SC_METHOD(thread_ap_block_state34_pp0_stage0_iter33);

    SC_METHOD(thread_ap_block_state35_pp0_stage0_iter34);

    SC_METHOD(thread_ap_block_state36_pp0_stage0_iter35);

    SC_METHOD(thread_ap_block_state37_pp0_stage0_iter36);

    SC_METHOD(thread_ap_block_state38_pp0_stage0_iter37);

    SC_METHOD(thread_ap_block_state39_pp0_stage0_iter38);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state40_pp0_stage0_iter39);

    SC_METHOD(thread_ap_block_state41_pp0_stage0_iter40);

    SC_METHOD(thread_ap_block_state42_pp0_stage0_iter41);

    SC_METHOD(thread_ap_block_state43_pp0_stage0_iter42);

    SC_METHOD(thread_ap_block_state44_pp0_stage0_iter43);

    SC_METHOD(thread_ap_block_state45_pp0_stage0_iter44);

    SC_METHOD(thread_ap_block_state46_pp0_stage0_iter45);

    SC_METHOD(thread_ap_block_state47_pp0_stage0_iter46);

    SC_METHOD(thread_ap_block_state48_pp0_stage0_iter47);

    SC_METHOD(thread_ap_block_state49_pp0_stage0_iter48);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state50_pp0_stage0_iter49);

    SC_METHOD(thread_ap_block_state51_pp0_stage0_iter50);

    SC_METHOD(thread_ap_block_state52_pp0_stage0_iter51);

    SC_METHOD(thread_ap_block_state53_pp0_stage0_iter52);

    SC_METHOD(thread_ap_block_state54_pp0_stage0_iter53);

    SC_METHOD(thread_ap_block_state55_pp0_stage0_iter54);

    SC_METHOD(thread_ap_block_state56_pp0_stage0_iter55);

    SC_METHOD(thread_ap_block_state57_pp0_stage0_iter56);

    SC_METHOD(thread_ap_block_state58_pp0_stage0_iter57);

    SC_METHOD(thread_ap_block_state59_pp0_stage0_iter58);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state60_pp0_stage0_iter59);

    SC_METHOD(thread_ap_block_state61_pp0_stage0_iter60);

    SC_METHOD(thread_ap_block_state62_pp0_stage0_iter61);

    SC_METHOD(thread_ap_block_state63_pp0_stage0_iter62);

    SC_METHOD(thread_ap_block_state64_pp0_stage0_iter63);

    SC_METHOD(thread_ap_block_state65_pp0_stage0_iter64);

    SC_METHOD(thread_ap_block_state66_pp0_stage0_iter65);

    SC_METHOD(thread_ap_block_state67_pp0_stage0_iter66);

    SC_METHOD(thread_ap_block_state68_pp0_stage0_iter67);

    SC_METHOD(thread_ap_block_state69_pp0_stage0_iter68);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state70_pp0_stage0_iter69);

    SC_METHOD(thread_ap_block_state71_pp0_stage0_iter70);

    SC_METHOD(thread_ap_block_state72_pp0_stage0_iter71);

    SC_METHOD(thread_ap_block_state73_pp0_stage0_iter72);

    SC_METHOD(thread_ap_block_state74_pp0_stage0_iter73);

    SC_METHOD(thread_ap_block_state75_pp0_stage0_iter74);

    SC_METHOD(thread_ap_block_state76_pp0_stage0_iter75);

    SC_METHOD(thread_ap_block_state77_pp0_stage0_iter76);

    SC_METHOD(thread_ap_block_state78_pp0_stage0_iter77);

    SC_METHOD(thread_ap_block_state79_pp0_stage0_iter78);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state80_pp0_stage0_iter79);

    SC_METHOD(thread_ap_block_state81_pp0_stage0_iter80);

    SC_METHOD(thread_ap_block_state82_pp0_stage0_iter81);

    SC_METHOD(thread_ap_block_state83_pp0_stage0_iter82);

    SC_METHOD(thread_ap_block_state84_pp0_stage0_iter83);

    SC_METHOD(thread_ap_block_state85_pp0_stage0_iter84);

    SC_METHOD(thread_ap_block_state86_pp0_stage0_iter85);

    SC_METHOD(thread_ap_block_state87_pp0_stage0_iter86);

    SC_METHOD(thread_ap_block_state88_pp0_stage0_iter87);

    SC_METHOD(thread_ap_block_state89_pp0_stage0_iter88);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state90_pp0_stage0_iter89);

    SC_METHOD(thread_ap_block_state91_pp0_stage0_iter90);

    SC_METHOD(thread_ap_block_state92_pp0_stage0_iter91);

    SC_METHOD(thread_ap_block_state93_pp0_stage0_iter92);

    SC_METHOD(thread_ap_block_state94_pp0_stage0_iter93);

    SC_METHOD(thread_ap_block_state95_pp0_stage0_iter94);

    SC_METHOD(thread_ap_block_state96_pp0_stage0_iter95);

    SC_METHOD(thread_ap_block_state97_pp0_stage0_iter96);

    SC_METHOD(thread_ap_block_state98_pp0_stage0_iter97);

    SC_METHOD(thread_ap_block_state99_pp0_stage0_iter98);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter8);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_enable_reg_pp0_iter102 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_enable_reg_pp0_iter19 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_enable_reg_pp0_iter21 );
    sensitive << ( ap_enable_reg_pp0_iter22 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( ap_enable_reg_pp0_iter24 );
    sensitive << ( ap_enable_reg_pp0_iter25 );
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( ap_enable_reg_pp0_iter27 );
    sensitive << ( ap_enable_reg_pp0_iter28 );
    sensitive << ( ap_enable_reg_pp0_iter29 );
    sensitive << ( ap_enable_reg_pp0_iter30 );
    sensitive << ( ap_enable_reg_pp0_iter31 );
    sensitive << ( ap_enable_reg_pp0_iter32 );
    sensitive << ( ap_enable_reg_pp0_iter33 );
    sensitive << ( ap_enable_reg_pp0_iter34 );
    sensitive << ( ap_enable_reg_pp0_iter35 );
    sensitive << ( ap_enable_reg_pp0_iter36 );
    sensitive << ( ap_enable_reg_pp0_iter37 );
    sensitive << ( ap_enable_reg_pp0_iter38 );
    sensitive << ( ap_enable_reg_pp0_iter39 );
    sensitive << ( ap_enable_reg_pp0_iter40 );
    sensitive << ( ap_enable_reg_pp0_iter41 );
    sensitive << ( ap_enable_reg_pp0_iter42 );
    sensitive << ( ap_enable_reg_pp0_iter43 );
    sensitive << ( ap_enable_reg_pp0_iter44 );
    sensitive << ( ap_enable_reg_pp0_iter45 );
    sensitive << ( ap_enable_reg_pp0_iter46 );
    sensitive << ( ap_enable_reg_pp0_iter47 );
    sensitive << ( ap_enable_reg_pp0_iter48 );
    sensitive << ( ap_enable_reg_pp0_iter49 );
    sensitive << ( ap_enable_reg_pp0_iter50 );
    sensitive << ( ap_enable_reg_pp0_iter51 );
    sensitive << ( ap_enable_reg_pp0_iter52 );
    sensitive << ( ap_enable_reg_pp0_iter53 );
    sensitive << ( ap_enable_reg_pp0_iter54 );
    sensitive << ( ap_enable_reg_pp0_iter55 );
    sensitive << ( ap_enable_reg_pp0_iter56 );
    sensitive << ( ap_enable_reg_pp0_iter57 );
    sensitive << ( ap_enable_reg_pp0_iter58 );
    sensitive << ( ap_enable_reg_pp0_iter59 );
    sensitive << ( ap_enable_reg_pp0_iter60 );
    sensitive << ( ap_enable_reg_pp0_iter61 );
    sensitive << ( ap_enable_reg_pp0_iter62 );
    sensitive << ( ap_enable_reg_pp0_iter63 );
    sensitive << ( ap_enable_reg_pp0_iter64 );
    sensitive << ( ap_enable_reg_pp0_iter65 );
    sensitive << ( ap_enable_reg_pp0_iter66 );
    sensitive << ( ap_enable_reg_pp0_iter67 );
    sensitive << ( ap_enable_reg_pp0_iter68 );
    sensitive << ( ap_enable_reg_pp0_iter69 );
    sensitive << ( ap_enable_reg_pp0_iter70 );
    sensitive << ( ap_enable_reg_pp0_iter71 );
    sensitive << ( ap_enable_reg_pp0_iter72 );
    sensitive << ( ap_enable_reg_pp0_iter73 );
    sensitive << ( ap_enable_reg_pp0_iter74 );
    sensitive << ( ap_enable_reg_pp0_iter75 );
    sensitive << ( ap_enable_reg_pp0_iter76 );
    sensitive << ( ap_enable_reg_pp0_iter77 );
    sensitive << ( ap_enable_reg_pp0_iter78 );
    sensitive << ( ap_enable_reg_pp0_iter79 );
    sensitive << ( ap_enable_reg_pp0_iter80 );
    sensitive << ( ap_enable_reg_pp0_iter81 );
    sensitive << ( ap_enable_reg_pp0_iter82 );
    sensitive << ( ap_enable_reg_pp0_iter83 );
    sensitive << ( ap_enable_reg_pp0_iter84 );
    sensitive << ( ap_enable_reg_pp0_iter85 );
    sensitive << ( ap_enable_reg_pp0_iter86 );
    sensitive << ( ap_enable_reg_pp0_iter87 );
    sensitive << ( ap_enable_reg_pp0_iter88 );
    sensitive << ( ap_enable_reg_pp0_iter89 );
    sensitive << ( ap_enable_reg_pp0_iter90 );
    sensitive << ( ap_enable_reg_pp0_iter91 );
    sensitive << ( ap_enable_reg_pp0_iter92 );
    sensitive << ( ap_enable_reg_pp0_iter93 );
    sensitive << ( ap_enable_reg_pp0_iter94 );
    sensitive << ( ap_enable_reg_pp0_iter95 );
    sensitive << ( ap_enable_reg_pp0_iter96 );
    sensitive << ( ap_enable_reg_pp0_iter97 );
    sensitive << ( ap_enable_reg_pp0_iter98 );
    sensitive << ( ap_enable_reg_pp0_iter99 );
    sensitive << ( ap_enable_reg_pp0_iter100 );
    sensitive << ( ap_enable_reg_pp0_iter101 );
    sensitive << ( ap_enable_reg_pp0_iter102 );

    SC_METHOD(thread_ap_idle_pp0_0to101);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_enable_reg_pp0_iter19 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_enable_reg_pp0_iter21 );
    sensitive << ( ap_enable_reg_pp0_iter22 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( ap_enable_reg_pp0_iter24 );
    sensitive << ( ap_enable_reg_pp0_iter25 );
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( ap_enable_reg_pp0_iter27 );
    sensitive << ( ap_enable_reg_pp0_iter28 );
    sensitive << ( ap_enable_reg_pp0_iter29 );
    sensitive << ( ap_enable_reg_pp0_iter30 );
    sensitive << ( ap_enable_reg_pp0_iter31 );
    sensitive << ( ap_enable_reg_pp0_iter32 );
    sensitive << ( ap_enable_reg_pp0_iter33 );
    sensitive << ( ap_enable_reg_pp0_iter34 );
    sensitive << ( ap_enable_reg_pp0_iter35 );
    sensitive << ( ap_enable_reg_pp0_iter36 );
    sensitive << ( ap_enable_reg_pp0_iter37 );
    sensitive << ( ap_enable_reg_pp0_iter38 );
    sensitive << ( ap_enable_reg_pp0_iter39 );
    sensitive << ( ap_enable_reg_pp0_iter40 );
    sensitive << ( ap_enable_reg_pp0_iter41 );
    sensitive << ( ap_enable_reg_pp0_iter42 );
    sensitive << ( ap_enable_reg_pp0_iter43 );
    sensitive << ( ap_enable_reg_pp0_iter44 );
    sensitive << ( ap_enable_reg_pp0_iter45 );
    sensitive << ( ap_enable_reg_pp0_iter46 );
    sensitive << ( ap_enable_reg_pp0_iter47 );
    sensitive << ( ap_enable_reg_pp0_iter48 );
    sensitive << ( ap_enable_reg_pp0_iter49 );
    sensitive << ( ap_enable_reg_pp0_iter50 );
    sensitive << ( ap_enable_reg_pp0_iter51 );
    sensitive << ( ap_enable_reg_pp0_iter52 );
    sensitive << ( ap_enable_reg_pp0_iter53 );
    sensitive << ( ap_enable_reg_pp0_iter54 );
    sensitive << ( ap_enable_reg_pp0_iter55 );
    sensitive << ( ap_enable_reg_pp0_iter56 );
    sensitive << ( ap_enable_reg_pp0_iter57 );
    sensitive << ( ap_enable_reg_pp0_iter58 );
    sensitive << ( ap_enable_reg_pp0_iter59 );
    sensitive << ( ap_enable_reg_pp0_iter60 );
    sensitive << ( ap_enable_reg_pp0_iter61 );
    sensitive << ( ap_enable_reg_pp0_iter62 );
    sensitive << ( ap_enable_reg_pp0_iter63 );
    sensitive << ( ap_enable_reg_pp0_iter64 );
    sensitive << ( ap_enable_reg_pp0_iter65 );
    sensitive << ( ap_enable_reg_pp0_iter66 );
    sensitive << ( ap_enable_reg_pp0_iter67 );
    sensitive << ( ap_enable_reg_pp0_iter68 );
    sensitive << ( ap_enable_reg_pp0_iter69 );
    sensitive << ( ap_enable_reg_pp0_iter70 );
    sensitive << ( ap_enable_reg_pp0_iter71 );
    sensitive << ( ap_enable_reg_pp0_iter72 );
    sensitive << ( ap_enable_reg_pp0_iter73 );
    sensitive << ( ap_enable_reg_pp0_iter74 );
    sensitive << ( ap_enable_reg_pp0_iter75 );
    sensitive << ( ap_enable_reg_pp0_iter76 );
    sensitive << ( ap_enable_reg_pp0_iter77 );
    sensitive << ( ap_enable_reg_pp0_iter78 );
    sensitive << ( ap_enable_reg_pp0_iter79 );
    sensitive << ( ap_enable_reg_pp0_iter80 );
    sensitive << ( ap_enable_reg_pp0_iter81 );
    sensitive << ( ap_enable_reg_pp0_iter82 );
    sensitive << ( ap_enable_reg_pp0_iter83 );
    sensitive << ( ap_enable_reg_pp0_iter84 );
    sensitive << ( ap_enable_reg_pp0_iter85 );
    sensitive << ( ap_enable_reg_pp0_iter86 );
    sensitive << ( ap_enable_reg_pp0_iter87 );
    sensitive << ( ap_enable_reg_pp0_iter88 );
    sensitive << ( ap_enable_reg_pp0_iter89 );
    sensitive << ( ap_enable_reg_pp0_iter90 );
    sensitive << ( ap_enable_reg_pp0_iter91 );
    sensitive << ( ap_enable_reg_pp0_iter92 );
    sensitive << ( ap_enable_reg_pp0_iter93 );
    sensitive << ( ap_enable_reg_pp0_iter94 );
    sensitive << ( ap_enable_reg_pp0_iter95 );
    sensitive << ( ap_enable_reg_pp0_iter96 );
    sensitive << ( ap_enable_reg_pp0_iter97 );
    sensitive << ( ap_enable_reg_pp0_iter98 );
    sensitive << ( ap_enable_reg_pp0_iter99 );
    sensitive << ( ap_enable_reg_pp0_iter100 );
    sensitive << ( ap_enable_reg_pp0_iter101 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to101 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_grp_fu_113_p0);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( p_Val2_s_reg_151 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_m_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter102 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_p_Val2_1_fu_91_p2);
    sensitive << ( max_high_read_reg_129 );
    sensitive << ( min_high_read_reg_134 );

    SC_METHOD(thread_p_Val2_s_fu_87_p2);
    sensitive << ( min_high_read_reg_134 );
    sensitive << ( regs_in_read_reg_140 );

    SC_METHOD(thread_tmp_4_fu_95_p3);
    sensitive << ( p_Val2_1_reg_156 );

    SC_METHOD(thread_tmp_fu_77_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( last );
    sensitive << ( regs_in_read_reg_140 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter16 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter17 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter18 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter19 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter20 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter21 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter22 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter23 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter24 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter25 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter26 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter27 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter28 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter29 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter30 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter31 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter32 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter33 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter34 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter35 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter36 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter37 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter38 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter39 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter40 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter41 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter42 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter43 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter44 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter45 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter46 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter47 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter48 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter49 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter50 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter51 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter52 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter53 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter54 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter55 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter56 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter57 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter58 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter59 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter60 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter61 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter62 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter63 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter64 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter65 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter66 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter67 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter68 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter69 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter70 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter71 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter72 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter73 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter74 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter75 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter76 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter77 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter78 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter79 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter80 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter81 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter82 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter83 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter84 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter85 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter86 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter87 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter88 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter89 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter90 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter91 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter92 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter93 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter94 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter95 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter96 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter97 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter98 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter99 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter100 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter101 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter102 = SC_LOGIC_0;
    last = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "normalizer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_in_AWVALID, "(port)s_axi_in_AWVALID");
    sc_trace(mVcdFile, s_axi_in_AWREADY, "(port)s_axi_in_AWREADY");
    sc_trace(mVcdFile, s_axi_in_AWADDR, "(port)s_axi_in_AWADDR");
    sc_trace(mVcdFile, s_axi_in_WVALID, "(port)s_axi_in_WVALID");
    sc_trace(mVcdFile, s_axi_in_WREADY, "(port)s_axi_in_WREADY");
    sc_trace(mVcdFile, s_axi_in_WDATA, "(port)s_axi_in_WDATA");
    sc_trace(mVcdFile, s_axi_in_WSTRB, "(port)s_axi_in_WSTRB");
    sc_trace(mVcdFile, s_axi_in_ARVALID, "(port)s_axi_in_ARVALID");
    sc_trace(mVcdFile, s_axi_in_ARREADY, "(port)s_axi_in_ARREADY");
    sc_trace(mVcdFile, s_axi_in_ARADDR, "(port)s_axi_in_ARADDR");
    sc_trace(mVcdFile, s_axi_in_RVALID, "(port)s_axi_in_RVALID");
    sc_trace(mVcdFile, s_axi_in_RREADY, "(port)s_axi_in_RREADY");
    sc_trace(mVcdFile, s_axi_in_RDATA, "(port)s_axi_in_RDATA");
    sc_trace(mVcdFile, s_axi_in_RRESP, "(port)s_axi_in_RRESP");
    sc_trace(mVcdFile, s_axi_in_BVALID, "(port)s_axi_in_BVALID");
    sc_trace(mVcdFile, s_axi_in_BREADY, "(port)s_axi_in_BREADY");
    sc_trace(mVcdFile, s_axi_in_BRESP, "(port)s_axi_in_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter16, "ap_enable_reg_pp0_iter16");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter17, "ap_enable_reg_pp0_iter17");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter18, "ap_enable_reg_pp0_iter18");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter19, "ap_enable_reg_pp0_iter19");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter20, "ap_enable_reg_pp0_iter20");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter21, "ap_enable_reg_pp0_iter21");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter22, "ap_enable_reg_pp0_iter22");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter23, "ap_enable_reg_pp0_iter23");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter24, "ap_enable_reg_pp0_iter24");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter25, "ap_enable_reg_pp0_iter25");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter26, "ap_enable_reg_pp0_iter26");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter27, "ap_enable_reg_pp0_iter27");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter28, "ap_enable_reg_pp0_iter28");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter29, "ap_enable_reg_pp0_iter29");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter30, "ap_enable_reg_pp0_iter30");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter31, "ap_enable_reg_pp0_iter31");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter32, "ap_enable_reg_pp0_iter32");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter33, "ap_enable_reg_pp0_iter33");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter34, "ap_enable_reg_pp0_iter34");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter35, "ap_enable_reg_pp0_iter35");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter36, "ap_enable_reg_pp0_iter36");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter37, "ap_enable_reg_pp0_iter37");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter38, "ap_enable_reg_pp0_iter38");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter39, "ap_enable_reg_pp0_iter39");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter40, "ap_enable_reg_pp0_iter40");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter41, "ap_enable_reg_pp0_iter41");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter42, "ap_enable_reg_pp0_iter42");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter43, "ap_enable_reg_pp0_iter43");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter44, "ap_enable_reg_pp0_iter44");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter45, "ap_enable_reg_pp0_iter45");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter46, "ap_enable_reg_pp0_iter46");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter47, "ap_enable_reg_pp0_iter47");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter48, "ap_enable_reg_pp0_iter48");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter49, "ap_enable_reg_pp0_iter49");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter50, "ap_enable_reg_pp0_iter50");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter51, "ap_enable_reg_pp0_iter51");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter52, "ap_enable_reg_pp0_iter52");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter53, "ap_enable_reg_pp0_iter53");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter54, "ap_enable_reg_pp0_iter54");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter55, "ap_enable_reg_pp0_iter55");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter56, "ap_enable_reg_pp0_iter56");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter57, "ap_enable_reg_pp0_iter57");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter58, "ap_enable_reg_pp0_iter58");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter59, "ap_enable_reg_pp0_iter59");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter60, "ap_enable_reg_pp0_iter60");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter61, "ap_enable_reg_pp0_iter61");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter62, "ap_enable_reg_pp0_iter62");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter63, "ap_enable_reg_pp0_iter63");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter64, "ap_enable_reg_pp0_iter64");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter65, "ap_enable_reg_pp0_iter65");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter66, "ap_enable_reg_pp0_iter66");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter67, "ap_enable_reg_pp0_iter67");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter68, "ap_enable_reg_pp0_iter68");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter69, "ap_enable_reg_pp0_iter69");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter70, "ap_enable_reg_pp0_iter70");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter71, "ap_enable_reg_pp0_iter71");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter72, "ap_enable_reg_pp0_iter72");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter73, "ap_enable_reg_pp0_iter73");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter74, "ap_enable_reg_pp0_iter74");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter75, "ap_enable_reg_pp0_iter75");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter76, "ap_enable_reg_pp0_iter76");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter77, "ap_enable_reg_pp0_iter77");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter78, "ap_enable_reg_pp0_iter78");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter79, "ap_enable_reg_pp0_iter79");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter80, "ap_enable_reg_pp0_iter80");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter81, "ap_enable_reg_pp0_iter81");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter82, "ap_enable_reg_pp0_iter82");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter83, "ap_enable_reg_pp0_iter83");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter84, "ap_enable_reg_pp0_iter84");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter85, "ap_enable_reg_pp0_iter85");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter86, "ap_enable_reg_pp0_iter86");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter87, "ap_enable_reg_pp0_iter87");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter88, "ap_enable_reg_pp0_iter88");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter89, "ap_enable_reg_pp0_iter89");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter90, "ap_enable_reg_pp0_iter90");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter91, "ap_enable_reg_pp0_iter91");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter92, "ap_enable_reg_pp0_iter92");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter93, "ap_enable_reg_pp0_iter93");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter94, "ap_enable_reg_pp0_iter94");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter95, "ap_enable_reg_pp0_iter95");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter96, "ap_enable_reg_pp0_iter96");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter97, "ap_enable_reg_pp0_iter97");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter98, "ap_enable_reg_pp0_iter98");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter99, "ap_enable_reg_pp0_iter99");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter100, "ap_enable_reg_pp0_iter100");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter101, "ap_enable_reg_pp0_iter101");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter102, "ap_enable_reg_pp0_iter102");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter3, "ap_block_state4_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter4, "ap_block_state5_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter5, "ap_block_state6_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter6, "ap_block_state7_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter7, "ap_block_state8_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter8, "ap_block_state9_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter9, "ap_block_state10_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter10, "ap_block_state11_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter11, "ap_block_state12_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter12, "ap_block_state13_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter13, "ap_block_state14_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter14, "ap_block_state15_pp0_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter15, "ap_block_state16_pp0_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter16, "ap_block_state17_pp0_stage0_iter16");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter17, "ap_block_state18_pp0_stage0_iter17");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter18, "ap_block_state19_pp0_stage0_iter18");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage0_iter19, "ap_block_state20_pp0_stage0_iter19");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage0_iter20, "ap_block_state21_pp0_stage0_iter20");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage0_iter21, "ap_block_state22_pp0_stage0_iter21");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage0_iter22, "ap_block_state23_pp0_stage0_iter22");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter23, "ap_block_state24_pp0_stage0_iter23");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage0_iter24, "ap_block_state25_pp0_stage0_iter24");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage0_iter25, "ap_block_state26_pp0_stage0_iter25");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage0_iter26, "ap_block_state27_pp0_stage0_iter26");
    sc_trace(mVcdFile, ap_block_state28_pp0_stage0_iter27, "ap_block_state28_pp0_stage0_iter27");
    sc_trace(mVcdFile, ap_block_state29_pp0_stage0_iter28, "ap_block_state29_pp0_stage0_iter28");
    sc_trace(mVcdFile, ap_block_state30_pp0_stage0_iter29, "ap_block_state30_pp0_stage0_iter29");
    sc_trace(mVcdFile, ap_block_state31_pp0_stage0_iter30, "ap_block_state31_pp0_stage0_iter30");
    sc_trace(mVcdFile, ap_block_state32_pp0_stage0_iter31, "ap_block_state32_pp0_stage0_iter31");
    sc_trace(mVcdFile, ap_block_state33_pp0_stage0_iter32, "ap_block_state33_pp0_stage0_iter32");
    sc_trace(mVcdFile, ap_block_state34_pp0_stage0_iter33, "ap_block_state34_pp0_stage0_iter33");
    sc_trace(mVcdFile, ap_block_state35_pp0_stage0_iter34, "ap_block_state35_pp0_stage0_iter34");
    sc_trace(mVcdFile, ap_block_state36_pp0_stage0_iter35, "ap_block_state36_pp0_stage0_iter35");
    sc_trace(mVcdFile, ap_block_state37_pp0_stage0_iter36, "ap_block_state37_pp0_stage0_iter36");
    sc_trace(mVcdFile, ap_block_state38_pp0_stage0_iter37, "ap_block_state38_pp0_stage0_iter37");
    sc_trace(mVcdFile, ap_block_state39_pp0_stage0_iter38, "ap_block_state39_pp0_stage0_iter38");
    sc_trace(mVcdFile, ap_block_state40_pp0_stage0_iter39, "ap_block_state40_pp0_stage0_iter39");
    sc_trace(mVcdFile, ap_block_state41_pp0_stage0_iter40, "ap_block_state41_pp0_stage0_iter40");
    sc_trace(mVcdFile, ap_block_state42_pp0_stage0_iter41, "ap_block_state42_pp0_stage0_iter41");
    sc_trace(mVcdFile, ap_block_state43_pp0_stage0_iter42, "ap_block_state43_pp0_stage0_iter42");
    sc_trace(mVcdFile, ap_block_state44_pp0_stage0_iter43, "ap_block_state44_pp0_stage0_iter43");
    sc_trace(mVcdFile, ap_block_state45_pp0_stage0_iter44, "ap_block_state45_pp0_stage0_iter44");
    sc_trace(mVcdFile, ap_block_state46_pp0_stage0_iter45, "ap_block_state46_pp0_stage0_iter45");
    sc_trace(mVcdFile, ap_block_state47_pp0_stage0_iter46, "ap_block_state47_pp0_stage0_iter46");
    sc_trace(mVcdFile, ap_block_state48_pp0_stage0_iter47, "ap_block_state48_pp0_stage0_iter47");
    sc_trace(mVcdFile, ap_block_state49_pp0_stage0_iter48, "ap_block_state49_pp0_stage0_iter48");
    sc_trace(mVcdFile, ap_block_state50_pp0_stage0_iter49, "ap_block_state50_pp0_stage0_iter49");
    sc_trace(mVcdFile, ap_block_state51_pp0_stage0_iter50, "ap_block_state51_pp0_stage0_iter50");
    sc_trace(mVcdFile, ap_block_state52_pp0_stage0_iter51, "ap_block_state52_pp0_stage0_iter51");
    sc_trace(mVcdFile, ap_block_state53_pp0_stage0_iter52, "ap_block_state53_pp0_stage0_iter52");
    sc_trace(mVcdFile, ap_block_state54_pp0_stage0_iter53, "ap_block_state54_pp0_stage0_iter53");
    sc_trace(mVcdFile, ap_block_state55_pp0_stage0_iter54, "ap_block_state55_pp0_stage0_iter54");
    sc_trace(mVcdFile, ap_block_state56_pp0_stage0_iter55, "ap_block_state56_pp0_stage0_iter55");
    sc_trace(mVcdFile, ap_block_state57_pp0_stage0_iter56, "ap_block_state57_pp0_stage0_iter56");
    sc_trace(mVcdFile, ap_block_state58_pp0_stage0_iter57, "ap_block_state58_pp0_stage0_iter57");
    sc_trace(mVcdFile, ap_block_state59_pp0_stage0_iter58, "ap_block_state59_pp0_stage0_iter58");
    sc_trace(mVcdFile, ap_block_state60_pp0_stage0_iter59, "ap_block_state60_pp0_stage0_iter59");
    sc_trace(mVcdFile, ap_block_state61_pp0_stage0_iter60, "ap_block_state61_pp0_stage0_iter60");
    sc_trace(mVcdFile, ap_block_state62_pp0_stage0_iter61, "ap_block_state62_pp0_stage0_iter61");
    sc_trace(mVcdFile, ap_block_state63_pp0_stage0_iter62, "ap_block_state63_pp0_stage0_iter62");
    sc_trace(mVcdFile, ap_block_state64_pp0_stage0_iter63, "ap_block_state64_pp0_stage0_iter63");
    sc_trace(mVcdFile, ap_block_state65_pp0_stage0_iter64, "ap_block_state65_pp0_stage0_iter64");
    sc_trace(mVcdFile, ap_block_state66_pp0_stage0_iter65, "ap_block_state66_pp0_stage0_iter65");
    sc_trace(mVcdFile, ap_block_state67_pp0_stage0_iter66, "ap_block_state67_pp0_stage0_iter66");
    sc_trace(mVcdFile, ap_block_state68_pp0_stage0_iter67, "ap_block_state68_pp0_stage0_iter67");
    sc_trace(mVcdFile, ap_block_state69_pp0_stage0_iter68, "ap_block_state69_pp0_stage0_iter68");
    sc_trace(mVcdFile, ap_block_state70_pp0_stage0_iter69, "ap_block_state70_pp0_stage0_iter69");
    sc_trace(mVcdFile, ap_block_state71_pp0_stage0_iter70, "ap_block_state71_pp0_stage0_iter70");
    sc_trace(mVcdFile, ap_block_state72_pp0_stage0_iter71, "ap_block_state72_pp0_stage0_iter71");
    sc_trace(mVcdFile, ap_block_state73_pp0_stage0_iter72, "ap_block_state73_pp0_stage0_iter72");
    sc_trace(mVcdFile, ap_block_state74_pp0_stage0_iter73, "ap_block_state74_pp0_stage0_iter73");
    sc_trace(mVcdFile, ap_block_state75_pp0_stage0_iter74, "ap_block_state75_pp0_stage0_iter74");
    sc_trace(mVcdFile, ap_block_state76_pp0_stage0_iter75, "ap_block_state76_pp0_stage0_iter75");
    sc_trace(mVcdFile, ap_block_state77_pp0_stage0_iter76, "ap_block_state77_pp0_stage0_iter76");
    sc_trace(mVcdFile, ap_block_state78_pp0_stage0_iter77, "ap_block_state78_pp0_stage0_iter77");
    sc_trace(mVcdFile, ap_block_state79_pp0_stage0_iter78, "ap_block_state79_pp0_stage0_iter78");
    sc_trace(mVcdFile, ap_block_state80_pp0_stage0_iter79, "ap_block_state80_pp0_stage0_iter79");
    sc_trace(mVcdFile, ap_block_state81_pp0_stage0_iter80, "ap_block_state81_pp0_stage0_iter80");
    sc_trace(mVcdFile, ap_block_state82_pp0_stage0_iter81, "ap_block_state82_pp0_stage0_iter81");
    sc_trace(mVcdFile, ap_block_state83_pp0_stage0_iter82, "ap_block_state83_pp0_stage0_iter82");
    sc_trace(mVcdFile, ap_block_state84_pp0_stage0_iter83, "ap_block_state84_pp0_stage0_iter83");
    sc_trace(mVcdFile, ap_block_state85_pp0_stage0_iter84, "ap_block_state85_pp0_stage0_iter84");
    sc_trace(mVcdFile, ap_block_state86_pp0_stage0_iter85, "ap_block_state86_pp0_stage0_iter85");
    sc_trace(mVcdFile, ap_block_state87_pp0_stage0_iter86, "ap_block_state87_pp0_stage0_iter86");
    sc_trace(mVcdFile, ap_block_state88_pp0_stage0_iter87, "ap_block_state88_pp0_stage0_iter87");
    sc_trace(mVcdFile, ap_block_state89_pp0_stage0_iter88, "ap_block_state89_pp0_stage0_iter88");
    sc_trace(mVcdFile, ap_block_state90_pp0_stage0_iter89, "ap_block_state90_pp0_stage0_iter89");
    sc_trace(mVcdFile, ap_block_state91_pp0_stage0_iter90, "ap_block_state91_pp0_stage0_iter90");
    sc_trace(mVcdFile, ap_block_state92_pp0_stage0_iter91, "ap_block_state92_pp0_stage0_iter91");
    sc_trace(mVcdFile, ap_block_state93_pp0_stage0_iter92, "ap_block_state93_pp0_stage0_iter92");
    sc_trace(mVcdFile, ap_block_state94_pp0_stage0_iter93, "ap_block_state94_pp0_stage0_iter93");
    sc_trace(mVcdFile, ap_block_state95_pp0_stage0_iter94, "ap_block_state95_pp0_stage0_iter94");
    sc_trace(mVcdFile, ap_block_state96_pp0_stage0_iter95, "ap_block_state96_pp0_stage0_iter95");
    sc_trace(mVcdFile, ap_block_state97_pp0_stage0_iter96, "ap_block_state97_pp0_stage0_iter96");
    sc_trace(mVcdFile, ap_block_state98_pp0_stage0_iter97, "ap_block_state98_pp0_stage0_iter97");
    sc_trace(mVcdFile, ap_block_state99_pp0_stage0_iter98, "ap_block_state99_pp0_stage0_iter98");
    sc_trace(mVcdFile, ap_block_state100_pp0_stage0_iter99, "ap_block_state100_pp0_stage0_iter99");
    sc_trace(mVcdFile, ap_block_state101_pp0_stage0_iter100, "ap_block_state101_pp0_stage0_iter100");
    sc_trace(mVcdFile, ap_block_state102_pp0_stage0_iter101, "ap_block_state102_pp0_stage0_iter101");
    sc_trace(mVcdFile, ap_block_state103_pp0_stage0_iter102, "ap_block_state103_pp0_stage0_iter102");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, regs_in, "regs_in");
    sc_trace(mVcdFile, min_high, "min_high");
    sc_trace(mVcdFile, max_high, "max_high");
    sc_trace(mVcdFile, m_V_ap_vld, "m_V_ap_vld");
    sc_trace(mVcdFile, last, "last");
    sc_trace(mVcdFile, max_high_read_reg_129, "max_high_read_reg_129");
    sc_trace(mVcdFile, min_high_read_reg_134, "min_high_read_reg_134");
    sc_trace(mVcdFile, regs_in_read_reg_140, "regs_in_read_reg_140");
    sc_trace(mVcdFile, tmp_fu_77_p2, "tmp_fu_77_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_87_p2, "p_Val2_s_fu_87_p2");
    sc_trace(mVcdFile, p_Val2_s_reg_151, "p_Val2_s_reg_151");
    sc_trace(mVcdFile, p_Val2_1_fu_91_p2, "p_Val2_1_fu_91_p2");
    sc_trace(mVcdFile, p_Val2_1_reg_156, "p_Val2_1_reg_156");
    sc_trace(mVcdFile, tmp_2_reg_171, "tmp_2_reg_171");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_4_fu_95_p3, "tmp_4_fu_95_p3");
    sc_trace(mVcdFile, grp_fu_113_p0, "grp_fu_113_p0");
    sc_trace(mVcdFile, grp_fu_113_p2, "grp_fu_113_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to101, "ap_idle_pp0_0to101");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("normalizer.hdltvin.dat");
    mHdltvoutHandle.open("normalizer.hdltvout.dat");
}

normalizer::~normalizer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete normalizer_in_s_axi_U;
    delete normalizer_sdiv_9bkb_U1;
}

void normalizer::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void normalizer::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter100 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter100 = ap_enable_reg_pp0_iter99.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter101 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter101 = ap_enable_reg_pp0_iter100.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter102 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter102 = ap_enable_reg_pp0_iter101.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter16 = ap_enable_reg_pp0_iter15.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter17 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter17 = ap_enable_reg_pp0_iter16.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter18 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter18 = ap_enable_reg_pp0_iter17.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter19 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter19 = ap_enable_reg_pp0_iter18.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter20 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter20 = ap_enable_reg_pp0_iter19.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter21 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter21 = ap_enable_reg_pp0_iter20.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter22 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter22 = ap_enable_reg_pp0_iter21.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter23 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter23 = ap_enable_reg_pp0_iter22.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter24 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter24 = ap_enable_reg_pp0_iter23.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter25 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter25 = ap_enable_reg_pp0_iter24.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter26 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter26 = ap_enable_reg_pp0_iter25.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter27 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter27 = ap_enable_reg_pp0_iter26.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter28 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter28 = ap_enable_reg_pp0_iter27.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter29 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter29 = ap_enable_reg_pp0_iter28.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter30 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter30 = ap_enable_reg_pp0_iter29.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter31 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter31 = ap_enable_reg_pp0_iter30.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter32 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter32 = ap_enable_reg_pp0_iter31.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter33 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter33 = ap_enable_reg_pp0_iter32.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter34 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter34 = ap_enable_reg_pp0_iter33.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter35 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter35 = ap_enable_reg_pp0_iter34.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter36 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter36 = ap_enable_reg_pp0_iter35.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter37 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter37 = ap_enable_reg_pp0_iter36.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter38 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter38 = ap_enable_reg_pp0_iter37.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter39 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter39 = ap_enable_reg_pp0_iter38.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter40 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter40 = ap_enable_reg_pp0_iter39.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter41 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter41 = ap_enable_reg_pp0_iter40.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter42 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter42 = ap_enable_reg_pp0_iter41.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter43 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter43 = ap_enable_reg_pp0_iter42.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter44 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter44 = ap_enable_reg_pp0_iter43.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter45 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter45 = ap_enable_reg_pp0_iter44.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter46 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter46 = ap_enable_reg_pp0_iter45.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter47 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter47 = ap_enable_reg_pp0_iter46.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter48 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter48 = ap_enable_reg_pp0_iter47.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter49 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter49 = ap_enable_reg_pp0_iter48.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter50 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter50 = ap_enable_reg_pp0_iter49.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter51 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter51 = ap_enable_reg_pp0_iter50.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter52 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter52 = ap_enable_reg_pp0_iter51.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter53 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter53 = ap_enable_reg_pp0_iter52.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter54 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter54 = ap_enable_reg_pp0_iter53.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter55 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter55 = ap_enable_reg_pp0_iter54.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter56 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter56 = ap_enable_reg_pp0_iter55.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter57 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter57 = ap_enable_reg_pp0_iter56.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter58 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter58 = ap_enable_reg_pp0_iter57.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter59 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter59 = ap_enable_reg_pp0_iter58.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter60 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter60 = ap_enable_reg_pp0_iter59.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter61 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter61 = ap_enable_reg_pp0_iter60.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter62 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter62 = ap_enable_reg_pp0_iter61.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter63 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter63 = ap_enable_reg_pp0_iter62.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter64 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter64 = ap_enable_reg_pp0_iter63.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter65 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter65 = ap_enable_reg_pp0_iter64.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter66 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter66 = ap_enable_reg_pp0_iter65.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter67 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter67 = ap_enable_reg_pp0_iter66.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter68 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter68 = ap_enable_reg_pp0_iter67.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter69 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter69 = ap_enable_reg_pp0_iter68.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter70 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter70 = ap_enable_reg_pp0_iter69.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter71 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter71 = ap_enable_reg_pp0_iter70.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter72 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter72 = ap_enable_reg_pp0_iter71.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter73 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter73 = ap_enable_reg_pp0_iter72.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter74 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter74 = ap_enable_reg_pp0_iter73.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter75 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter75 = ap_enable_reg_pp0_iter74.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter76 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter76 = ap_enable_reg_pp0_iter75.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter77 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter77 = ap_enable_reg_pp0_iter76.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter78 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter78 = ap_enable_reg_pp0_iter77.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter79 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter79 = ap_enable_reg_pp0_iter78.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter80 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter80 = ap_enable_reg_pp0_iter79.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter81 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter81 = ap_enable_reg_pp0_iter80.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter82 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter82 = ap_enable_reg_pp0_iter81.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter83 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter83 = ap_enable_reg_pp0_iter82.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter84 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter84 = ap_enable_reg_pp0_iter83.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter85 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter85 = ap_enable_reg_pp0_iter84.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter86 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter86 = ap_enable_reg_pp0_iter85.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter87 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter87 = ap_enable_reg_pp0_iter86.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter88 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter88 = ap_enable_reg_pp0_iter87.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter89 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter89 = ap_enable_reg_pp0_iter88.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter90 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter90 = ap_enable_reg_pp0_iter89.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter91 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter91 = ap_enable_reg_pp0_iter90.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter92 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter92 = ap_enable_reg_pp0_iter91.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter93 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter93 = ap_enable_reg_pp0_iter92.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter94 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter94 = ap_enable_reg_pp0_iter93.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter95 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter95 = ap_enable_reg_pp0_iter94.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter96 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter96 = ap_enable_reg_pp0_iter95.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter97 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter97 = ap_enable_reg_pp0_iter96.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter98 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter98 = ap_enable_reg_pp0_iter97.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter99 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter99 = ap_enable_reg_pp0_iter98.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(tmp_fu_77_p2.read(), ap_const_lv1_0))) {
        last = regs_in_read_reg_140.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        max_high_read_reg_129 = max_high.read();
        min_high_read_reg_134 = min_high.read();
        p_Val2_1_reg_156 = p_Val2_1_fu_91_p2.read();
        p_Val2_s_reg_151 = p_Val2_s_fu_87_p2.read();
        regs_in_read_reg_140 = regs_in.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        tmp_2_reg_171 = grp_fu_113_p2.read().range(32, 17);
    }
}

void normalizer::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void normalizer::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()));
}

void normalizer::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()));
}

void normalizer::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()));
}

void normalizer::thread_ap_block_state100_pp0_stage0_iter99() {
    ap_block_state100_pp0_stage0_iter99 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state101_pp0_stage0_iter100() {
    ap_block_state101_pp0_stage0_iter100 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state102_pp0_stage0_iter101() {
    ap_block_state102_pp0_stage0_iter101 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state103_pp0_stage0_iter102() {
    ap_block_state103_pp0_stage0_iter102 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state10_pp0_stage0_iter9() {
    ap_block_state10_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state11_pp0_stage0_iter10() {
    ap_block_state11_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state12_pp0_stage0_iter11() {
    ap_block_state12_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state13_pp0_stage0_iter12() {
    ap_block_state13_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state14_pp0_stage0_iter13() {
    ap_block_state14_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state15_pp0_stage0_iter14() {
    ap_block_state15_pp0_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state16_pp0_stage0_iter15() {
    ap_block_state16_pp0_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state17_pp0_stage0_iter16() {
    ap_block_state17_pp0_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state18_pp0_stage0_iter17() {
    ap_block_state18_pp0_stage0_iter17 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state19_pp0_stage0_iter18() {
    ap_block_state19_pp0_stage0_iter18 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read());
}

void normalizer::thread_ap_block_state20_pp0_stage0_iter19() {
    ap_block_state20_pp0_stage0_iter19 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state21_pp0_stage0_iter20() {
    ap_block_state21_pp0_stage0_iter20 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state22_pp0_stage0_iter21() {
    ap_block_state22_pp0_stage0_iter21 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state23_pp0_stage0_iter22() {
    ap_block_state23_pp0_stage0_iter22 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state24_pp0_stage0_iter23() {
    ap_block_state24_pp0_stage0_iter23 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state25_pp0_stage0_iter24() {
    ap_block_state25_pp0_stage0_iter24 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state26_pp0_stage0_iter25() {
    ap_block_state26_pp0_stage0_iter25 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state27_pp0_stage0_iter26() {
    ap_block_state27_pp0_stage0_iter26 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state28_pp0_stage0_iter27() {
    ap_block_state28_pp0_stage0_iter27 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state29_pp0_stage0_iter28() {
    ap_block_state29_pp0_stage0_iter28 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state30_pp0_stage0_iter29() {
    ap_block_state30_pp0_stage0_iter29 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state31_pp0_stage0_iter30() {
    ap_block_state31_pp0_stage0_iter30 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state32_pp0_stage0_iter31() {
    ap_block_state32_pp0_stage0_iter31 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state33_pp0_stage0_iter32() {
    ap_block_state33_pp0_stage0_iter32 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state34_pp0_stage0_iter33() {
    ap_block_state34_pp0_stage0_iter33 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state35_pp0_stage0_iter34() {
    ap_block_state35_pp0_stage0_iter34 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state36_pp0_stage0_iter35() {
    ap_block_state36_pp0_stage0_iter35 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state37_pp0_stage0_iter36() {
    ap_block_state37_pp0_stage0_iter36 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state38_pp0_stage0_iter37() {
    ap_block_state38_pp0_stage0_iter37 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state39_pp0_stage0_iter38() {
    ap_block_state39_pp0_stage0_iter38 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state40_pp0_stage0_iter39() {
    ap_block_state40_pp0_stage0_iter39 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state41_pp0_stage0_iter40() {
    ap_block_state41_pp0_stage0_iter40 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state42_pp0_stage0_iter41() {
    ap_block_state42_pp0_stage0_iter41 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state43_pp0_stage0_iter42() {
    ap_block_state43_pp0_stage0_iter42 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state44_pp0_stage0_iter43() {
    ap_block_state44_pp0_stage0_iter43 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state45_pp0_stage0_iter44() {
    ap_block_state45_pp0_stage0_iter44 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state46_pp0_stage0_iter45() {
    ap_block_state46_pp0_stage0_iter45 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state47_pp0_stage0_iter46() {
    ap_block_state47_pp0_stage0_iter46 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state48_pp0_stage0_iter47() {
    ap_block_state48_pp0_stage0_iter47 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state49_pp0_stage0_iter48() {
    ap_block_state49_pp0_stage0_iter48 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state4_pp0_stage0_iter3() {
    ap_block_state4_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state50_pp0_stage0_iter49() {
    ap_block_state50_pp0_stage0_iter49 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state51_pp0_stage0_iter50() {
    ap_block_state51_pp0_stage0_iter50 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state52_pp0_stage0_iter51() {
    ap_block_state52_pp0_stage0_iter51 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state53_pp0_stage0_iter52() {
    ap_block_state53_pp0_stage0_iter52 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state54_pp0_stage0_iter53() {
    ap_block_state54_pp0_stage0_iter53 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state55_pp0_stage0_iter54() {
    ap_block_state55_pp0_stage0_iter54 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state56_pp0_stage0_iter55() {
    ap_block_state56_pp0_stage0_iter55 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state57_pp0_stage0_iter56() {
    ap_block_state57_pp0_stage0_iter56 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state58_pp0_stage0_iter57() {
    ap_block_state58_pp0_stage0_iter57 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state59_pp0_stage0_iter58() {
    ap_block_state59_pp0_stage0_iter58 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state5_pp0_stage0_iter4() {
    ap_block_state5_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state60_pp0_stage0_iter59() {
    ap_block_state60_pp0_stage0_iter59 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state61_pp0_stage0_iter60() {
    ap_block_state61_pp0_stage0_iter60 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state62_pp0_stage0_iter61() {
    ap_block_state62_pp0_stage0_iter61 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state63_pp0_stage0_iter62() {
    ap_block_state63_pp0_stage0_iter62 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state64_pp0_stage0_iter63() {
    ap_block_state64_pp0_stage0_iter63 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state65_pp0_stage0_iter64() {
    ap_block_state65_pp0_stage0_iter64 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state66_pp0_stage0_iter65() {
    ap_block_state66_pp0_stage0_iter65 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state67_pp0_stage0_iter66() {
    ap_block_state67_pp0_stage0_iter66 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state68_pp0_stage0_iter67() {
    ap_block_state68_pp0_stage0_iter67 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state69_pp0_stage0_iter68() {
    ap_block_state69_pp0_stage0_iter68 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state6_pp0_stage0_iter5() {
    ap_block_state6_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state70_pp0_stage0_iter69() {
    ap_block_state70_pp0_stage0_iter69 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state71_pp0_stage0_iter70() {
    ap_block_state71_pp0_stage0_iter70 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state72_pp0_stage0_iter71() {
    ap_block_state72_pp0_stage0_iter71 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state73_pp0_stage0_iter72() {
    ap_block_state73_pp0_stage0_iter72 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state74_pp0_stage0_iter73() {
    ap_block_state74_pp0_stage0_iter73 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state75_pp0_stage0_iter74() {
    ap_block_state75_pp0_stage0_iter74 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state76_pp0_stage0_iter75() {
    ap_block_state76_pp0_stage0_iter75 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state77_pp0_stage0_iter76() {
    ap_block_state77_pp0_stage0_iter76 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state78_pp0_stage0_iter77() {
    ap_block_state78_pp0_stage0_iter77 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state79_pp0_stage0_iter78() {
    ap_block_state79_pp0_stage0_iter78 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state7_pp0_stage0_iter6() {
    ap_block_state7_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state80_pp0_stage0_iter79() {
    ap_block_state80_pp0_stage0_iter79 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state81_pp0_stage0_iter80() {
    ap_block_state81_pp0_stage0_iter80 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state82_pp0_stage0_iter81() {
    ap_block_state82_pp0_stage0_iter81 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state83_pp0_stage0_iter82() {
    ap_block_state83_pp0_stage0_iter82 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state84_pp0_stage0_iter83() {
    ap_block_state84_pp0_stage0_iter83 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state85_pp0_stage0_iter84() {
    ap_block_state85_pp0_stage0_iter84 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state86_pp0_stage0_iter85() {
    ap_block_state86_pp0_stage0_iter85 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state87_pp0_stage0_iter86() {
    ap_block_state87_pp0_stage0_iter86 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state88_pp0_stage0_iter87() {
    ap_block_state88_pp0_stage0_iter87 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state89_pp0_stage0_iter88() {
    ap_block_state89_pp0_stage0_iter88 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state8_pp0_stage0_iter7() {
    ap_block_state8_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state90_pp0_stage0_iter89() {
    ap_block_state90_pp0_stage0_iter89 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state91_pp0_stage0_iter90() {
    ap_block_state91_pp0_stage0_iter90 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state92_pp0_stage0_iter91() {
    ap_block_state92_pp0_stage0_iter91 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state93_pp0_stage0_iter92() {
    ap_block_state93_pp0_stage0_iter92 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state94_pp0_stage0_iter93() {
    ap_block_state94_pp0_stage0_iter93 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state95_pp0_stage0_iter94() {
    ap_block_state95_pp0_stage0_iter94 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state96_pp0_stage0_iter95() {
    ap_block_state96_pp0_stage0_iter95 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state97_pp0_stage0_iter96() {
    ap_block_state97_pp0_stage0_iter96 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state98_pp0_stage0_iter97() {
    ap_block_state98_pp0_stage0_iter97 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state99_pp0_stage0_iter98() {
    ap_block_state99_pp0_stage0_iter98 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_block_state9_pp0_stage0_iter8() {
    ap_block_state9_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalizer::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter102.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void normalizer::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void normalizer::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void normalizer::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void normalizer::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter19.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter20.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter21.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter22.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter24.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter26.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter27.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter28.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter29.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter30.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter31.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter32.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter33.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter34.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter35.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter36.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter37.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter38.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter39.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter40.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter41.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter42.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter43.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter44.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter45.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter46.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter47.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter48.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter49.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter50.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter51.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter52.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter53.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter54.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter55.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter56.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter57.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter58.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter59.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter60.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter61.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter62.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter63.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter64.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter65.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter66.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter67.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter68.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter69.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter70.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter71.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter72.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter73.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter74.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter75.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter76.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter77.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter78.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter79.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter80.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter81.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter82.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter83.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter84.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter85.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter86.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter87.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter88.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter89.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter90.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter91.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter92.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter93.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter94.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter95.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter96.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter97.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter98.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter99.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter100.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter101.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter102.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void normalizer::thread_ap_idle_pp0_0to101() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter19.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter20.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter21.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter22.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter24.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter26.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter27.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter28.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter29.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter30.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter31.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter32.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter33.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter34.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter35.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter36.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter37.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter38.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter39.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter40.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter41.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter42.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter43.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter44.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter45.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter46.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter47.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter48.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter49.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter50.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter51.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter52.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter53.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter54.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter55.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter56.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter57.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter58.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter59.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter60.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter61.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter62.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter63.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter64.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter65.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter66.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter67.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter68.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter69.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter70.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter71.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter72.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter73.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter74.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter75.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter76.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter77.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter78.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter79.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter80.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter81.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter82.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter83.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter84.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter85.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter86.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter87.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter88.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter89.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter90.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter91.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter92.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter93.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter94.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter95.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter96.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter97.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter98.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter99.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter100.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter101.read()))) {
        ap_idle_pp0_0to101 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to101 = ap_const_logic_0;
    }
}

void normalizer::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void normalizer::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to101.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void normalizer::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void normalizer::thread_grp_fu_113_p0() {
    grp_fu_113_p0 = esl_concat<32,64>(p_Val2_s_reg_151.read(), ap_const_lv64_0);
}

void normalizer::thread_m_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter102.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        m_V_ap_vld = ap_const_logic_1;
    } else {
        m_V_ap_vld = ap_const_logic_0;
    }
}

void normalizer::thread_p_Val2_1_fu_91_p2() {
    p_Val2_1_fu_91_p2 = (!max_high_read_reg_129.read().is_01() || !min_high_read_reg_134.read().is_01())? sc_lv<32>(): (sc_biguint<32>(max_high_read_reg_129.read()) - sc_biguint<32>(min_high_read_reg_134.read()));
}

void normalizer::thread_p_Val2_s_fu_87_p2() {
    p_Val2_s_fu_87_p2 = (!regs_in_read_reg_140.read().is_01() || !min_high_read_reg_134.read().is_01())? sc_lv<32>(): (sc_biguint<32>(regs_in_read_reg_140.read()) - sc_biguint<32>(min_high_read_reg_134.read()));
}

void normalizer::thread_tmp_4_fu_95_p3() {
    tmp_4_fu_95_p3 = esl_concat<32,32>(p_Val2_1_reg_156.read(), ap_const_lv32_0);
}

void normalizer::thread_tmp_fu_77_p2() {
    tmp_fu_77_p2 = (!last.read().is_01() || !regs_in_read_reg_140.read().is_01())? sc_lv<1>(): sc_lv<1>(last.read() == regs_in_read_reg_140.read());
}

void normalizer::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

void normalizer::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_AWVALID\" :  \"" << s_axi_in_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_in_AWREADY\" :  \"" << s_axi_in_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_AWADDR\" :  \"" << s_axi_in_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_WVALID\" :  \"" << s_axi_in_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_in_WREADY\" :  \"" << s_axi_in_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_WDATA\" :  \"" << s_axi_in_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_WSTRB\" :  \"" << s_axi_in_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_ARVALID\" :  \"" << s_axi_in_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_in_ARREADY\" :  \"" << s_axi_in_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_ARADDR\" :  \"" << s_axi_in_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_in_RVALID\" :  \"" << s_axi_in_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_RREADY\" :  \"" << s_axi_in_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_in_RDATA\" :  \"" << s_axi_in_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_in_RRESP\" :  \"" << s_axi_in_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_in_BVALID\" :  \"" << s_axi_in_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_BREADY\" :  \"" << s_axi_in_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_in_BRESP\" :  \"" << s_axi_in_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

