// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _normalizer_HH_
#define _normalizer_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "normalizer_sdiv_9bkb.h"
#include "normalizer_in_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_IN_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_IN_DATA_WIDTH = 32>
struct normalizer : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > s_axi_in_AWVALID;
    sc_out< sc_logic > s_axi_in_AWREADY;
    sc_in< sc_uint<C_S_AXI_IN_ADDR_WIDTH> > s_axi_in_AWADDR;
    sc_in< sc_logic > s_axi_in_WVALID;
    sc_out< sc_logic > s_axi_in_WREADY;
    sc_in< sc_uint<C_S_AXI_IN_DATA_WIDTH> > s_axi_in_WDATA;
    sc_in< sc_uint<C_S_AXI_IN_DATA_WIDTH/8> > s_axi_in_WSTRB;
    sc_in< sc_logic > s_axi_in_ARVALID;
    sc_out< sc_logic > s_axi_in_ARREADY;
    sc_in< sc_uint<C_S_AXI_IN_ADDR_WIDTH> > s_axi_in_ARADDR;
    sc_out< sc_logic > s_axi_in_RVALID;
    sc_in< sc_logic > s_axi_in_RREADY;
    sc_out< sc_uint<C_S_AXI_IN_DATA_WIDTH> > s_axi_in_RDATA;
    sc_out< sc_lv<2> > s_axi_in_RRESP;
    sc_out< sc_logic > s_axi_in_BVALID;
    sc_in< sc_logic > s_axi_in_BREADY;
    sc_out< sc_lv<2> > s_axi_in_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    normalizer(sc_module_name name);
    SC_HAS_PROCESS(normalizer);

    ~normalizer();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    normalizer_in_s_axi<C_S_AXI_IN_ADDR_WIDTH,C_S_AXI_IN_DATA_WIDTH>* normalizer_in_s_axi_U;
    normalizer_sdiv_9bkb<1,100,96,64,96>* normalizer_sdiv_9bkb_U1;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter15;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter16;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter17;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter18;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter19;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter20;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter21;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter22;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter23;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter24;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter25;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter26;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter27;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter28;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter29;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter30;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter31;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter32;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter33;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter34;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter35;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter36;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter37;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter38;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter39;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter40;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter41;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter42;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter43;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter44;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter45;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter46;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter47;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter48;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter49;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter50;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter51;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter52;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter53;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter54;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter55;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter56;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter57;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter58;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter59;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter60;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter61;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter62;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter63;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter64;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter65;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter66;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter67;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter68;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter69;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter70;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter71;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter72;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter73;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter74;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter75;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter76;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter77;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter78;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter79;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter80;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter81;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter82;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter83;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter84;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter85;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter86;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter87;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter88;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter89;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter90;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter91;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter92;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter93;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter94;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter95;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter96;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter97;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter98;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter99;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter100;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter101;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter102;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_ready;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter14;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter15;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter16;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter17;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter18;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter19;
    sc_signal< bool > ap_block_state21_pp0_stage0_iter20;
    sc_signal< bool > ap_block_state22_pp0_stage0_iter21;
    sc_signal< bool > ap_block_state23_pp0_stage0_iter22;
    sc_signal< bool > ap_block_state24_pp0_stage0_iter23;
    sc_signal< bool > ap_block_state25_pp0_stage0_iter24;
    sc_signal< bool > ap_block_state26_pp0_stage0_iter25;
    sc_signal< bool > ap_block_state27_pp0_stage0_iter26;
    sc_signal< bool > ap_block_state28_pp0_stage0_iter27;
    sc_signal< bool > ap_block_state29_pp0_stage0_iter28;
    sc_signal< bool > ap_block_state30_pp0_stage0_iter29;
    sc_signal< bool > ap_block_state31_pp0_stage0_iter30;
    sc_signal< bool > ap_block_state32_pp0_stage0_iter31;
    sc_signal< bool > ap_block_state33_pp0_stage0_iter32;
    sc_signal< bool > ap_block_state34_pp0_stage0_iter33;
    sc_signal< bool > ap_block_state35_pp0_stage0_iter34;
    sc_signal< bool > ap_block_state36_pp0_stage0_iter35;
    sc_signal< bool > ap_block_state37_pp0_stage0_iter36;
    sc_signal< bool > ap_block_state38_pp0_stage0_iter37;
    sc_signal< bool > ap_block_state39_pp0_stage0_iter38;
    sc_signal< bool > ap_block_state40_pp0_stage0_iter39;
    sc_signal< bool > ap_block_state41_pp0_stage0_iter40;
    sc_signal< bool > ap_block_state42_pp0_stage0_iter41;
    sc_signal< bool > ap_block_state43_pp0_stage0_iter42;
    sc_signal< bool > ap_block_state44_pp0_stage0_iter43;
    sc_signal< bool > ap_block_state45_pp0_stage0_iter44;
    sc_signal< bool > ap_block_state46_pp0_stage0_iter45;
    sc_signal< bool > ap_block_state47_pp0_stage0_iter46;
    sc_signal< bool > ap_block_state48_pp0_stage0_iter47;
    sc_signal< bool > ap_block_state49_pp0_stage0_iter48;
    sc_signal< bool > ap_block_state50_pp0_stage0_iter49;
    sc_signal< bool > ap_block_state51_pp0_stage0_iter50;
    sc_signal< bool > ap_block_state52_pp0_stage0_iter51;
    sc_signal< bool > ap_block_state53_pp0_stage0_iter52;
    sc_signal< bool > ap_block_state54_pp0_stage0_iter53;
    sc_signal< bool > ap_block_state55_pp0_stage0_iter54;
    sc_signal< bool > ap_block_state56_pp0_stage0_iter55;
    sc_signal< bool > ap_block_state57_pp0_stage0_iter56;
    sc_signal< bool > ap_block_state58_pp0_stage0_iter57;
    sc_signal< bool > ap_block_state59_pp0_stage0_iter58;
    sc_signal< bool > ap_block_state60_pp0_stage0_iter59;
    sc_signal< bool > ap_block_state61_pp0_stage0_iter60;
    sc_signal< bool > ap_block_state62_pp0_stage0_iter61;
    sc_signal< bool > ap_block_state63_pp0_stage0_iter62;
    sc_signal< bool > ap_block_state64_pp0_stage0_iter63;
    sc_signal< bool > ap_block_state65_pp0_stage0_iter64;
    sc_signal< bool > ap_block_state66_pp0_stage0_iter65;
    sc_signal< bool > ap_block_state67_pp0_stage0_iter66;
    sc_signal< bool > ap_block_state68_pp0_stage0_iter67;
    sc_signal< bool > ap_block_state69_pp0_stage0_iter68;
    sc_signal< bool > ap_block_state70_pp0_stage0_iter69;
    sc_signal< bool > ap_block_state71_pp0_stage0_iter70;
    sc_signal< bool > ap_block_state72_pp0_stage0_iter71;
    sc_signal< bool > ap_block_state73_pp0_stage0_iter72;
    sc_signal< bool > ap_block_state74_pp0_stage0_iter73;
    sc_signal< bool > ap_block_state75_pp0_stage0_iter74;
    sc_signal< bool > ap_block_state76_pp0_stage0_iter75;
    sc_signal< bool > ap_block_state77_pp0_stage0_iter76;
    sc_signal< bool > ap_block_state78_pp0_stage0_iter77;
    sc_signal< bool > ap_block_state79_pp0_stage0_iter78;
    sc_signal< bool > ap_block_state80_pp0_stage0_iter79;
    sc_signal< bool > ap_block_state81_pp0_stage0_iter80;
    sc_signal< bool > ap_block_state82_pp0_stage0_iter81;
    sc_signal< bool > ap_block_state83_pp0_stage0_iter82;
    sc_signal< bool > ap_block_state84_pp0_stage0_iter83;
    sc_signal< bool > ap_block_state85_pp0_stage0_iter84;
    sc_signal< bool > ap_block_state86_pp0_stage0_iter85;
    sc_signal< bool > ap_block_state87_pp0_stage0_iter86;
    sc_signal< bool > ap_block_state88_pp0_stage0_iter87;
    sc_signal< bool > ap_block_state89_pp0_stage0_iter88;
    sc_signal< bool > ap_block_state90_pp0_stage0_iter89;
    sc_signal< bool > ap_block_state91_pp0_stage0_iter90;
    sc_signal< bool > ap_block_state92_pp0_stage0_iter91;
    sc_signal< bool > ap_block_state93_pp0_stage0_iter92;
    sc_signal< bool > ap_block_state94_pp0_stage0_iter93;
    sc_signal< bool > ap_block_state95_pp0_stage0_iter94;
    sc_signal< bool > ap_block_state96_pp0_stage0_iter95;
    sc_signal< bool > ap_block_state97_pp0_stage0_iter96;
    sc_signal< bool > ap_block_state98_pp0_stage0_iter97;
    sc_signal< bool > ap_block_state99_pp0_stage0_iter98;
    sc_signal< bool > ap_block_state100_pp0_stage0_iter99;
    sc_signal< bool > ap_block_state101_pp0_stage0_iter100;
    sc_signal< bool > ap_block_state102_pp0_stage0_iter101;
    sc_signal< bool > ap_block_state103_pp0_stage0_iter102;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<32> > regs_in;
    sc_signal< sc_lv<32> > min_high;
    sc_signal< sc_lv<32> > max_high;
    sc_signal< sc_logic > m_V_ap_vld;
    sc_signal< sc_lv<32> > last;
    sc_signal< sc_lv<32> > max_high_read_reg_129;
    sc_signal< sc_lv<32> > min_high_read_reg_134;
    sc_signal< sc_lv<32> > regs_in_read_reg_140;
    sc_signal< sc_lv<1> > tmp_fu_77_p2;
    sc_signal< sc_lv<32> > p_Val2_s_fu_87_p2;
    sc_signal< sc_lv<32> > p_Val2_s_reg_151;
    sc_signal< sc_lv<32> > p_Val2_1_fu_91_p2;
    sc_signal< sc_lv<32> > p_Val2_1_reg_156;
    sc_signal< sc_lv<16> > tmp_2_reg_171;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<64> > tmp_4_fu_95_p3;
    sc_signal< sc_lv<96> > grp_fu_113_p0;
    sc_signal< sc_lv<96> > grp_fu_113_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to101;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_20;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state100_pp0_stage0_iter99();
    void thread_ap_block_state101_pp0_stage0_iter100();
    void thread_ap_block_state102_pp0_stage0_iter101();
    void thread_ap_block_state103_pp0_stage0_iter102();
    void thread_ap_block_state10_pp0_stage0_iter9();
    void thread_ap_block_state11_pp0_stage0_iter10();
    void thread_ap_block_state12_pp0_stage0_iter11();
    void thread_ap_block_state13_pp0_stage0_iter12();
    void thread_ap_block_state14_pp0_stage0_iter13();
    void thread_ap_block_state15_pp0_stage0_iter14();
    void thread_ap_block_state16_pp0_stage0_iter15();
    void thread_ap_block_state17_pp0_stage0_iter16();
    void thread_ap_block_state18_pp0_stage0_iter17();
    void thread_ap_block_state19_pp0_stage0_iter18();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state20_pp0_stage0_iter19();
    void thread_ap_block_state21_pp0_stage0_iter20();
    void thread_ap_block_state22_pp0_stage0_iter21();
    void thread_ap_block_state23_pp0_stage0_iter22();
    void thread_ap_block_state24_pp0_stage0_iter23();
    void thread_ap_block_state25_pp0_stage0_iter24();
    void thread_ap_block_state26_pp0_stage0_iter25();
    void thread_ap_block_state27_pp0_stage0_iter26();
    void thread_ap_block_state28_pp0_stage0_iter27();
    void thread_ap_block_state29_pp0_stage0_iter28();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state30_pp0_stage0_iter29();
    void thread_ap_block_state31_pp0_stage0_iter30();
    void thread_ap_block_state32_pp0_stage0_iter31();
    void thread_ap_block_state33_pp0_stage0_iter32();
    void thread_ap_block_state34_pp0_stage0_iter33();
    void thread_ap_block_state35_pp0_stage0_iter34();
    void thread_ap_block_state36_pp0_stage0_iter35();
    void thread_ap_block_state37_pp0_stage0_iter36();
    void thread_ap_block_state38_pp0_stage0_iter37();
    void thread_ap_block_state39_pp0_stage0_iter38();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state40_pp0_stage0_iter39();
    void thread_ap_block_state41_pp0_stage0_iter40();
    void thread_ap_block_state42_pp0_stage0_iter41();
    void thread_ap_block_state43_pp0_stage0_iter42();
    void thread_ap_block_state44_pp0_stage0_iter43();
    void thread_ap_block_state45_pp0_stage0_iter44();
    void thread_ap_block_state46_pp0_stage0_iter45();
    void thread_ap_block_state47_pp0_stage0_iter46();
    void thread_ap_block_state48_pp0_stage0_iter47();
    void thread_ap_block_state49_pp0_stage0_iter48();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_block_state50_pp0_stage0_iter49();
    void thread_ap_block_state51_pp0_stage0_iter50();
    void thread_ap_block_state52_pp0_stage0_iter51();
    void thread_ap_block_state53_pp0_stage0_iter52();
    void thread_ap_block_state54_pp0_stage0_iter53();
    void thread_ap_block_state55_pp0_stage0_iter54();
    void thread_ap_block_state56_pp0_stage0_iter55();
    void thread_ap_block_state57_pp0_stage0_iter56();
    void thread_ap_block_state58_pp0_stage0_iter57();
    void thread_ap_block_state59_pp0_stage0_iter58();
    void thread_ap_block_state5_pp0_stage0_iter4();
    void thread_ap_block_state60_pp0_stage0_iter59();
    void thread_ap_block_state61_pp0_stage0_iter60();
    void thread_ap_block_state62_pp0_stage0_iter61();
    void thread_ap_block_state63_pp0_stage0_iter62();
    void thread_ap_block_state64_pp0_stage0_iter63();
    void thread_ap_block_state65_pp0_stage0_iter64();
    void thread_ap_block_state66_pp0_stage0_iter65();
    void thread_ap_block_state67_pp0_stage0_iter66();
    void thread_ap_block_state68_pp0_stage0_iter67();
    void thread_ap_block_state69_pp0_stage0_iter68();
    void thread_ap_block_state6_pp0_stage0_iter5();
    void thread_ap_block_state70_pp0_stage0_iter69();
    void thread_ap_block_state71_pp0_stage0_iter70();
    void thread_ap_block_state72_pp0_stage0_iter71();
    void thread_ap_block_state73_pp0_stage0_iter72();
    void thread_ap_block_state74_pp0_stage0_iter73();
    void thread_ap_block_state75_pp0_stage0_iter74();
    void thread_ap_block_state76_pp0_stage0_iter75();
    void thread_ap_block_state77_pp0_stage0_iter76();
    void thread_ap_block_state78_pp0_stage0_iter77();
    void thread_ap_block_state79_pp0_stage0_iter78();
    void thread_ap_block_state7_pp0_stage0_iter6();
    void thread_ap_block_state80_pp0_stage0_iter79();
    void thread_ap_block_state81_pp0_stage0_iter80();
    void thread_ap_block_state82_pp0_stage0_iter81();
    void thread_ap_block_state83_pp0_stage0_iter82();
    void thread_ap_block_state84_pp0_stage0_iter83();
    void thread_ap_block_state85_pp0_stage0_iter84();
    void thread_ap_block_state86_pp0_stage0_iter85();
    void thread_ap_block_state87_pp0_stage0_iter86();
    void thread_ap_block_state88_pp0_stage0_iter87();
    void thread_ap_block_state89_pp0_stage0_iter88();
    void thread_ap_block_state8_pp0_stage0_iter7();
    void thread_ap_block_state90_pp0_stage0_iter89();
    void thread_ap_block_state91_pp0_stage0_iter90();
    void thread_ap_block_state92_pp0_stage0_iter91();
    void thread_ap_block_state93_pp0_stage0_iter92();
    void thread_ap_block_state94_pp0_stage0_iter93();
    void thread_ap_block_state95_pp0_stage0_iter94();
    void thread_ap_block_state96_pp0_stage0_iter95();
    void thread_ap_block_state97_pp0_stage0_iter96();
    void thread_ap_block_state98_pp0_stage0_iter97();
    void thread_ap_block_state99_pp0_stage0_iter98();
    void thread_ap_block_state9_pp0_stage0_iter8();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to101();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_rst_n_inv();
    void thread_grp_fu_113_p0();
    void thread_m_V_ap_vld();
    void thread_p_Val2_1_fu_91_p2();
    void thread_p_Val2_s_fu_87_p2();
    void thread_tmp_4_fu_95_p3();
    void thread_tmp_fu_77_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
