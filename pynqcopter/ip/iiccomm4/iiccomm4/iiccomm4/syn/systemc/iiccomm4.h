// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _iiccomm4_HH_
#define _iiccomm4_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "iiccomm4_sensorData.h"
#include "iiccomm4_AXILiteS_s_axi.h"
#include "iiccomm4_iic_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_IIC_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_IIC_ID_WIDTH = 1,
         unsigned int C_M_AXI_IIC_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_IIC_DATA_WIDTH = 32,
         unsigned int C_M_AXI_IIC_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_IIC_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_IIC_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_IIC_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 7,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct iiccomm4 : public sc_module {
    // Port declarations 65
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_iic_AWVALID;
    sc_in< sc_logic > m_axi_iic_AWREADY;
    sc_out< sc_uint<C_M_AXI_IIC_ADDR_WIDTH> > m_axi_iic_AWADDR;
    sc_out< sc_uint<C_M_AXI_IIC_ID_WIDTH> > m_axi_iic_AWID;
    sc_out< sc_lv<8> > m_axi_iic_AWLEN;
    sc_out< sc_lv<3> > m_axi_iic_AWSIZE;
    sc_out< sc_lv<2> > m_axi_iic_AWBURST;
    sc_out< sc_lv<2> > m_axi_iic_AWLOCK;
    sc_out< sc_lv<4> > m_axi_iic_AWCACHE;
    sc_out< sc_lv<3> > m_axi_iic_AWPROT;
    sc_out< sc_lv<4> > m_axi_iic_AWQOS;
    sc_out< sc_lv<4> > m_axi_iic_AWREGION;
    sc_out< sc_uint<C_M_AXI_IIC_AWUSER_WIDTH> > m_axi_iic_AWUSER;
    sc_out< sc_logic > m_axi_iic_WVALID;
    sc_in< sc_logic > m_axi_iic_WREADY;
    sc_out< sc_uint<C_M_AXI_IIC_DATA_WIDTH> > m_axi_iic_WDATA;
    sc_out< sc_uint<C_M_AXI_IIC_DATA_WIDTH/8> > m_axi_iic_WSTRB;
    sc_out< sc_logic > m_axi_iic_WLAST;
    sc_out< sc_uint<C_M_AXI_IIC_ID_WIDTH> > m_axi_iic_WID;
    sc_out< sc_uint<C_M_AXI_IIC_WUSER_WIDTH> > m_axi_iic_WUSER;
    sc_out< sc_logic > m_axi_iic_ARVALID;
    sc_in< sc_logic > m_axi_iic_ARREADY;
    sc_out< sc_uint<C_M_AXI_IIC_ADDR_WIDTH> > m_axi_iic_ARADDR;
    sc_out< sc_uint<C_M_AXI_IIC_ID_WIDTH> > m_axi_iic_ARID;
    sc_out< sc_lv<8> > m_axi_iic_ARLEN;
    sc_out< sc_lv<3> > m_axi_iic_ARSIZE;
    sc_out< sc_lv<2> > m_axi_iic_ARBURST;
    sc_out< sc_lv<2> > m_axi_iic_ARLOCK;
    sc_out< sc_lv<4> > m_axi_iic_ARCACHE;
    sc_out< sc_lv<3> > m_axi_iic_ARPROT;
    sc_out< sc_lv<4> > m_axi_iic_ARQOS;
    sc_out< sc_lv<4> > m_axi_iic_ARREGION;
    sc_out< sc_uint<C_M_AXI_IIC_ARUSER_WIDTH> > m_axi_iic_ARUSER;
    sc_in< sc_logic > m_axi_iic_RVALID;
    sc_out< sc_logic > m_axi_iic_RREADY;
    sc_in< sc_uint<C_M_AXI_IIC_DATA_WIDTH> > m_axi_iic_RDATA;
    sc_in< sc_logic > m_axi_iic_RLAST;
    sc_in< sc_uint<C_M_AXI_IIC_ID_WIDTH> > m_axi_iic_RID;
    sc_in< sc_uint<C_M_AXI_IIC_RUSER_WIDTH> > m_axi_iic_RUSER;
    sc_in< sc_lv<2> > m_axi_iic_RRESP;
    sc_in< sc_logic > m_axi_iic_BVALID;
    sc_out< sc_logic > m_axi_iic_BREADY;
    sc_in< sc_lv<2> > m_axi_iic_BRESP;
    sc_in< sc_uint<C_M_AXI_IIC_ID_WIDTH> > m_axi_iic_BID;
    sc_in< sc_uint<C_M_AXI_IIC_BUSER_WIDTH> > m_axi_iic_BUSER;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<32> > ap_var_for_const8;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<3> > ap_var_for_const3;
    sc_signal< sc_lv<2> > ap_var_for_const4;
    sc_signal< sc_lv<4> > ap_var_for_const5;
    sc_signal< sc_lv<4> > ap_var_for_const7;


    // Module declarations
    iiccomm4(sc_module_name name);
    SC_HAS_PROCESS(iiccomm4);

    ~iiccomm4();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    iiccomm4_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* iiccomm4_AXILiteS_s_axi_U;
    iiccomm4_iic_m_axi<32,32,5,16,16,16,16,C_M_AXI_IIC_ID_WIDTH,C_M_AXI_IIC_ADDR_WIDTH,C_M_AXI_IIC_DATA_WIDTH,C_M_AXI_IIC_AWUSER_WIDTH,C_M_AXI_IIC_ARUSER_WIDTH,C_M_AXI_IIC_WUSER_WIDTH,C_M_AXI_IIC_RUSER_WIDTH,C_M_AXI_IIC_BUSER_WIDTH,C_M_AXI_IIC_TARGET_ADDR,C_M_AXI_IIC_USER_VALUE,C_M_AXI_IIC_PROT_VALUE,C_M_AXI_IIC_CACHE_VALUE>* iiccomm4_iic_m_axi_U;
    iiccomm4_sensorData* sensorData_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<95> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_logic > empty_pirq_outValue_ap_vld;
    sc_signal< sc_logic > full_pirq_outValue_ap_vld;
    sc_signal< sc_logic > ctrl_reg_outValue_ap_vld;
    sc_signal< sc_logic > stat_reg_outValue1_ap_vld;
    sc_signal< sc_logic > stat_reg_val2_ap_vld;
    sc_signal< sc_logic > pressure_msb_ap_vld;
    sc_signal< sc_logic > pressure_lsb_ap_vld;
    sc_signal< sc_logic > pressure_xlsb_ap_vld;
    sc_signal< sc_logic > temp_msb_ap_vld;
    sc_signal< sc_logic > temp_lsb_ap_vld;
    sc_signal< sc_logic > temp_xlsb_ap_vld;
    sc_signal< sc_lv<32> > operation;
    sc_signal< sc_logic > operation_ap_vld;
    sc_signal< sc_logic > iic_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_1_fu_1050_p2;
    sc_signal< sc_logic > iic_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > iic_blk_n_AW;
    sc_signal< sc_logic > iic_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > iic_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< sc_logic > ap_CS_fsm_state38;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< sc_logic > ap_CS_fsm_state39;
    sc_signal< sc_logic > ap_CS_fsm_state40;
    sc_signal< sc_logic > ap_CS_fsm_state45;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_logic > ap_CS_fsm_state46;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_logic > ap_CS_fsm_state47;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_logic > ap_CS_fsm_state48;
    sc_signal< sc_logic > ap_CS_fsm_state44;
    sc_signal< sc_logic > ap_CS_fsm_state49;
    sc_signal< sc_logic > ap_CS_fsm_state50;
    sc_signal< sc_logic > ap_CS_fsm_state51;
    sc_signal< sc_logic > ap_CS_fsm_state52;
    sc_signal< sc_logic > ap_CS_fsm_state53;
    sc_signal< sc_logic > ap_CS_fsm_state54;
    sc_signal< sc_logic > ap_CS_fsm_state55;
    sc_signal< sc_logic > ap_CS_fsm_state56;
    sc_signal< sc_logic > ap_CS_fsm_state57;
    sc_signal< sc_lv<1> > tmp_2_fu_1063_p2;
    sc_signal< sc_logic > ap_CS_fsm_state58;
    sc_signal< sc_logic > ap_CS_fsm_state63;
    sc_signal< sc_logic > ap_CS_fsm_state59;
    sc_signal< sc_logic > ap_CS_fsm_state64;
    sc_signal< sc_logic > ap_CS_fsm_state60;
    sc_signal< sc_logic > ap_CS_fsm_state65;
    sc_signal< sc_logic > ap_CS_fsm_state61;
    sc_signal< sc_logic > ap_CS_fsm_state66;
    sc_signal< sc_logic > ap_CS_fsm_state67;
    sc_signal< sc_lv<1> > tmp_4_fu_1083_p2;
    sc_signal< sc_logic > ap_CS_fsm_state74;
    sc_signal< sc_logic > ap_CS_fsm_state76;
    sc_signal< sc_lv<1> > tmp_6_fu_1124_p2;
    sc_signal< sc_logic > ap_CS_fsm_state83;
    sc_signal< sc_logic > ap_CS_fsm_state85;
    sc_signal< sc_lv<1> > tmp_9_fu_1141_p2;
    sc_signal< sc_logic > ap_CS_fsm_state92;
    sc_signal< sc_logic > iic_AWVALID;
    sc_signal< sc_logic > iic_AWREADY;
    sc_signal< sc_lv<32> > iic_AWADDR;
    sc_signal< sc_logic > iic_WVALID;
    sc_signal< sc_logic > iic_WREADY;
    sc_signal< sc_lv<32> > iic_WDATA;
    sc_signal< sc_logic > iic_ARVALID;
    sc_signal< sc_logic > iic_ARREADY;
    sc_signal< sc_lv<32> > iic_ARADDR;
    sc_signal< sc_logic > iic_RVALID;
    sc_signal< sc_logic > iic_RREADY;
    sc_signal< sc_lv<32> > iic_RDATA;
    sc_signal< sc_logic > iic_RLAST;
    sc_signal< sc_lv<1> > iic_RID;
    sc_signal< sc_lv<1> > iic_RUSER;
    sc_signal< sc_lv<2> > iic_RRESP;
    sc_signal< sc_logic > iic_BVALID;
    sc_signal< sc_logic > iic_BREADY;
    sc_signal< sc_lv<2> > iic_BRESP;
    sc_signal< sc_lv<1> > iic_BID;
    sc_signal< sc_lv<1> > iic_BUSER;
    sc_signal< sc_logic > ap_sig_ioackin_iic_ARREADY;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_logic > ap_sig_ioackin_iic_WREADY;
    sc_signal< bool > ap_block_state67_io;
    sc_signal< bool > ap_block_state85_io;
    sc_signal< sc_logic > ap_sig_ioackin_iic_AWREADY;
    sc_signal< bool > ap_block_state41_io;
    sc_signal< bool > ap_block_state45_io;
    sc_signal< bool > ap_block_state49_io;
    sc_signal< bool > ap_block_state59_io;
    sc_signal< bool > ap_block_state42_io;
    sc_signal< bool > ap_block_state46_io;
    sc_signal< bool > ap_block_state50_io;
    sc_signal< bool > ap_block_state60_io;
    sc_signal< bool > ap_block_state43_io;
    sc_signal< bool > ap_block_state47_io;
    sc_signal< bool > ap_block_state44_io;
    sc_signal< bool > ap_block_state48_io;
    sc_signal< sc_lv<3> > indvarinc_fu_1039_p2;
    sc_signal< sc_lv<32> > iic_addr_1_read_reg_1187;
    sc_signal< sc_lv<32> > iic_addr34_read_reg_1192;
    sc_signal< sc_lv<32> > iic_addr_13_read_reg_1202;
    sc_signal< sc_lv<32> > iic_addr_15_read_reg_1207;
    sc_signal< sc_lv<19> > ctr_V_fu_1069_p2;
    sc_signal< bool > ap_block_state57_io;
    sc_signal< sc_lv<19> > ctr_V_1_fu_1089_p2;
    sc_signal< sc_lv<32> > iic_addr_65_read_reg_1228;
    sc_signal< sc_lv<32> > index_1_fu_1130_p2;
    sc_signal< sc_lv<32> > index_1_reg_1236;
    sc_signal< bool > ap_block_state76_io;
    sc_signal< sc_lv<32> > iic_addr_67_read_reg_1256;
    sc_signal< sc_lv<19> > ctr_V_2_fu_1147_p2;
    sc_signal< sc_lv<32> > sensorData_q0;
    sc_signal< sc_lv<32> > sensorData_load_reg_1274;
    sc_signal< sc_logic > ap_CS_fsm_state93;
    sc_signal< sc_lv<32> > sensorData_q1;
    sc_signal< sc_lv<32> > sensorData_load_1_reg_1279;
    sc_signal< sc_lv<32> > sensorData_load_2_reg_1294;
    sc_signal< sc_logic > ap_CS_fsm_state94;
    sc_signal< sc_lv<32> > sensorData_load_3_reg_1299;
    sc_signal< sc_lv<3> > sensorData_address0;
    sc_signal< sc_logic > sensorData_ce0;
    sc_signal< sc_logic > sensorData_we0;
    sc_signal< sc_lv<3> > sensorData_address1;
    sc_signal< sc_logic > sensorData_ce1;
    sc_signal< sc_logic > sensorData_we1;
    sc_signal< sc_lv<3> > invdar_reg_803;
    sc_signal< sc_lv<19> > p_014_0_i1_reg_814;
    sc_signal< sc_lv<19> > p_014_0_i5_reg_825;
    sc_signal< sc_lv<32> > storemerge1_reg_836;
    sc_signal< sc_logic > ap_CS_fsm_state75;
    sc_signal< sc_lv<32> > index_reg_846;
    sc_signal< sc_lv<19> > p_014_0_i_reg_858;
    sc_signal< sc_logic > ap_CS_fsm_state84;
    sc_signal< sc_lv<64> > tmp_fu_1045_p1;
    sc_signal< sc_lv<64> > tmp_7_fu_1136_p1;
    sc_signal< sc_lv<32> > grp_fu_893_p2;
    sc_signal< sc_lv<32> > grp_fu_939_p2;
    sc_signal< sc_lv<32> > grp_fu_961_p2;
    sc_signal< sc_logic > ap_reg_ioackin_iic_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_iic_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_iic_WREADY;
    sc_signal< bool > ap_block_state24_io;
    sc_signal< bool > ap_block_state40_io;
    sc_signal< bool > ap_block_state58_io;
    sc_signal< sc_logic > ap_reg_ioackin_empty_pirq_outValue_dummy_ack;
    sc_signal< sc_logic > ap_reg_ioackin_full_pirq_outValue_dummy_ack;
    sc_signal< sc_logic > ap_reg_ioackin_ctrl_reg_outValue_dummy_ack;
    sc_signal< sc_logic > ap_reg_ioackin_stat_reg_outValue1_dummy_ack;
    sc_signal< sc_logic > ap_CS_fsm_state95;
    sc_signal< sc_lv<1> > tmp_3_fu_1103_p3;
    sc_signal< sc_lv<7> > storemerge_fu_1111_p3;
    sc_signal< sc_lv<95> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<95> ap_ST_fsm_state1;
    static const sc_lv<95> ap_ST_fsm_state2;
    static const sc_lv<95> ap_ST_fsm_state3;
    static const sc_lv<95> ap_ST_fsm_state4;
    static const sc_lv<95> ap_ST_fsm_state5;
    static const sc_lv<95> ap_ST_fsm_state6;
    static const sc_lv<95> ap_ST_fsm_state7;
    static const sc_lv<95> ap_ST_fsm_state8;
    static const sc_lv<95> ap_ST_fsm_state9;
    static const sc_lv<95> ap_ST_fsm_state10;
    static const sc_lv<95> ap_ST_fsm_state11;
    static const sc_lv<95> ap_ST_fsm_state12;
    static const sc_lv<95> ap_ST_fsm_state13;
    static const sc_lv<95> ap_ST_fsm_state14;
    static const sc_lv<95> ap_ST_fsm_state15;
    static const sc_lv<95> ap_ST_fsm_state16;
    static const sc_lv<95> ap_ST_fsm_state17;
    static const sc_lv<95> ap_ST_fsm_state18;
    static const sc_lv<95> ap_ST_fsm_state19;
    static const sc_lv<95> ap_ST_fsm_state20;
    static const sc_lv<95> ap_ST_fsm_state21;
    static const sc_lv<95> ap_ST_fsm_state22;
    static const sc_lv<95> ap_ST_fsm_state23;
    static const sc_lv<95> ap_ST_fsm_state24;
    static const sc_lv<95> ap_ST_fsm_state25;
    static const sc_lv<95> ap_ST_fsm_state26;
    static const sc_lv<95> ap_ST_fsm_state27;
    static const sc_lv<95> ap_ST_fsm_state28;
    static const sc_lv<95> ap_ST_fsm_state29;
    static const sc_lv<95> ap_ST_fsm_state30;
    static const sc_lv<95> ap_ST_fsm_state31;
    static const sc_lv<95> ap_ST_fsm_state32;
    static const sc_lv<95> ap_ST_fsm_state33;
    static const sc_lv<95> ap_ST_fsm_state34;
    static const sc_lv<95> ap_ST_fsm_state35;
    static const sc_lv<95> ap_ST_fsm_state36;
    static const sc_lv<95> ap_ST_fsm_state37;
    static const sc_lv<95> ap_ST_fsm_state38;
    static const sc_lv<95> ap_ST_fsm_state39;
    static const sc_lv<95> ap_ST_fsm_state40;
    static const sc_lv<95> ap_ST_fsm_state41;
    static const sc_lv<95> ap_ST_fsm_state42;
    static const sc_lv<95> ap_ST_fsm_state43;
    static const sc_lv<95> ap_ST_fsm_state44;
    static const sc_lv<95> ap_ST_fsm_state45;
    static const sc_lv<95> ap_ST_fsm_state46;
    static const sc_lv<95> ap_ST_fsm_state47;
    static const sc_lv<95> ap_ST_fsm_state48;
    static const sc_lv<95> ap_ST_fsm_state49;
    static const sc_lv<95> ap_ST_fsm_state50;
    static const sc_lv<95> ap_ST_fsm_state51;
    static const sc_lv<95> ap_ST_fsm_state52;
    static const sc_lv<95> ap_ST_fsm_state53;
    static const sc_lv<95> ap_ST_fsm_state54;
    static const sc_lv<95> ap_ST_fsm_state55;
    static const sc_lv<95> ap_ST_fsm_state56;
    static const sc_lv<95> ap_ST_fsm_state57;
    static const sc_lv<95> ap_ST_fsm_state58;
    static const sc_lv<95> ap_ST_fsm_state59;
    static const sc_lv<95> ap_ST_fsm_state60;
    static const sc_lv<95> ap_ST_fsm_state61;
    static const sc_lv<95> ap_ST_fsm_state62;
    static const sc_lv<95> ap_ST_fsm_state63;
    static const sc_lv<95> ap_ST_fsm_state64;
    static const sc_lv<95> ap_ST_fsm_state65;
    static const sc_lv<95> ap_ST_fsm_state66;
    static const sc_lv<95> ap_ST_fsm_state67;
    static const sc_lv<95> ap_ST_fsm_state68;
    static const sc_lv<95> ap_ST_fsm_state69;
    static const sc_lv<95> ap_ST_fsm_state70;
    static const sc_lv<95> ap_ST_fsm_state71;
    static const sc_lv<95> ap_ST_fsm_state72;
    static const sc_lv<95> ap_ST_fsm_state73;
    static const sc_lv<95> ap_ST_fsm_state74;
    static const sc_lv<95> ap_ST_fsm_state75;
    static const sc_lv<95> ap_ST_fsm_state76;
    static const sc_lv<95> ap_ST_fsm_state77;
    static const sc_lv<95> ap_ST_fsm_state78;
    static const sc_lv<95> ap_ST_fsm_state79;
    static const sc_lv<95> ap_ST_fsm_state80;
    static const sc_lv<95> ap_ST_fsm_state81;
    static const sc_lv<95> ap_ST_fsm_state82;
    static const sc_lv<95> ap_ST_fsm_state83;
    static const sc_lv<95> ap_ST_fsm_state84;
    static const sc_lv<95> ap_ST_fsm_state85;
    static const sc_lv<95> ap_ST_fsm_state86;
    static const sc_lv<95> ap_ST_fsm_state87;
    static const sc_lv<95> ap_ST_fsm_state88;
    static const sc_lv<95> ap_ST_fsm_state89;
    static const sc_lv<95> ap_ST_fsm_state90;
    static const sc_lv<95> ap_ST_fsm_state91;
    static const sc_lv<95> ap_ST_fsm_state92;
    static const sc_lv<95> ap_ST_fsm_state93;
    static const sc_lv<95> ap_ST_fsm_state94;
    static const sc_lv<95> ap_ST_fsm_state95;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_2D;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2E;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<32> ap_const_lv32_32;
    static const sc_lv<32> ap_const_lv32_33;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<32> ap_const_lv32_36;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_39;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<32> ap_const_lv32_3A;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_3B;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_3C;
    static const sc_lv<32> ap_const_lv32_41;
    static const sc_lv<32> ap_const_lv32_42;
    static const sc_lv<32> ap_const_lv32_49;
    static const sc_lv<32> ap_const_lv32_4B;
    static const sc_lv<32> ap_const_lv32_52;
    static const sc_lv<32> ap_const_lv32_54;
    static const sc_lv<32> ap_const_lv32_5B;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_IIC_TARGET_ADDR;
    static const int C_M_AXI_IIC_USER_VALUE;
    static const int C_M_AXI_IIC_PROT_VALUE;
    static const int C_M_AXI_IIC_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5C;
    static const sc_lv<32> ap_const_lv32_5D;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<32> ap_const_lv32_4A;
    static const sc_lv<32> ap_const_lv32_53;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_10000448;
    static const sc_lv<64> ap_const_lv64_10000440;
    static const sc_lv<64> ap_const_lv64_10000441;
    static const sc_lv<64> ap_const_lv64_10000442;
    static const sc_lv<64> ap_const_lv64_10000443;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1EC;
    static const sc_lv<32> ap_const_lv32_E0;
    static const sc_lv<32> ap_const_lv32_B6;
    static const sc_lv<32> ap_const_lv32_F2;
    static const sc_lv<32> ap_const_lv32_F4;
    static const sc_lv<32> ap_const_lv32_F5;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_F7;
    static const sc_lv<32> ap_const_lv32_1ED;
    static const sc_lv<32> ap_const_lv32_206;
    static const sc_lv<32> ap_const_lv32_5E;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<19> ap_const_lv19_7A120;
    static const sc_lv<19> ap_const_lv19_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<7> ap_const_lv7_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const7();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state38();
    void thread_ap_CS_fsm_state39();
    void thread_ap_CS_fsm_state40();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state44();
    void thread_ap_CS_fsm_state45();
    void thread_ap_CS_fsm_state46();
    void thread_ap_CS_fsm_state47();
    void thread_ap_CS_fsm_state48();
    void thread_ap_CS_fsm_state49();
    void thread_ap_CS_fsm_state50();
    void thread_ap_CS_fsm_state51();
    void thread_ap_CS_fsm_state52();
    void thread_ap_CS_fsm_state53();
    void thread_ap_CS_fsm_state54();
    void thread_ap_CS_fsm_state55();
    void thread_ap_CS_fsm_state56();
    void thread_ap_CS_fsm_state57();
    void thread_ap_CS_fsm_state58();
    void thread_ap_CS_fsm_state59();
    void thread_ap_CS_fsm_state60();
    void thread_ap_CS_fsm_state61();
    void thread_ap_CS_fsm_state63();
    void thread_ap_CS_fsm_state64();
    void thread_ap_CS_fsm_state65();
    void thread_ap_CS_fsm_state66();
    void thread_ap_CS_fsm_state67();
    void thread_ap_CS_fsm_state74();
    void thread_ap_CS_fsm_state75();
    void thread_ap_CS_fsm_state76();
    void thread_ap_CS_fsm_state83();
    void thread_ap_CS_fsm_state84();
    void thread_ap_CS_fsm_state85();
    void thread_ap_CS_fsm_state9();
    void thread_ap_CS_fsm_state92();
    void thread_ap_CS_fsm_state93();
    void thread_ap_CS_fsm_state94();
    void thread_ap_CS_fsm_state95();
    void thread_ap_block_state24_io();
    void thread_ap_block_state2_io();
    void thread_ap_block_state40_io();
    void thread_ap_block_state41_io();
    void thread_ap_block_state42_io();
    void thread_ap_block_state43_io();
    void thread_ap_block_state44_io();
    void thread_ap_block_state45_io();
    void thread_ap_block_state46_io();
    void thread_ap_block_state47_io();
    void thread_ap_block_state48_io();
    void thread_ap_block_state49_io();
    void thread_ap_block_state50_io();
    void thread_ap_block_state57_io();
    void thread_ap_block_state58_io();
    void thread_ap_block_state59_io();
    void thread_ap_block_state60_io();
    void thread_ap_block_state67_io();
    void thread_ap_block_state76_io();
    void thread_ap_block_state85_io();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_iic_ARREADY();
    void thread_ap_sig_ioackin_iic_AWREADY();
    void thread_ap_sig_ioackin_iic_WREADY();
    void thread_ctr_V_1_fu_1089_p2();
    void thread_ctr_V_2_fu_1147_p2();
    void thread_ctr_V_fu_1069_p2();
    void thread_ctrl_reg_outValue_ap_vld();
    void thread_empty_pirq_outValue_ap_vld();
    void thread_full_pirq_outValue_ap_vld();
    void thread_grp_fu_893_p2();
    void thread_grp_fu_939_p2();
    void thread_grp_fu_961_p2();
    void thread_iic_ARADDR();
    void thread_iic_ARVALID();
    void thread_iic_AWADDR();
    void thread_iic_AWVALID();
    void thread_iic_BREADY();
    void thread_iic_RREADY();
    void thread_iic_WDATA();
    void thread_iic_WVALID();
    void thread_iic_blk_n_AR();
    void thread_iic_blk_n_AW();
    void thread_iic_blk_n_B();
    void thread_iic_blk_n_R();
    void thread_iic_blk_n_W();
    void thread_index_1_fu_1130_p2();
    void thread_indvarinc_fu_1039_p2();
    void thread_operation();
    void thread_operation_ap_vld();
    void thread_pressure_lsb_ap_vld();
    void thread_pressure_msb_ap_vld();
    void thread_pressure_xlsb_ap_vld();
    void thread_sensorData_address0();
    void thread_sensorData_address1();
    void thread_sensorData_ce0();
    void thread_sensorData_ce1();
    void thread_sensorData_we0();
    void thread_sensorData_we1();
    void thread_stat_reg_outValue1_ap_vld();
    void thread_stat_reg_val2_ap_vld();
    void thread_storemerge_fu_1111_p3();
    void thread_temp_lsb_ap_vld();
    void thread_temp_msb_ap_vld();
    void thread_temp_xlsb_ap_vld();
    void thread_tmp_1_fu_1050_p2();
    void thread_tmp_2_fu_1063_p2();
    void thread_tmp_3_fu_1103_p3();
    void thread_tmp_4_fu_1083_p2();
    void thread_tmp_6_fu_1124_p2();
    void thread_tmp_7_fu_1136_p1();
    void thread_tmp_9_fu_1141_p2();
    void thread_tmp_fu_1045_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
