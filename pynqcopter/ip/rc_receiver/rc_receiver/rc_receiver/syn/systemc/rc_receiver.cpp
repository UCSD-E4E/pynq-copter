// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "rc_receiver.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic rc_receiver::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic rc_receiver::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> rc_receiver::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> rc_receiver::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool rc_receiver::ap_const_boolean_1 = true;
const sc_lv<1> rc_receiver::ap_const_lv1_1 = "1";
const bool rc_receiver::ap_const_boolean_0 = false;
const int rc_receiver::C_S_AXI_DATA_WIDTH = "100000";
const int rc_receiver::C_M_AXI_NORM_OUT_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int rc_receiver::C_M_AXI_NORM_OUT_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int rc_receiver::C_M_AXI_NORM_OUT_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int rc_receiver::C_M_AXI_NORM_OUT_CACHE_VALUE = "11";
const int rc_receiver::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<1> rc_receiver::ap_const_lv1_0 = "0";
const sc_lv<32> rc_receiver::ap_const_lv32_1 = "1";
const sc_lv<3> rc_receiver::ap_const_lv3_0 = "000";
const sc_lv<2> rc_receiver::ap_const_lv2_0 = "00";
const sc_lv<4> rc_receiver::ap_const_lv4_0 = "0000";
const sc_lv<4> rc_receiver::ap_const_lv4_F = "1111";
const sc_lv<32> rc_receiver::ap_const_lv32_A = "1010";
const sc_lv<32> rc_receiver::ap_const_lv32_2 = "10";
const sc_lv<32> rc_receiver::ap_const_lv32_3 = "11";
const sc_lv<32> rc_receiver::ap_const_lv32_4 = "100";
const sc_lv<32> rc_receiver::ap_const_lv32_5 = "101";
const sc_lv<2> rc_receiver::ap_const_lv2_3 = "11";
const sc_lv<2> rc_receiver::ap_const_lv2_2 = "10";
const sc_lv<3> rc_receiver::ap_const_lv3_5 = "101";
const sc_lv<3> rc_receiver::ap_const_lv3_4 = "100";

rc_receiver::rc_receiver(sc_module_name name) : sc_module(name), mVcdFile(0) {
    rc_receiver_in_s_axi_U = new rc_receiver_in_s_axi<C_S_AXI_IN_ADDR_WIDTH,C_S_AXI_IN_DATA_WIDTH>("rc_receiver_in_s_axi_U");
    rc_receiver_in_s_axi_U->AWVALID(s_axi_in_AWVALID);
    rc_receiver_in_s_axi_U->AWREADY(s_axi_in_AWREADY);
    rc_receiver_in_s_axi_U->AWADDR(s_axi_in_AWADDR);
    rc_receiver_in_s_axi_U->WVALID(s_axi_in_WVALID);
    rc_receiver_in_s_axi_U->WREADY(s_axi_in_WREADY);
    rc_receiver_in_s_axi_U->WDATA(s_axi_in_WDATA);
    rc_receiver_in_s_axi_U->WSTRB(s_axi_in_WSTRB);
    rc_receiver_in_s_axi_U->ARVALID(s_axi_in_ARVALID);
    rc_receiver_in_s_axi_U->ARREADY(s_axi_in_ARREADY);
    rc_receiver_in_s_axi_U->ARADDR(s_axi_in_ARADDR);
    rc_receiver_in_s_axi_U->RVALID(s_axi_in_RVALID);
    rc_receiver_in_s_axi_U->RREADY(s_axi_in_RREADY);
    rc_receiver_in_s_axi_U->RDATA(s_axi_in_RDATA);
    rc_receiver_in_s_axi_U->RRESP(s_axi_in_RRESP);
    rc_receiver_in_s_axi_U->BVALID(s_axi_in_BVALID);
    rc_receiver_in_s_axi_U->BREADY(s_axi_in_BREADY);
    rc_receiver_in_s_axi_U->BRESP(s_axi_in_BRESP);
    rc_receiver_in_s_axi_U->ACLK(ap_clk);
    rc_receiver_in_s_axi_U->ARESET(ap_rst_n_inv);
    rc_receiver_in_s_axi_U->ACLK_EN(ap_var_for_const0);
    rc_receiver_in_s_axi_U->ap_start(ap_start);
    rc_receiver_in_s_axi_U->interrupt(interrupt);
    rc_receiver_in_s_axi_U->ap_ready(ap_ready);
    rc_receiver_in_s_axi_U->ap_done(ap_done);
    rc_receiver_in_s_axi_U->ap_idle(ap_idle);
    rc_receiver_norm_out_m_axi_U = new rc_receiver_norm_out_m_axi<32,32,5,16,16,16,16,C_M_AXI_NORM_OUT_ID_WIDTH,C_M_AXI_NORM_OUT_ADDR_WIDTH,C_M_AXI_NORM_OUT_DATA_WIDTH,C_M_AXI_NORM_OUT_AWUSER_WIDTH,C_M_AXI_NORM_OUT_ARUSER_WIDTH,C_M_AXI_NORM_OUT_WUSER_WIDTH,C_M_AXI_NORM_OUT_RUSER_WIDTH,C_M_AXI_NORM_OUT_BUSER_WIDTH,C_M_AXI_NORM_OUT_TARGET_ADDR,C_M_AXI_NORM_OUT_USER_VALUE,C_M_AXI_NORM_OUT_PROT_VALUE,C_M_AXI_NORM_OUT_CACHE_VALUE>("rc_receiver_norm_out_m_axi_U");
    rc_receiver_norm_out_m_axi_U->AWVALID(m_axi_norm_out_AWVALID);
    rc_receiver_norm_out_m_axi_U->AWREADY(m_axi_norm_out_AWREADY);
    rc_receiver_norm_out_m_axi_U->AWADDR(m_axi_norm_out_AWADDR);
    rc_receiver_norm_out_m_axi_U->AWID(m_axi_norm_out_AWID);
    rc_receiver_norm_out_m_axi_U->AWLEN(m_axi_norm_out_AWLEN);
    rc_receiver_norm_out_m_axi_U->AWSIZE(m_axi_norm_out_AWSIZE);
    rc_receiver_norm_out_m_axi_U->AWBURST(m_axi_norm_out_AWBURST);
    rc_receiver_norm_out_m_axi_U->AWLOCK(m_axi_norm_out_AWLOCK);
    rc_receiver_norm_out_m_axi_U->AWCACHE(m_axi_norm_out_AWCACHE);
    rc_receiver_norm_out_m_axi_U->AWPROT(m_axi_norm_out_AWPROT);
    rc_receiver_norm_out_m_axi_U->AWQOS(m_axi_norm_out_AWQOS);
    rc_receiver_norm_out_m_axi_U->AWREGION(m_axi_norm_out_AWREGION);
    rc_receiver_norm_out_m_axi_U->AWUSER(m_axi_norm_out_AWUSER);
    rc_receiver_norm_out_m_axi_U->WVALID(m_axi_norm_out_WVALID);
    rc_receiver_norm_out_m_axi_U->WREADY(m_axi_norm_out_WREADY);
    rc_receiver_norm_out_m_axi_U->WDATA(m_axi_norm_out_WDATA);
    rc_receiver_norm_out_m_axi_U->WSTRB(m_axi_norm_out_WSTRB);
    rc_receiver_norm_out_m_axi_U->WLAST(m_axi_norm_out_WLAST);
    rc_receiver_norm_out_m_axi_U->WID(m_axi_norm_out_WID);
    rc_receiver_norm_out_m_axi_U->WUSER(m_axi_norm_out_WUSER);
    rc_receiver_norm_out_m_axi_U->ARVALID(m_axi_norm_out_ARVALID);
    rc_receiver_norm_out_m_axi_U->ARREADY(m_axi_norm_out_ARREADY);
    rc_receiver_norm_out_m_axi_U->ARADDR(m_axi_norm_out_ARADDR);
    rc_receiver_norm_out_m_axi_U->ARID(m_axi_norm_out_ARID);
    rc_receiver_norm_out_m_axi_U->ARLEN(m_axi_norm_out_ARLEN);
    rc_receiver_norm_out_m_axi_U->ARSIZE(m_axi_norm_out_ARSIZE);
    rc_receiver_norm_out_m_axi_U->ARBURST(m_axi_norm_out_ARBURST);
    rc_receiver_norm_out_m_axi_U->ARLOCK(m_axi_norm_out_ARLOCK);
    rc_receiver_norm_out_m_axi_U->ARCACHE(m_axi_norm_out_ARCACHE);
    rc_receiver_norm_out_m_axi_U->ARPROT(m_axi_norm_out_ARPROT);
    rc_receiver_norm_out_m_axi_U->ARQOS(m_axi_norm_out_ARQOS);
    rc_receiver_norm_out_m_axi_U->ARREGION(m_axi_norm_out_ARREGION);
    rc_receiver_norm_out_m_axi_U->ARUSER(m_axi_norm_out_ARUSER);
    rc_receiver_norm_out_m_axi_U->RVALID(m_axi_norm_out_RVALID);
    rc_receiver_norm_out_m_axi_U->RREADY(m_axi_norm_out_RREADY);
    rc_receiver_norm_out_m_axi_U->RDATA(m_axi_norm_out_RDATA);
    rc_receiver_norm_out_m_axi_U->RLAST(m_axi_norm_out_RLAST);
    rc_receiver_norm_out_m_axi_U->RID(m_axi_norm_out_RID);
    rc_receiver_norm_out_m_axi_U->RUSER(m_axi_norm_out_RUSER);
    rc_receiver_norm_out_m_axi_U->RRESP(m_axi_norm_out_RRESP);
    rc_receiver_norm_out_m_axi_U->BVALID(m_axi_norm_out_BVALID);
    rc_receiver_norm_out_m_axi_U->BREADY(m_axi_norm_out_BREADY);
    rc_receiver_norm_out_m_axi_U->BRESP(m_axi_norm_out_BRESP);
    rc_receiver_norm_out_m_axi_U->BID(m_axi_norm_out_BID);
    rc_receiver_norm_out_m_axi_U->BUSER(m_axi_norm_out_BUSER);
    rc_receiver_norm_out_m_axi_U->ACLK(ap_clk);
    rc_receiver_norm_out_m_axi_U->ARESET(ap_rst_n_inv);
    rc_receiver_norm_out_m_axi_U->ACLK_EN(ap_var_for_const0);
    rc_receiver_norm_out_m_axi_U->I_ARVALID(ap_var_for_const1);
    rc_receiver_norm_out_m_axi_U->I_ARREADY(norm_out_ARREADY);
    rc_receiver_norm_out_m_axi_U->I_ARADDR(ap_var_for_const2);
    rc_receiver_norm_out_m_axi_U->I_ARID(ap_var_for_const3);
    rc_receiver_norm_out_m_axi_U->I_ARLEN(ap_var_for_const2);
    rc_receiver_norm_out_m_axi_U->I_ARSIZE(ap_var_for_const4);
    rc_receiver_norm_out_m_axi_U->I_ARLOCK(ap_var_for_const5);
    rc_receiver_norm_out_m_axi_U->I_ARCACHE(ap_var_for_const6);
    rc_receiver_norm_out_m_axi_U->I_ARQOS(ap_var_for_const6);
    rc_receiver_norm_out_m_axi_U->I_ARPROT(ap_var_for_const4);
    rc_receiver_norm_out_m_axi_U->I_ARUSER(ap_var_for_const3);
    rc_receiver_norm_out_m_axi_U->I_ARBURST(ap_var_for_const5);
    rc_receiver_norm_out_m_axi_U->I_ARREGION(ap_var_for_const6);
    rc_receiver_norm_out_m_axi_U->I_RVALID(norm_out_RVALID);
    rc_receiver_norm_out_m_axi_U->I_RREADY(ap_var_for_const1);
    rc_receiver_norm_out_m_axi_U->I_RDATA(norm_out_RDATA);
    rc_receiver_norm_out_m_axi_U->I_RID(norm_out_RID);
    rc_receiver_norm_out_m_axi_U->I_RUSER(norm_out_RUSER);
    rc_receiver_norm_out_m_axi_U->I_RRESP(norm_out_RRESP);
    rc_receiver_norm_out_m_axi_U->I_RLAST(norm_out_RLAST);
    rc_receiver_norm_out_m_axi_U->I_AWVALID(norm_out_AWVALID);
    rc_receiver_norm_out_m_axi_U->I_AWREADY(norm_out_AWREADY);
    rc_receiver_norm_out_m_axi_U->I_AWADDR(norm_out_AWADDR);
    rc_receiver_norm_out_m_axi_U->I_AWID(ap_var_for_const3);
    rc_receiver_norm_out_m_axi_U->I_AWLEN(ap_var_for_const7);
    rc_receiver_norm_out_m_axi_U->I_AWSIZE(ap_var_for_const4);
    rc_receiver_norm_out_m_axi_U->I_AWLOCK(ap_var_for_const5);
    rc_receiver_norm_out_m_axi_U->I_AWCACHE(ap_var_for_const6);
    rc_receiver_norm_out_m_axi_U->I_AWQOS(ap_var_for_const6);
    rc_receiver_norm_out_m_axi_U->I_AWPROT(ap_var_for_const4);
    rc_receiver_norm_out_m_axi_U->I_AWUSER(ap_var_for_const3);
    rc_receiver_norm_out_m_axi_U->I_AWBURST(ap_var_for_const5);
    rc_receiver_norm_out_m_axi_U->I_AWREGION(ap_var_for_const6);
    rc_receiver_norm_out_m_axi_U->I_WVALID(norm_out_WVALID);
    rc_receiver_norm_out_m_axi_U->I_WREADY(norm_out_WREADY);
    rc_receiver_norm_out_m_axi_U->I_WDATA(write_val_2_5_write_s_reg_753);
    rc_receiver_norm_out_m_axi_U->I_WID(ap_var_for_const3);
    rc_receiver_norm_out_m_axi_U->I_WUSER(ap_var_for_const3);
    rc_receiver_norm_out_m_axi_U->I_WLAST(ap_var_for_const1);
    rc_receiver_norm_out_m_axi_U->I_WSTRB(ap_var_for_const8);
    rc_receiver_norm_out_m_axi_U->I_BVALID(norm_out_BVALID);
    rc_receiver_norm_out_m_axi_U->I_BREADY(norm_out_BREADY);
    rc_receiver_norm_out_m_axi_U->I_BRESP(norm_out_BRESP);
    rc_receiver_norm_out_m_axi_U->I_BID(norm_out_BID);
    rc_receiver_norm_out_m_axi_U->I_BUSER(norm_out_BUSER);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_acc_loc_fu_114_p3);
    sensitive << ( acc );
    sensitive << ( tmp_1_fu_100_p1 );
    sensitive << ( tmp_5_fu_108_p2 );

    SC_METHOD(thread_acc_loc_s_fu_546_p3);
    sensitive << ( acc_loc_reg_664 );
    sensitive << ( or_cond_reg_669 );

    SC_METHOD(thread_acc_new_1_fu_172_p3);
    sensitive << ( p_acc_loc_fu_150_p3 );
    sensitive << ( tmp_8_fu_158_p3 );
    sensitive << ( tmp_5_1_fu_166_p2 );

    SC_METHOD(thread_acc_new_3_fu_234_p3);
    sensitive << ( p_acc_new_1_fu_212_p3 );
    sensitive << ( tmp_11_fu_220_p3 );
    sensitive << ( tmp_5_2_fu_228_p2 );

    SC_METHOD(thread_acc_new_5_fu_296_p3);
    sensitive << ( p_acc_new_3_fu_274_p3 );
    sensitive << ( tmp_13_fu_282_p3 );
    sensitive << ( tmp_5_3_fu_290_p2 );

    SC_METHOD(thread_acc_new_7_fu_358_p3);
    sensitive << ( p_acc_new_5_fu_336_p3 );
    sensitive << ( tmp_15_fu_344_p3 );
    sensitive << ( tmp_5_4_fu_352_p2 );

    SC_METHOD(thread_acc_new_9_fu_420_p3);
    sensitive << ( p_acc_new_7_fu_398_p3 );
    sensitive << ( tmp_17_fu_406_p3 );
    sensitive << ( tmp_5_5_fu_414_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( norm_out_BVALID );
    sensitive << ( ap_reg_pp0_iter7_p_should_write_1_4_reg_749 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( norm_out_BVALID );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_reg_pp0_iter7_p_should_write_1_4_reg_749 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( norm_out_BVALID );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_reg_pp0_iter7_p_should_write_1_4_reg_749 );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( ap_sig_ioackin_norm_out_AWREADY );
    sensitive << ( p_should_write_1_4_reg_749 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( ap_sig_ioackin_norm_out_WREADY );
    sensitive << ( ap_reg_pp0_iter2_p_should_write_1_4_reg_749 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter8);
    sensitive << ( norm_out_BVALID );
    sensitive << ( ap_reg_pp0_iter7_p_should_write_1_4_reg_749 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_ap_idle_pp0_0to7);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to7 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_norm_out_AWREADY);
    sensitive << ( norm_out_AWREADY );
    sensitive << ( ap_reg_ioackin_norm_out_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_norm_out_WREADY);
    sensitive << ( norm_out_WREADY );
    sensitive << ( ap_reg_ioackin_norm_out_WREADY );

    SC_METHOD(thread_norm_out_AWADDR);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( p_should_write_1_4_reg_749 );
    sensitive << ( tmp_4_fu_653_p1 );
    sensitive << ( ap_reg_ioackin_norm_out_AWREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_norm_out_AWVALID);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( p_should_write_1_4_reg_749 );
    sensitive << ( ap_reg_ioackin_norm_out_AWREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_norm_out_BREADY);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_reg_pp0_iter7_p_should_write_1_4_reg_749 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_norm_out_WVALID);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_reg_pp0_iter2_p_should_write_1_4_reg_749 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( ap_reg_ioackin_norm_out_WREADY );

    SC_METHOD(thread_norm_out_blk_n_AW);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( p_should_write_1_4_reg_749 );
    sensitive << ( m_axi_norm_out_AWREADY );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_norm_out_blk_n_B);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_reg_pp0_iter7_p_should_write_1_4_reg_749 );
    sensitive << ( m_axi_norm_out_BVALID );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_norm_out_blk_n_W);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_reg_pp0_iter2_p_should_write_1_4_reg_749 );
    sensitive << ( m_axi_norm_out_WREADY );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_or_cond_1_fu_206_p2);
    sensitive << ( tmp_7_1_fu_194_p2 );
    sensitive << ( tmp_9_1_fu_200_p2 );

    SC_METHOD(thread_or_cond_2_fu_268_p2);
    sensitive << ( tmp_7_2_fu_256_p2 );
    sensitive << ( tmp_9_2_fu_262_p2 );

    SC_METHOD(thread_or_cond_3_fu_330_p2);
    sensitive << ( tmp_7_3_fu_318_p2 );
    sensitive << ( tmp_9_3_fu_324_p2 );

    SC_METHOD(thread_or_cond_4_fu_392_p2);
    sensitive << ( tmp_7_4_fu_380_p2 );
    sensitive << ( tmp_9_4_fu_386_p2 );

    SC_METHOD(thread_or_cond_5_fu_454_p2);
    sensitive << ( tmp_7_5_fu_442_p2 );
    sensitive << ( tmp_9_5_fu_448_p2 );

    SC_METHOD(thread_or_cond_fu_144_p2);
    sensitive << ( tmp_7_fu_132_p2 );
    sensitive << ( tmp_9_fu_138_p2 );

    SC_METHOD(thread_p_acc_flag_9_fu_520_p2);
    sensitive << ( tmp6_fu_514_p2 );
    sensitive << ( tmp1_fu_484_p2 );

    SC_METHOD(thread_p_acc_loc_fu_150_p3);
    sensitive << ( acc_loc_fu_114_p3 );
    sensitive << ( or_cond_fu_144_p2 );

    SC_METHOD(thread_p_acc_new_1_fu_212_p3);
    sensitive << ( acc_new_1_fu_172_p3 );
    sensitive << ( or_cond_1_fu_206_p2 );

    SC_METHOD(thread_p_acc_new_3_fu_274_p3);
    sensitive << ( acc_new_3_fu_234_p3 );
    sensitive << ( or_cond_2_fu_268_p2 );

    SC_METHOD(thread_p_acc_new_5_fu_336_p3);
    sensitive << ( acc_new_5_fu_296_p3 );
    sensitive << ( or_cond_3_fu_330_p2 );

    SC_METHOD(thread_p_acc_new_7_fu_398_p3);
    sensitive << ( acc_new_7_fu_358_p3 );
    sensitive << ( or_cond_4_fu_392_p2 );

    SC_METHOD(thread_p_acc_new_9_fu_526_p3);
    sensitive << ( acc_new_9_fu_420_p3 );
    sensitive << ( or_cond_5_fu_454_p2 );

    SC_METHOD(thread_p_cast_fu_552_p1);
    sensitive << ( or_cond_1_reg_680 );

    SC_METHOD(thread_p_should_write_1_4_fu_635_p2);
    sensitive << ( tmp13_fu_630_p2 );
    sensitive << ( tmp11_fu_625_p2 );

    SC_METHOD(thread_p_write_to_1_1_fu_567_p3);
    sensitive << ( or_cond_3_reg_704 );

    SC_METHOD(thread_p_write_to_1_2_cast_fu_586_p1);
    sensitive << ( p_write_to_1_2_fu_578_p3 );

    SC_METHOD(thread_p_write_to_1_2_fu_578_p3);
    sensitive << ( tmp_fu_574_p2 );
    sensitive << ( p_write_to_1_1_fu_567_p3 );
    sensitive << ( p_cast_fu_552_p1 );

    SC_METHOD(thread_p_write_to_1_3_fu_602_p3);
    sensitive << ( or_cond_5_reg_728 );

    SC_METHOD(thread_p_write_to_1_4_fu_613_p3);
    sensitive << ( tmp_s_fu_609_p2 );
    sensitive << ( p_write_to_1_3_fu_602_p3 );
    sensitive << ( p_write_to_1_2_cast_fu_586_p1 );

    SC_METHOD(thread_tmp10_fu_502_p2);
    sensitive << ( or_cond_5_fu_454_p2 );
    sensitive << ( tmp_17_fu_406_p3 );

    SC_METHOD(thread_tmp11_fu_625_p2);
    sensitive << ( or_cond_1_reg_680 );
    sensitive << ( tmp12_fu_621_p2 );

    SC_METHOD(thread_tmp12_fu_621_p2);
    sensitive << ( or_cond_reg_669 );
    sensitive << ( or_cond_2_reg_692 );

    SC_METHOD(thread_tmp13_fu_630_p2);
    sensitive << ( or_cond_3_reg_704 );
    sensitive << ( tmp_s_fu_609_p2 );

    SC_METHOD(thread_tmp1_fu_484_p2);
    sensitive << ( tmp4_fu_478_p2 );
    sensitive << ( tmp2_fu_466_p2 );

    SC_METHOD(thread_tmp2_fu_466_p2);
    sensitive << ( or_cond_fu_144_p2 );
    sensitive << ( tmp3_fu_460_p2 );

    SC_METHOD(thread_tmp3_fu_460_p2);
    sensitive << ( tmp_1_fu_100_p1 );
    sensitive << ( tmp_8_fu_158_p3 );

    SC_METHOD(thread_tmp4_fu_478_p2);
    sensitive << ( or_cond_1_fu_206_p2 );
    sensitive << ( tmp5_fu_472_p2 );

    SC_METHOD(thread_tmp5_fu_472_p2);
    sensitive << ( or_cond_2_fu_268_p2 );
    sensitive << ( tmp_11_fu_220_p3 );

    SC_METHOD(thread_tmp6_fu_514_p2);
    sensitive << ( tmp9_fu_508_p2 );
    sensitive << ( tmp7_fu_496_p2 );

    SC_METHOD(thread_tmp7_fu_496_p2);
    sensitive << ( tmp_13_fu_282_p3 );
    sensitive << ( tmp8_fu_490_p2 );

    SC_METHOD(thread_tmp8_fu_490_p2);
    sensitive << ( or_cond_3_fu_330_p2 );
    sensitive << ( tmp_15_fu_344_p3 );

    SC_METHOD(thread_tmp9_fu_508_p2);
    sensitive << ( or_cond_4_fu_392_p2 );
    sensitive << ( tmp10_fu_502_p2 );

    SC_METHOD(thread_tmp_10_fu_180_p3);
    sensitive << ( last_on_V );

    SC_METHOD(thread_tmp_11_fu_220_p3);
    sensitive << ( channels_V );

    SC_METHOD(thread_tmp_12_fu_242_p3);
    sensitive << ( last_on_V );

    SC_METHOD(thread_tmp_13_fu_282_p3);
    sensitive << ( channels_V );

    SC_METHOD(thread_tmp_14_fu_304_p3);
    sensitive << ( last_on_V );

    SC_METHOD(thread_tmp_15_fu_344_p3);
    sensitive << ( channels_V );

    SC_METHOD(thread_tmp_16_fu_366_p3);
    sensitive << ( last_on_V );

    SC_METHOD(thread_tmp_17_fu_406_p3);
    sensitive << ( channels_V );

    SC_METHOD(thread_tmp_18_fu_428_p3);
    sensitive << ( last_on_V );

    SC_METHOD(thread_tmp_1_fu_100_p1);
    sensitive << ( channels_V );

    SC_METHOD(thread_tmp_2_fu_122_p1);
    sensitive << ( last_on_V );

    SC_METHOD(thread_tmp_3_fu_646_p3);
    sensitive << ( p_write_to_1_4_reg_744 );

    SC_METHOD(thread_tmp_4_fu_653_p1);
    sensitive << ( tmp_3_fu_646_p3 );

    SC_METHOD(thread_tmp_5_1_fu_166_p2);
    sensitive << ( p_acc_loc_fu_150_p3 );

    SC_METHOD(thread_tmp_5_2_fu_228_p2);
    sensitive << ( p_acc_new_1_fu_212_p3 );

    SC_METHOD(thread_tmp_5_3_fu_290_p2);
    sensitive << ( p_acc_new_3_fu_274_p3 );

    SC_METHOD(thread_tmp_5_4_fu_352_p2);
    sensitive << ( p_acc_new_5_fu_336_p3 );

    SC_METHOD(thread_tmp_5_5_fu_414_p2);
    sensitive << ( p_acc_new_7_fu_398_p3 );

    SC_METHOD(thread_tmp_5_fu_108_p2);
    sensitive << ( acc );

    SC_METHOD(thread_tmp_6_1_fu_188_p2);
    sensitive << ( tmp_8_fu_158_p3 );

    SC_METHOD(thread_tmp_6_2_fu_250_p2);
    sensitive << ( tmp_11_fu_220_p3 );

    SC_METHOD(thread_tmp_6_3_fu_312_p2);
    sensitive << ( tmp_13_fu_282_p3 );

    SC_METHOD(thread_tmp_6_4_fu_374_p2);
    sensitive << ( tmp_15_fu_344_p3 );

    SC_METHOD(thread_tmp_6_5_fu_436_p2);
    sensitive << ( tmp_17_fu_406_p3 );

    SC_METHOD(thread_tmp_6_fu_126_p2);
    sensitive << ( tmp_1_fu_100_p1 );

    SC_METHOD(thread_tmp_7_1_fu_194_p2);
    sensitive << ( tmp_10_fu_180_p3 );
    sensitive << ( tmp_6_1_fu_188_p2 );

    SC_METHOD(thread_tmp_7_2_fu_256_p2);
    sensitive << ( tmp_12_fu_242_p3 );
    sensitive << ( tmp_6_2_fu_250_p2 );

    SC_METHOD(thread_tmp_7_3_fu_318_p2);
    sensitive << ( tmp_14_fu_304_p3 );
    sensitive << ( tmp_6_3_fu_312_p2 );

    SC_METHOD(thread_tmp_7_4_fu_380_p2);
    sensitive << ( tmp_16_fu_366_p3 );
    sensitive << ( tmp_6_4_fu_374_p2 );

    SC_METHOD(thread_tmp_7_5_fu_442_p2);
    sensitive << ( tmp_18_fu_428_p3 );
    sensitive << ( tmp_6_5_fu_436_p2 );

    SC_METHOD(thread_tmp_7_fu_132_p2);
    sensitive << ( tmp_2_fu_122_p1 );
    sensitive << ( tmp_6_fu_126_p2 );

    SC_METHOD(thread_tmp_8_fu_158_p3);
    sensitive << ( channels_V );

    SC_METHOD(thread_tmp_9_1_fu_200_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( acc_new_1_fu_172_p3 );

    SC_METHOD(thread_tmp_9_2_fu_262_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( acc_new_3_fu_234_p3 );

    SC_METHOD(thread_tmp_9_3_fu_324_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( acc_new_5_fu_296_p3 );

    SC_METHOD(thread_tmp_9_4_fu_386_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( acc_new_7_fu_358_p3 );

    SC_METHOD(thread_tmp_9_5_fu_448_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( acc_new_9_fu_420_p3 );

    SC_METHOD(thread_tmp_9_fu_138_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( acc_loc_fu_114_p3 );

    SC_METHOD(thread_tmp_fu_574_p2);
    sensitive << ( or_cond_2_reg_692 );
    sensitive << ( or_cond_3_reg_704 );

    SC_METHOD(thread_tmp_s_fu_609_p2);
    sensitive << ( or_cond_4_reg_717 );
    sensitive << ( or_cond_5_reg_728 );

    SC_METHOD(thread_write_val_2_1_write_s_fu_555_p3);
    sensitive << ( acc_new_1_reg_675 );
    sensitive << ( or_cond_1_reg_680 );
    sensitive << ( acc_loc_s_fu_546_p3 );

    SC_METHOD(thread_write_val_2_2_write_s_fu_561_p3);
    sensitive << ( acc_new_3_reg_687 );
    sensitive << ( or_cond_2_reg_692 );
    sensitive << ( write_val_2_1_write_s_fu_555_p3 );

    SC_METHOD(thread_write_val_2_3_write_s_fu_590_p3);
    sensitive << ( acc_new_5_reg_699 );
    sensitive << ( or_cond_3_reg_704 );
    sensitive << ( write_val_2_2_write_s_fu_561_p3 );

    SC_METHOD(thread_write_val_2_4_write_s_fu_596_p3);
    sensitive << ( acc_new_7_reg_712 );
    sensitive << ( or_cond_4_reg_717 );
    sensitive << ( write_val_2_3_write_s_fu_590_p3 );

    SC_METHOD(thread_write_val_2_5_write_s_fu_641_p3);
    sensitive << ( ap_reg_pp0_iter1_acc_new_9_reg_723 );
    sensitive << ( ap_reg_pp0_iter1_or_cond_5_reg_728 );
    sensitive << ( write_val_2_4_write_s_reg_739 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const8);

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    last_on_V = "000000";
    acc = "00000000000000000000000000000000";
    ap_reg_ioackin_norm_out_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_norm_out_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "rc_receiver_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_norm_out_AWVALID, "(port)m_axi_norm_out_AWVALID");
    sc_trace(mVcdFile, m_axi_norm_out_AWREADY, "(port)m_axi_norm_out_AWREADY");
    sc_trace(mVcdFile, m_axi_norm_out_AWADDR, "(port)m_axi_norm_out_AWADDR");
    sc_trace(mVcdFile, m_axi_norm_out_AWID, "(port)m_axi_norm_out_AWID");
    sc_trace(mVcdFile, m_axi_norm_out_AWLEN, "(port)m_axi_norm_out_AWLEN");
    sc_trace(mVcdFile, m_axi_norm_out_AWSIZE, "(port)m_axi_norm_out_AWSIZE");
    sc_trace(mVcdFile, m_axi_norm_out_AWBURST, "(port)m_axi_norm_out_AWBURST");
    sc_trace(mVcdFile, m_axi_norm_out_AWLOCK, "(port)m_axi_norm_out_AWLOCK");
    sc_trace(mVcdFile, m_axi_norm_out_AWCACHE, "(port)m_axi_norm_out_AWCACHE");
    sc_trace(mVcdFile, m_axi_norm_out_AWPROT, "(port)m_axi_norm_out_AWPROT");
    sc_trace(mVcdFile, m_axi_norm_out_AWQOS, "(port)m_axi_norm_out_AWQOS");
    sc_trace(mVcdFile, m_axi_norm_out_AWREGION, "(port)m_axi_norm_out_AWREGION");
    sc_trace(mVcdFile, m_axi_norm_out_AWUSER, "(port)m_axi_norm_out_AWUSER");
    sc_trace(mVcdFile, m_axi_norm_out_WVALID, "(port)m_axi_norm_out_WVALID");
    sc_trace(mVcdFile, m_axi_norm_out_WREADY, "(port)m_axi_norm_out_WREADY");
    sc_trace(mVcdFile, m_axi_norm_out_WDATA, "(port)m_axi_norm_out_WDATA");
    sc_trace(mVcdFile, m_axi_norm_out_WSTRB, "(port)m_axi_norm_out_WSTRB");
    sc_trace(mVcdFile, m_axi_norm_out_WLAST, "(port)m_axi_norm_out_WLAST");
    sc_trace(mVcdFile, m_axi_norm_out_WID, "(port)m_axi_norm_out_WID");
    sc_trace(mVcdFile, m_axi_norm_out_WUSER, "(port)m_axi_norm_out_WUSER");
    sc_trace(mVcdFile, m_axi_norm_out_ARVALID, "(port)m_axi_norm_out_ARVALID");
    sc_trace(mVcdFile, m_axi_norm_out_ARREADY, "(port)m_axi_norm_out_ARREADY");
    sc_trace(mVcdFile, m_axi_norm_out_ARADDR, "(port)m_axi_norm_out_ARADDR");
    sc_trace(mVcdFile, m_axi_norm_out_ARID, "(port)m_axi_norm_out_ARID");
    sc_trace(mVcdFile, m_axi_norm_out_ARLEN, "(port)m_axi_norm_out_ARLEN");
    sc_trace(mVcdFile, m_axi_norm_out_ARSIZE, "(port)m_axi_norm_out_ARSIZE");
    sc_trace(mVcdFile, m_axi_norm_out_ARBURST, "(port)m_axi_norm_out_ARBURST");
    sc_trace(mVcdFile, m_axi_norm_out_ARLOCK, "(port)m_axi_norm_out_ARLOCK");
    sc_trace(mVcdFile, m_axi_norm_out_ARCACHE, "(port)m_axi_norm_out_ARCACHE");
    sc_trace(mVcdFile, m_axi_norm_out_ARPROT, "(port)m_axi_norm_out_ARPROT");
    sc_trace(mVcdFile, m_axi_norm_out_ARQOS, "(port)m_axi_norm_out_ARQOS");
    sc_trace(mVcdFile, m_axi_norm_out_ARREGION, "(port)m_axi_norm_out_ARREGION");
    sc_trace(mVcdFile, m_axi_norm_out_ARUSER, "(port)m_axi_norm_out_ARUSER");
    sc_trace(mVcdFile, m_axi_norm_out_RVALID, "(port)m_axi_norm_out_RVALID");
    sc_trace(mVcdFile, m_axi_norm_out_RREADY, "(port)m_axi_norm_out_RREADY");
    sc_trace(mVcdFile, m_axi_norm_out_RDATA, "(port)m_axi_norm_out_RDATA");
    sc_trace(mVcdFile, m_axi_norm_out_RLAST, "(port)m_axi_norm_out_RLAST");
    sc_trace(mVcdFile, m_axi_norm_out_RID, "(port)m_axi_norm_out_RID");
    sc_trace(mVcdFile, m_axi_norm_out_RUSER, "(port)m_axi_norm_out_RUSER");
    sc_trace(mVcdFile, m_axi_norm_out_RRESP, "(port)m_axi_norm_out_RRESP");
    sc_trace(mVcdFile, m_axi_norm_out_BVALID, "(port)m_axi_norm_out_BVALID");
    sc_trace(mVcdFile, m_axi_norm_out_BREADY, "(port)m_axi_norm_out_BREADY");
    sc_trace(mVcdFile, m_axi_norm_out_BRESP, "(port)m_axi_norm_out_BRESP");
    sc_trace(mVcdFile, m_axi_norm_out_BID, "(port)m_axi_norm_out_BID");
    sc_trace(mVcdFile, m_axi_norm_out_BUSER, "(port)m_axi_norm_out_BUSER");
    sc_trace(mVcdFile, channels_V, "(port)channels_V");
    sc_trace(mVcdFile, s_axi_in_AWVALID, "(port)s_axi_in_AWVALID");
    sc_trace(mVcdFile, s_axi_in_AWREADY, "(port)s_axi_in_AWREADY");
    sc_trace(mVcdFile, s_axi_in_AWADDR, "(port)s_axi_in_AWADDR");
    sc_trace(mVcdFile, s_axi_in_WVALID, "(port)s_axi_in_WVALID");
    sc_trace(mVcdFile, s_axi_in_WREADY, "(port)s_axi_in_WREADY");
    sc_trace(mVcdFile, s_axi_in_WDATA, "(port)s_axi_in_WDATA");
    sc_trace(mVcdFile, s_axi_in_WSTRB, "(port)s_axi_in_WSTRB");
    sc_trace(mVcdFile, s_axi_in_ARVALID, "(port)s_axi_in_ARVALID");
    sc_trace(mVcdFile, s_axi_in_ARREADY, "(port)s_axi_in_ARREADY");
    sc_trace(mVcdFile, s_axi_in_ARADDR, "(port)s_axi_in_ARADDR");
    sc_trace(mVcdFile, s_axi_in_RVALID, "(port)s_axi_in_RVALID");
    sc_trace(mVcdFile, s_axi_in_RREADY, "(port)s_axi_in_RREADY");
    sc_trace(mVcdFile, s_axi_in_RDATA, "(port)s_axi_in_RDATA");
    sc_trace(mVcdFile, s_axi_in_RRESP, "(port)s_axi_in_RRESP");
    sc_trace(mVcdFile, s_axi_in_BVALID, "(port)s_axi_in_BVALID");
    sc_trace(mVcdFile, s_axi_in_BREADY, "(port)s_axi_in_BREADY");
    sc_trace(mVcdFile, s_axi_in_BRESP, "(port)s_axi_in_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, norm_out_AWVALID, "norm_out_AWVALID");
    sc_trace(mVcdFile, norm_out_AWREADY, "norm_out_AWREADY");
    sc_trace(mVcdFile, norm_out_AWADDR, "norm_out_AWADDR");
    sc_trace(mVcdFile, norm_out_WVALID, "norm_out_WVALID");
    sc_trace(mVcdFile, norm_out_WREADY, "norm_out_WREADY");
    sc_trace(mVcdFile, norm_out_ARREADY, "norm_out_ARREADY");
    sc_trace(mVcdFile, norm_out_RVALID, "norm_out_RVALID");
    sc_trace(mVcdFile, norm_out_RDATA, "norm_out_RDATA");
    sc_trace(mVcdFile, norm_out_RLAST, "norm_out_RLAST");
    sc_trace(mVcdFile, norm_out_RID, "norm_out_RID");
    sc_trace(mVcdFile, norm_out_RUSER, "norm_out_RUSER");
    sc_trace(mVcdFile, norm_out_RRESP, "norm_out_RRESP");
    sc_trace(mVcdFile, norm_out_BVALID, "norm_out_BVALID");
    sc_trace(mVcdFile, norm_out_BREADY, "norm_out_BREADY");
    sc_trace(mVcdFile, norm_out_BRESP, "norm_out_BRESP");
    sc_trace(mVcdFile, norm_out_BID, "norm_out_BID");
    sc_trace(mVcdFile, norm_out_BUSER, "norm_out_BUSER");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_sig_ioackin_norm_out_AWREADY, "ap_sig_ioackin_norm_out_AWREADY");
    sc_trace(mVcdFile, p_should_write_1_4_reg_749, "p_should_write_1_4_reg_749");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter3, "ap_block_state4_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_sig_ioackin_norm_out_WREADY, "ap_sig_ioackin_norm_out_WREADY");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_p_should_write_1_4_reg_749, "ap_reg_pp0_iter2_p_should_write_1_4_reg_749");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter4, "ap_block_state5_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter5, "ap_block_state6_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter6, "ap_block_state7_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter7, "ap_block_state8_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_p_should_write_1_4_reg_749, "ap_reg_pp0_iter7_p_should_write_1_4_reg_749");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter8, "ap_block_state9_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, last_on_V, "last_on_V");
    sc_trace(mVcdFile, acc, "acc");
    sc_trace(mVcdFile, norm_out_blk_n_AW, "norm_out_blk_n_AW");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, norm_out_blk_n_W, "norm_out_blk_n_W");
    sc_trace(mVcdFile, norm_out_blk_n_B, "norm_out_blk_n_B");
    sc_trace(mVcdFile, acc_loc_fu_114_p3, "acc_loc_fu_114_p3");
    sc_trace(mVcdFile, acc_loc_reg_664, "acc_loc_reg_664");
    sc_trace(mVcdFile, or_cond_fu_144_p2, "or_cond_fu_144_p2");
    sc_trace(mVcdFile, or_cond_reg_669, "or_cond_reg_669");
    sc_trace(mVcdFile, acc_new_1_fu_172_p3, "acc_new_1_fu_172_p3");
    sc_trace(mVcdFile, acc_new_1_reg_675, "acc_new_1_reg_675");
    sc_trace(mVcdFile, or_cond_1_fu_206_p2, "or_cond_1_fu_206_p2");
    sc_trace(mVcdFile, or_cond_1_reg_680, "or_cond_1_reg_680");
    sc_trace(mVcdFile, acc_new_3_fu_234_p3, "acc_new_3_fu_234_p3");
    sc_trace(mVcdFile, acc_new_3_reg_687, "acc_new_3_reg_687");
    sc_trace(mVcdFile, or_cond_2_fu_268_p2, "or_cond_2_fu_268_p2");
    sc_trace(mVcdFile, or_cond_2_reg_692, "or_cond_2_reg_692");
    sc_trace(mVcdFile, acc_new_5_fu_296_p3, "acc_new_5_fu_296_p3");
    sc_trace(mVcdFile, acc_new_5_reg_699, "acc_new_5_reg_699");
    sc_trace(mVcdFile, or_cond_3_fu_330_p2, "or_cond_3_fu_330_p2");
    sc_trace(mVcdFile, or_cond_3_reg_704, "or_cond_3_reg_704");
    sc_trace(mVcdFile, acc_new_7_fu_358_p3, "acc_new_7_fu_358_p3");
    sc_trace(mVcdFile, acc_new_7_reg_712, "acc_new_7_reg_712");
    sc_trace(mVcdFile, or_cond_4_fu_392_p2, "or_cond_4_fu_392_p2");
    sc_trace(mVcdFile, or_cond_4_reg_717, "or_cond_4_reg_717");
    sc_trace(mVcdFile, acc_new_9_fu_420_p3, "acc_new_9_fu_420_p3");
    sc_trace(mVcdFile, acc_new_9_reg_723, "acc_new_9_reg_723");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_acc_new_9_reg_723, "ap_reg_pp0_iter1_acc_new_9_reg_723");
    sc_trace(mVcdFile, or_cond_5_fu_454_p2, "or_cond_5_fu_454_p2");
    sc_trace(mVcdFile, or_cond_5_reg_728, "or_cond_5_reg_728");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_or_cond_5_reg_728, "ap_reg_pp0_iter1_or_cond_5_reg_728");
    sc_trace(mVcdFile, p_acc_flag_9_fu_520_p2, "p_acc_flag_9_fu_520_p2");
    sc_trace(mVcdFile, write_val_2_4_write_s_fu_596_p3, "write_val_2_4_write_s_fu_596_p3");
    sc_trace(mVcdFile, write_val_2_4_write_s_reg_739, "write_val_2_4_write_s_reg_739");
    sc_trace(mVcdFile, p_write_to_1_4_fu_613_p3, "p_write_to_1_4_fu_613_p3");
    sc_trace(mVcdFile, p_write_to_1_4_reg_744, "p_write_to_1_4_reg_744");
    sc_trace(mVcdFile, p_should_write_1_4_fu_635_p2, "p_should_write_1_4_fu_635_p2");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_p_should_write_1_4_reg_749, "ap_reg_pp0_iter3_p_should_write_1_4_reg_749");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_p_should_write_1_4_reg_749, "ap_reg_pp0_iter4_p_should_write_1_4_reg_749");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_p_should_write_1_4_reg_749, "ap_reg_pp0_iter5_p_should_write_1_4_reg_749");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_p_should_write_1_4_reg_749, "ap_reg_pp0_iter6_p_should_write_1_4_reg_749");
    sc_trace(mVcdFile, write_val_2_5_write_s_fu_641_p3, "write_val_2_5_write_s_fu_641_p3");
    sc_trace(mVcdFile, write_val_2_5_write_s_reg_753, "write_val_2_5_write_s_reg_753");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, tmp_4_fu_653_p1, "tmp_4_fu_653_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_norm_out_AWREADY, "ap_reg_ioackin_norm_out_AWREADY");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, ap_reg_ioackin_norm_out_WREADY, "ap_reg_ioackin_norm_out_WREADY");
    sc_trace(mVcdFile, p_acc_new_9_fu_526_p3, "p_acc_new_9_fu_526_p3");
    sc_trace(mVcdFile, tmp_1_fu_100_p1, "tmp_1_fu_100_p1");
    sc_trace(mVcdFile, tmp_5_fu_108_p2, "tmp_5_fu_108_p2");
    sc_trace(mVcdFile, tmp_2_fu_122_p1, "tmp_2_fu_122_p1");
    sc_trace(mVcdFile, tmp_6_fu_126_p2, "tmp_6_fu_126_p2");
    sc_trace(mVcdFile, tmp_7_fu_132_p2, "tmp_7_fu_132_p2");
    sc_trace(mVcdFile, tmp_9_fu_138_p2, "tmp_9_fu_138_p2");
    sc_trace(mVcdFile, p_acc_loc_fu_150_p3, "p_acc_loc_fu_150_p3");
    sc_trace(mVcdFile, tmp_8_fu_158_p3, "tmp_8_fu_158_p3");
    sc_trace(mVcdFile, tmp_5_1_fu_166_p2, "tmp_5_1_fu_166_p2");
    sc_trace(mVcdFile, tmp_10_fu_180_p3, "tmp_10_fu_180_p3");
    sc_trace(mVcdFile, tmp_6_1_fu_188_p2, "tmp_6_1_fu_188_p2");
    sc_trace(mVcdFile, tmp_7_1_fu_194_p2, "tmp_7_1_fu_194_p2");
    sc_trace(mVcdFile, tmp_9_1_fu_200_p2, "tmp_9_1_fu_200_p2");
    sc_trace(mVcdFile, p_acc_new_1_fu_212_p3, "p_acc_new_1_fu_212_p3");
    sc_trace(mVcdFile, tmp_11_fu_220_p3, "tmp_11_fu_220_p3");
    sc_trace(mVcdFile, tmp_5_2_fu_228_p2, "tmp_5_2_fu_228_p2");
    sc_trace(mVcdFile, tmp_12_fu_242_p3, "tmp_12_fu_242_p3");
    sc_trace(mVcdFile, tmp_6_2_fu_250_p2, "tmp_6_2_fu_250_p2");
    sc_trace(mVcdFile, tmp_7_2_fu_256_p2, "tmp_7_2_fu_256_p2");
    sc_trace(mVcdFile, tmp_9_2_fu_262_p2, "tmp_9_2_fu_262_p2");
    sc_trace(mVcdFile, p_acc_new_3_fu_274_p3, "p_acc_new_3_fu_274_p3");
    sc_trace(mVcdFile, tmp_13_fu_282_p3, "tmp_13_fu_282_p3");
    sc_trace(mVcdFile, tmp_5_3_fu_290_p2, "tmp_5_3_fu_290_p2");
    sc_trace(mVcdFile, tmp_14_fu_304_p3, "tmp_14_fu_304_p3");
    sc_trace(mVcdFile, tmp_6_3_fu_312_p2, "tmp_6_3_fu_312_p2");
    sc_trace(mVcdFile, tmp_7_3_fu_318_p2, "tmp_7_3_fu_318_p2");
    sc_trace(mVcdFile, tmp_9_3_fu_324_p2, "tmp_9_3_fu_324_p2");
    sc_trace(mVcdFile, p_acc_new_5_fu_336_p3, "p_acc_new_5_fu_336_p3");
    sc_trace(mVcdFile, tmp_15_fu_344_p3, "tmp_15_fu_344_p3");
    sc_trace(mVcdFile, tmp_5_4_fu_352_p2, "tmp_5_4_fu_352_p2");
    sc_trace(mVcdFile, tmp_16_fu_366_p3, "tmp_16_fu_366_p3");
    sc_trace(mVcdFile, tmp_6_4_fu_374_p2, "tmp_6_4_fu_374_p2");
    sc_trace(mVcdFile, tmp_7_4_fu_380_p2, "tmp_7_4_fu_380_p2");
    sc_trace(mVcdFile, tmp_9_4_fu_386_p2, "tmp_9_4_fu_386_p2");
    sc_trace(mVcdFile, p_acc_new_7_fu_398_p3, "p_acc_new_7_fu_398_p3");
    sc_trace(mVcdFile, tmp_17_fu_406_p3, "tmp_17_fu_406_p3");
    sc_trace(mVcdFile, tmp_5_5_fu_414_p2, "tmp_5_5_fu_414_p2");
    sc_trace(mVcdFile, tmp_18_fu_428_p3, "tmp_18_fu_428_p3");
    sc_trace(mVcdFile, tmp_6_5_fu_436_p2, "tmp_6_5_fu_436_p2");
    sc_trace(mVcdFile, tmp_7_5_fu_442_p2, "tmp_7_5_fu_442_p2");
    sc_trace(mVcdFile, tmp_9_5_fu_448_p2, "tmp_9_5_fu_448_p2");
    sc_trace(mVcdFile, tmp3_fu_460_p2, "tmp3_fu_460_p2");
    sc_trace(mVcdFile, tmp5_fu_472_p2, "tmp5_fu_472_p2");
    sc_trace(mVcdFile, tmp4_fu_478_p2, "tmp4_fu_478_p2");
    sc_trace(mVcdFile, tmp2_fu_466_p2, "tmp2_fu_466_p2");
    sc_trace(mVcdFile, tmp8_fu_490_p2, "tmp8_fu_490_p2");
    sc_trace(mVcdFile, tmp10_fu_502_p2, "tmp10_fu_502_p2");
    sc_trace(mVcdFile, tmp9_fu_508_p2, "tmp9_fu_508_p2");
    sc_trace(mVcdFile, tmp7_fu_496_p2, "tmp7_fu_496_p2");
    sc_trace(mVcdFile, tmp6_fu_514_p2, "tmp6_fu_514_p2");
    sc_trace(mVcdFile, tmp1_fu_484_p2, "tmp1_fu_484_p2");
    sc_trace(mVcdFile, acc_loc_s_fu_546_p3, "acc_loc_s_fu_546_p3");
    sc_trace(mVcdFile, write_val_2_1_write_s_fu_555_p3, "write_val_2_1_write_s_fu_555_p3");
    sc_trace(mVcdFile, tmp_fu_574_p2, "tmp_fu_574_p2");
    sc_trace(mVcdFile, p_write_to_1_1_fu_567_p3, "p_write_to_1_1_fu_567_p3");
    sc_trace(mVcdFile, p_cast_fu_552_p1, "p_cast_fu_552_p1");
    sc_trace(mVcdFile, p_write_to_1_2_fu_578_p3, "p_write_to_1_2_fu_578_p3");
    sc_trace(mVcdFile, write_val_2_2_write_s_fu_561_p3, "write_val_2_2_write_s_fu_561_p3");
    sc_trace(mVcdFile, write_val_2_3_write_s_fu_590_p3, "write_val_2_3_write_s_fu_590_p3");
    sc_trace(mVcdFile, tmp_s_fu_609_p2, "tmp_s_fu_609_p2");
    sc_trace(mVcdFile, p_write_to_1_3_fu_602_p3, "p_write_to_1_3_fu_602_p3");
    sc_trace(mVcdFile, p_write_to_1_2_cast_fu_586_p1, "p_write_to_1_2_cast_fu_586_p1");
    sc_trace(mVcdFile, tmp12_fu_621_p2, "tmp12_fu_621_p2");
    sc_trace(mVcdFile, tmp13_fu_630_p2, "tmp13_fu_630_p2");
    sc_trace(mVcdFile, tmp11_fu_625_p2, "tmp11_fu_625_p2");
    sc_trace(mVcdFile, tmp_3_fu_646_p3, "tmp_3_fu_646_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to7, "ap_idle_pp0_0to7");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("rc_receiver.hdltvin.dat");
    mHdltvoutHandle.open("rc_receiver.hdltvout.dat");
}

rc_receiver::~rc_receiver() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete rc_receiver_in_s_axi_U;
    delete rc_receiver_norm_out_m_axi_U;
}

void rc_receiver::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void rc_receiver::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_0;
}

void rc_receiver::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_0;
}

void rc_receiver::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv1_0;
}

void rc_receiver::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv32_1;
}

void rc_receiver::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv3_0;
}

void rc_receiver::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv2_0;
}

void rc_receiver::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv4_0;
}

void rc_receiver::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv4_F;
}

void rc_receiver::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_norm_out_AWREADY = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(p_should_write_1_4_reg_749.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_norm_out_AWREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, norm_out_AWREADY.read()) && 
                        esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
                ap_reg_ioackin_norm_out_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_norm_out_WREADY = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter2_p_should_write_1_4_reg_749.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_norm_out_WREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, norm_out_WREADY.read()))) {
                ap_reg_ioackin_norm_out_WREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, p_acc_flag_9_fu_520_p2.read()))) {
        acc = p_acc_new_9_fu_526_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        acc_loc_reg_664 = acc_loc_fu_114_p3.read();
        acc_new_1_reg_675 = acc_new_1_fu_172_p3.read();
        acc_new_3_reg_687 = acc_new_3_fu_234_p3.read();
        acc_new_5_reg_699 = acc_new_5_fu_296_p3.read();
        acc_new_7_reg_712 = acc_new_7_fu_358_p3.read();
        acc_new_9_reg_723 = acc_new_9_fu_420_p3.read();
        ap_reg_pp0_iter1_acc_new_9_reg_723 = acc_new_9_reg_723.read();
        ap_reg_pp0_iter1_or_cond_5_reg_728 = or_cond_5_reg_728.read();
        or_cond_1_reg_680 = or_cond_1_fu_206_p2.read();
        or_cond_2_reg_692 = or_cond_2_fu_268_p2.read();
        or_cond_3_reg_704 = or_cond_3_fu_330_p2.read();
        or_cond_4_reg_717 = or_cond_4_fu_392_p2.read();
        or_cond_5_reg_728 = or_cond_5_fu_454_p2.read();
        or_cond_reg_669 = or_cond_fu_144_p2.read();
        p_should_write_1_4_reg_749 = p_should_write_1_4_fu_635_p2.read();
        p_write_to_1_4_reg_744 = p_write_to_1_4_fu_613_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter2_p_should_write_1_4_reg_749 = p_should_write_1_4_reg_749.read();
        ap_reg_pp0_iter3_p_should_write_1_4_reg_749 = ap_reg_pp0_iter2_p_should_write_1_4_reg_749.read();
        ap_reg_pp0_iter4_p_should_write_1_4_reg_749 = ap_reg_pp0_iter3_p_should_write_1_4_reg_749.read();
        ap_reg_pp0_iter5_p_should_write_1_4_reg_749 = ap_reg_pp0_iter4_p_should_write_1_4_reg_749.read();
        ap_reg_pp0_iter6_p_should_write_1_4_reg_749 = ap_reg_pp0_iter5_p_should_write_1_4_reg_749.read();
        ap_reg_pp0_iter7_p_should_write_1_4_reg_749 = ap_reg_pp0_iter6_p_should_write_1_4_reg_749.read();
        write_val_2_5_write_s_reg_753 = write_val_2_5_write_s_fu_641_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        last_on_V = channels_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(or_cond_5_reg_728.read(), ap_const_lv1_0))) {
        write_val_2_4_write_s_reg_739 = write_val_2_4_write_s_fu_596_p3.read();
    }
}

void rc_receiver::thread_acc_loc_fu_114_p3() {
    acc_loc_fu_114_p3 = (!tmp_1_fu_100_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_1_fu_100_p1.read()[0].to_bool())? tmp_5_fu_108_p2.read(): acc.read());
}

void rc_receiver::thread_acc_loc_s_fu_546_p3() {
    acc_loc_s_fu_546_p3 = (!or_cond_reg_669.read()[0].is_01())? sc_lv<32>(): ((or_cond_reg_669.read()[0].to_bool())? acc_loc_reg_664.read(): ap_const_lv32_0);
}

void rc_receiver::thread_acc_new_1_fu_172_p3() {
    acc_new_1_fu_172_p3 = (!tmp_8_fu_158_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_8_fu_158_p3.read()[0].to_bool())? tmp_5_1_fu_166_p2.read(): p_acc_loc_fu_150_p3.read());
}

void rc_receiver::thread_acc_new_3_fu_234_p3() {
    acc_new_3_fu_234_p3 = (!tmp_11_fu_220_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_11_fu_220_p3.read()[0].to_bool())? tmp_5_2_fu_228_p2.read(): p_acc_new_1_fu_212_p3.read());
}

void rc_receiver::thread_acc_new_5_fu_296_p3() {
    acc_new_5_fu_296_p3 = (!tmp_13_fu_282_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_13_fu_282_p3.read()[0].to_bool())? tmp_5_3_fu_290_p2.read(): p_acc_new_3_fu_274_p3.read());
}

void rc_receiver::thread_acc_new_7_fu_358_p3() {
    acc_new_7_fu_358_p3 = (!tmp_15_fu_344_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_15_fu_344_p3.read()[0].to_bool())? tmp_5_4_fu_352_p2.read(): p_acc_new_5_fu_336_p3.read());
}

void rc_receiver::thread_acc_new_9_fu_420_p3() {
    acc_new_9_fu_420_p3 = (!tmp_17_fu_406_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_17_fu_406_p3.read()[0].to_bool())? tmp_5_5_fu_414_p2.read(): p_acc_new_7_fu_398_p3.read());
}

void rc_receiver::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void rc_receiver::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rc_receiver::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, norm_out_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter7_p_should_write_1_4_reg_749.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())));
}

void rc_receiver::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, norm_out_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter7_p_should_write_1_4_reg_749.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())));
}

void rc_receiver::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || (esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, norm_out_BVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter7_p_should_write_1_4_reg_749.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())));
}

void rc_receiver::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read());
}

void rc_receiver::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rc_receiver::thread_ap_block_state3_io() {
    ap_block_state3_io = (esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_norm_out_AWREADY.read()) && esl_seteq<1,1,1>(p_should_write_1_4_reg_749.read(), ap_const_lv1_1));
}

void rc_receiver::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rc_receiver::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_norm_out_WREADY.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter2_p_should_write_1_4_reg_749.read()));
}

void rc_receiver::thread_ap_block_state4_pp0_stage0_iter3() {
    ap_block_state4_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rc_receiver::thread_ap_block_state5_pp0_stage0_iter4() {
    ap_block_state5_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rc_receiver::thread_ap_block_state6_pp0_stage0_iter5() {
    ap_block_state6_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rc_receiver::thread_ap_block_state7_pp0_stage0_iter6() {
    ap_block_state7_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rc_receiver::thread_ap_block_state8_pp0_stage0_iter7() {
    ap_block_state8_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rc_receiver::thread_ap_block_state9_pp0_stage0_iter8() {
    ap_block_state9_pp0_stage0_iter8 = (esl_seteq<1,1,1>(ap_const_logic_0, norm_out_BVALID.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter7_p_should_write_1_4_reg_749.read()));
}

void rc_receiver::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void rc_receiver::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void rc_receiver::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void rc_receiver::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void rc_receiver::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void rc_receiver::thread_ap_idle_pp0_0to7() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()))) {
        ap_idle_pp0_0to7 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to7 = ap_const_logic_0;
    }
}

void rc_receiver::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void rc_receiver::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to7.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void rc_receiver::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void rc_receiver::thread_ap_sig_ioackin_norm_out_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_norm_out_AWREADY.read())) {
        ap_sig_ioackin_norm_out_AWREADY = norm_out_AWREADY.read();
    } else {
        ap_sig_ioackin_norm_out_AWREADY = ap_const_logic_1;
    }
}

void rc_receiver::thread_ap_sig_ioackin_norm_out_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_norm_out_WREADY.read())) {
        ap_sig_ioackin_norm_out_WREADY = norm_out_WREADY.read();
    } else {
        ap_sig_ioackin_norm_out_WREADY = ap_const_logic_1;
    }
}

void rc_receiver::thread_norm_out_AWADDR() {
    norm_out_AWADDR =  (sc_lv<32>) (tmp_4_fu_653_p1.read());
}

void rc_receiver::thread_norm_out_AWVALID() {
    if ((esl_seteq<1,1,1>(p_should_write_1_4_reg_749.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_norm_out_AWREADY.read()))) {
        norm_out_AWVALID = ap_const_logic_1;
    } else {
        norm_out_AWVALID = ap_const_logic_0;
    }
}

void rc_receiver::thread_norm_out_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter7_p_should_write_1_4_reg_749.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        norm_out_BREADY = ap_const_logic_1;
    } else {
        norm_out_BREADY = ap_const_logic_0;
    }
}

void rc_receiver::thread_norm_out_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter2_p_should_write_1_4_reg_749.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_norm_out_WREADY.read()))) {
        norm_out_WVALID = ap_const_logic_1;
    } else {
        norm_out_WVALID = ap_const_logic_0;
    }
}

void rc_receiver::thread_norm_out_blk_n_AW() {
    if ((esl_seteq<1,1,1>(p_should_write_1_4_reg_749.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        norm_out_blk_n_AW = m_axi_norm_out_AWREADY.read();
    } else {
        norm_out_blk_n_AW = ap_const_logic_1;
    }
}

void rc_receiver::thread_norm_out_blk_n_B() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter7_p_should_write_1_4_reg_749.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        norm_out_blk_n_B = m_axi_norm_out_BVALID.read();
    } else {
        norm_out_blk_n_B = ap_const_logic_1;
    }
}

void rc_receiver::thread_norm_out_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter2_p_should_write_1_4_reg_749.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        norm_out_blk_n_W = m_axi_norm_out_WREADY.read();
    } else {
        norm_out_blk_n_W = ap_const_logic_1;
    }
}

void rc_receiver::thread_or_cond_1_fu_206_p2() {
    or_cond_1_fu_206_p2 = (tmp_7_1_fu_194_p2.read() & tmp_9_1_fu_200_p2.read());
}

void rc_receiver::thread_or_cond_2_fu_268_p2() {
    or_cond_2_fu_268_p2 = (tmp_7_2_fu_256_p2.read() & tmp_9_2_fu_262_p2.read());
}

void rc_receiver::thread_or_cond_3_fu_330_p2() {
    or_cond_3_fu_330_p2 = (tmp_7_3_fu_318_p2.read() & tmp_9_3_fu_324_p2.read());
}

void rc_receiver::thread_or_cond_4_fu_392_p2() {
    or_cond_4_fu_392_p2 = (tmp_7_4_fu_380_p2.read() & tmp_9_4_fu_386_p2.read());
}

void rc_receiver::thread_or_cond_5_fu_454_p2() {
    or_cond_5_fu_454_p2 = (tmp_7_5_fu_442_p2.read() & tmp_9_5_fu_448_p2.read());
}

void rc_receiver::thread_or_cond_fu_144_p2() {
    or_cond_fu_144_p2 = (tmp_7_fu_132_p2.read() & tmp_9_fu_138_p2.read());
}

void rc_receiver::thread_p_acc_flag_9_fu_520_p2() {
    p_acc_flag_9_fu_520_p2 = (tmp6_fu_514_p2.read() | tmp1_fu_484_p2.read());
}

void rc_receiver::thread_p_acc_loc_fu_150_p3() {
    p_acc_loc_fu_150_p3 = (!or_cond_fu_144_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_fu_144_p2.read()[0].to_bool())? ap_const_lv32_0: acc_loc_fu_114_p3.read());
}

void rc_receiver::thread_p_acc_new_1_fu_212_p3() {
    p_acc_new_1_fu_212_p3 = (!or_cond_1_fu_206_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_1_fu_206_p2.read()[0].to_bool())? ap_const_lv32_0: acc_new_1_fu_172_p3.read());
}

void rc_receiver::thread_p_acc_new_3_fu_274_p3() {
    p_acc_new_3_fu_274_p3 = (!or_cond_2_fu_268_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_2_fu_268_p2.read()[0].to_bool())? ap_const_lv32_0: acc_new_3_fu_234_p3.read());
}

void rc_receiver::thread_p_acc_new_5_fu_336_p3() {
    p_acc_new_5_fu_336_p3 = (!or_cond_3_fu_330_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_3_fu_330_p2.read()[0].to_bool())? ap_const_lv32_0: acc_new_5_fu_296_p3.read());
}

void rc_receiver::thread_p_acc_new_7_fu_398_p3() {
    p_acc_new_7_fu_398_p3 = (!or_cond_4_fu_392_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_4_fu_392_p2.read()[0].to_bool())? ap_const_lv32_0: acc_new_7_fu_358_p3.read());
}

void rc_receiver::thread_p_acc_new_9_fu_526_p3() {
    p_acc_new_9_fu_526_p3 = (!or_cond_5_fu_454_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_5_fu_454_p2.read()[0].to_bool())? ap_const_lv32_0: acc_new_9_fu_420_p3.read());
}

void rc_receiver::thread_p_cast_fu_552_p1() {
    p_cast_fu_552_p1 = esl_zext<2,1>(or_cond_1_reg_680.read());
}

void rc_receiver::thread_p_should_write_1_4_fu_635_p2() {
    p_should_write_1_4_fu_635_p2 = (tmp13_fu_630_p2.read() | tmp11_fu_625_p2.read());
}

void rc_receiver::thread_p_write_to_1_1_fu_567_p3() {
    p_write_to_1_1_fu_567_p3 = (!or_cond_3_reg_704.read()[0].is_01())? sc_lv<2>(): ((or_cond_3_reg_704.read()[0].to_bool())? ap_const_lv2_3: ap_const_lv2_2);
}

void rc_receiver::thread_p_write_to_1_2_cast_fu_586_p1() {
    p_write_to_1_2_cast_fu_586_p1 = esl_zext<3,2>(p_write_to_1_2_fu_578_p3.read());
}

void rc_receiver::thread_p_write_to_1_2_fu_578_p3() {
    p_write_to_1_2_fu_578_p3 = (!tmp_fu_574_p2.read()[0].is_01())? sc_lv<2>(): ((tmp_fu_574_p2.read()[0].to_bool())? p_write_to_1_1_fu_567_p3.read(): p_cast_fu_552_p1.read());
}

void rc_receiver::thread_p_write_to_1_3_fu_602_p3() {
    p_write_to_1_3_fu_602_p3 = (!or_cond_5_reg_728.read()[0].is_01())? sc_lv<3>(): ((or_cond_5_reg_728.read()[0].to_bool())? ap_const_lv3_5: ap_const_lv3_4);
}

void rc_receiver::thread_p_write_to_1_4_fu_613_p3() {
    p_write_to_1_4_fu_613_p3 = (!tmp_s_fu_609_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_s_fu_609_p2.read()[0].to_bool())? p_write_to_1_3_fu_602_p3.read(): p_write_to_1_2_cast_fu_586_p1.read());
}

void rc_receiver::thread_tmp10_fu_502_p2() {
    tmp10_fu_502_p2 = (tmp_17_fu_406_p3.read() | or_cond_5_fu_454_p2.read());
}

void rc_receiver::thread_tmp11_fu_625_p2() {
    tmp11_fu_625_p2 = (tmp12_fu_621_p2.read() | or_cond_1_reg_680.read());
}

void rc_receiver::thread_tmp12_fu_621_p2() {
    tmp12_fu_621_p2 = (or_cond_reg_669.read() | or_cond_2_reg_692.read());
}

void rc_receiver::thread_tmp13_fu_630_p2() {
    tmp13_fu_630_p2 = (tmp_s_fu_609_p2.read() | or_cond_3_reg_704.read());
}

void rc_receiver::thread_tmp1_fu_484_p2() {
    tmp1_fu_484_p2 = (tmp4_fu_478_p2.read() | tmp2_fu_466_p2.read());
}

void rc_receiver::thread_tmp2_fu_466_p2() {
    tmp2_fu_466_p2 = (tmp3_fu_460_p2.read() | or_cond_fu_144_p2.read());
}

void rc_receiver::thread_tmp3_fu_460_p2() {
    tmp3_fu_460_p2 = (tmp_1_fu_100_p1.read() | tmp_8_fu_158_p3.read());
}

void rc_receiver::thread_tmp4_fu_478_p2() {
    tmp4_fu_478_p2 = (tmp5_fu_472_p2.read() | or_cond_1_fu_206_p2.read());
}

void rc_receiver::thread_tmp5_fu_472_p2() {
    tmp5_fu_472_p2 = (tmp_11_fu_220_p3.read() | or_cond_2_fu_268_p2.read());
}

void rc_receiver::thread_tmp6_fu_514_p2() {
    tmp6_fu_514_p2 = (tmp9_fu_508_p2.read() | tmp7_fu_496_p2.read());
}

void rc_receiver::thread_tmp7_fu_496_p2() {
    tmp7_fu_496_p2 = (tmp8_fu_490_p2.read() | tmp_13_fu_282_p3.read());
}

void rc_receiver::thread_tmp8_fu_490_p2() {
    tmp8_fu_490_p2 = (or_cond_3_fu_330_p2.read() | tmp_15_fu_344_p3.read());
}

void rc_receiver::thread_tmp9_fu_508_p2() {
    tmp9_fu_508_p2 = (tmp10_fu_502_p2.read() | or_cond_4_fu_392_p2.read());
}

void rc_receiver::thread_tmp_10_fu_180_p3() {
    tmp_10_fu_180_p3 = last_on_V.read().range(1, 1);
}

void rc_receiver::thread_tmp_11_fu_220_p3() {
    tmp_11_fu_220_p3 = channels_V.read().range(2, 2);
}

void rc_receiver::thread_tmp_12_fu_242_p3() {
    tmp_12_fu_242_p3 = last_on_V.read().range(2, 2);
}

void rc_receiver::thread_tmp_13_fu_282_p3() {
    tmp_13_fu_282_p3 = channels_V.read().range(3, 3);
}

void rc_receiver::thread_tmp_14_fu_304_p3() {
    tmp_14_fu_304_p3 = last_on_V.read().range(3, 3);
}

void rc_receiver::thread_tmp_15_fu_344_p3() {
    tmp_15_fu_344_p3 = channels_V.read().range(4, 4);
}

void rc_receiver::thread_tmp_16_fu_366_p3() {
    tmp_16_fu_366_p3 = last_on_V.read().range(4, 4);
}

void rc_receiver::thread_tmp_17_fu_406_p3() {
    tmp_17_fu_406_p3 = channels_V.read().range(5, 5);
}

void rc_receiver::thread_tmp_18_fu_428_p3() {
    tmp_18_fu_428_p3 = last_on_V.read().range(5, 5);
}

void rc_receiver::thread_tmp_1_fu_100_p1() {
    tmp_1_fu_100_p1 = channels_V.read().range(1-1, 0);
}

void rc_receiver::thread_tmp_2_fu_122_p1() {
    tmp_2_fu_122_p1 = last_on_V.read().range(1-1, 0);
}

void rc_receiver::thread_tmp_3_fu_646_p3() {
    tmp_3_fu_646_p3 = esl_concat<3,1>(p_write_to_1_4_reg_744.read(), ap_const_lv1_0);
}

void rc_receiver::thread_tmp_4_fu_653_p1() {
    tmp_4_fu_653_p1 = esl_zext<64,4>(tmp_3_fu_646_p3.read());
}

void rc_receiver::thread_tmp_5_1_fu_166_p2() {
    tmp_5_1_fu_166_p2 = (!ap_const_lv32_1.is_01() || !p_acc_loc_fu_150_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(p_acc_loc_fu_150_p3.read()));
}

void rc_receiver::thread_tmp_5_2_fu_228_p2() {
    tmp_5_2_fu_228_p2 = (!ap_const_lv32_1.is_01() || !p_acc_new_1_fu_212_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(p_acc_new_1_fu_212_p3.read()));
}

void rc_receiver::thread_tmp_5_3_fu_290_p2() {
    tmp_5_3_fu_290_p2 = (!ap_const_lv32_1.is_01() || !p_acc_new_3_fu_274_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(p_acc_new_3_fu_274_p3.read()));
}

void rc_receiver::thread_tmp_5_4_fu_352_p2() {
    tmp_5_4_fu_352_p2 = (!ap_const_lv32_1.is_01() || !p_acc_new_5_fu_336_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(p_acc_new_5_fu_336_p3.read()));
}

void rc_receiver::thread_tmp_5_5_fu_414_p2() {
    tmp_5_5_fu_414_p2 = (!ap_const_lv32_1.is_01() || !p_acc_new_7_fu_398_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(p_acc_new_7_fu_398_p3.read()));
}

void rc_receiver::thread_tmp_5_fu_108_p2() {
    tmp_5_fu_108_p2 = (!ap_const_lv32_1.is_01() || !acc.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(acc.read()));
}

void rc_receiver::thread_tmp_6_1_fu_188_p2() {
    tmp_6_1_fu_188_p2 = (tmp_8_fu_158_p3.read() ^ ap_const_lv1_1);
}

void rc_receiver::thread_tmp_6_2_fu_250_p2() {
    tmp_6_2_fu_250_p2 = (tmp_11_fu_220_p3.read() ^ ap_const_lv1_1);
}

void rc_receiver::thread_tmp_6_3_fu_312_p2() {
    tmp_6_3_fu_312_p2 = (tmp_13_fu_282_p3.read() ^ ap_const_lv1_1);
}

void rc_receiver::thread_tmp_6_4_fu_374_p2() {
    tmp_6_4_fu_374_p2 = (tmp_15_fu_344_p3.read() ^ ap_const_lv1_1);
}

void rc_receiver::thread_tmp_6_5_fu_436_p2() {
    tmp_6_5_fu_436_p2 = (tmp_17_fu_406_p3.read() ^ ap_const_lv1_1);
}

void rc_receiver::thread_tmp_6_fu_126_p2() {
    tmp_6_fu_126_p2 = (tmp_1_fu_100_p1.read() ^ ap_const_lv1_1);
}

void rc_receiver::thread_tmp_7_1_fu_194_p2() {
    tmp_7_1_fu_194_p2 = (tmp_10_fu_180_p3.read() & tmp_6_1_fu_188_p2.read());
}

void rc_receiver::thread_tmp_7_2_fu_256_p2() {
    tmp_7_2_fu_256_p2 = (tmp_12_fu_242_p3.read() & tmp_6_2_fu_250_p2.read());
}

void rc_receiver::thread_tmp_7_3_fu_318_p2() {
    tmp_7_3_fu_318_p2 = (tmp_14_fu_304_p3.read() & tmp_6_3_fu_312_p2.read());
}

void rc_receiver::thread_tmp_7_4_fu_380_p2() {
    tmp_7_4_fu_380_p2 = (tmp_16_fu_366_p3.read() & tmp_6_4_fu_374_p2.read());
}

void rc_receiver::thread_tmp_7_5_fu_442_p2() {
    tmp_7_5_fu_442_p2 = (tmp_18_fu_428_p3.read() & tmp_6_5_fu_436_p2.read());
}

void rc_receiver::thread_tmp_7_fu_132_p2() {
    tmp_7_fu_132_p2 = (tmp_2_fu_122_p1.read() & tmp_6_fu_126_p2.read());
}

void rc_receiver::thread_tmp_8_fu_158_p3() {
    tmp_8_fu_158_p3 = channels_V.read().range(1, 1);
}

void rc_receiver::thread_tmp_9_1_fu_200_p2() {
    tmp_9_1_fu_200_p2 = (!acc_new_1_fu_172_p3.read().is_01() || !ap_const_lv32_A.is_01())? sc_lv<1>(): (sc_biguint<32>(acc_new_1_fu_172_p3.read()) > sc_biguint<32>(ap_const_lv32_A));
}

void rc_receiver::thread_tmp_9_2_fu_262_p2() {
    tmp_9_2_fu_262_p2 = (!acc_new_3_fu_234_p3.read().is_01() || !ap_const_lv32_A.is_01())? sc_lv<1>(): (sc_biguint<32>(acc_new_3_fu_234_p3.read()) > sc_biguint<32>(ap_const_lv32_A));
}

void rc_receiver::thread_tmp_9_3_fu_324_p2() {
    tmp_9_3_fu_324_p2 = (!acc_new_5_fu_296_p3.read().is_01() || !ap_const_lv32_A.is_01())? sc_lv<1>(): (sc_biguint<32>(acc_new_5_fu_296_p3.read()) > sc_biguint<32>(ap_const_lv32_A));
}

void rc_receiver::thread_tmp_9_4_fu_386_p2() {
    tmp_9_4_fu_386_p2 = (!acc_new_7_fu_358_p3.read().is_01() || !ap_const_lv32_A.is_01())? sc_lv<1>(): (sc_biguint<32>(acc_new_7_fu_358_p3.read()) > sc_biguint<32>(ap_const_lv32_A));
}

void rc_receiver::thread_tmp_9_5_fu_448_p2() {
    tmp_9_5_fu_448_p2 = (!acc_new_9_fu_420_p3.read().is_01() || !ap_const_lv32_A.is_01())? sc_lv<1>(): (sc_biguint<32>(acc_new_9_fu_420_p3.read()) > sc_biguint<32>(ap_const_lv32_A));
}

void rc_receiver::thread_tmp_9_fu_138_p2() {
    tmp_9_fu_138_p2 = (!acc_loc_fu_114_p3.read().is_01() || !ap_const_lv32_A.is_01())? sc_lv<1>(): (sc_biguint<32>(acc_loc_fu_114_p3.read()) > sc_biguint<32>(ap_const_lv32_A));
}

void rc_receiver::thread_tmp_fu_574_p2() {
    tmp_fu_574_p2 = (or_cond_3_reg_704.read() | or_cond_2_reg_692.read());
}

void rc_receiver::thread_tmp_s_fu_609_p2() {
    tmp_s_fu_609_p2 = (or_cond_5_reg_728.read() | or_cond_4_reg_717.read());
}

void rc_receiver::thread_write_val_2_1_write_s_fu_555_p3() {
    write_val_2_1_write_s_fu_555_p3 = (!or_cond_1_reg_680.read()[0].is_01())? sc_lv<32>(): ((or_cond_1_reg_680.read()[0].to_bool())? acc_new_1_reg_675.read(): acc_loc_s_fu_546_p3.read());
}

void rc_receiver::thread_write_val_2_2_write_s_fu_561_p3() {
    write_val_2_2_write_s_fu_561_p3 = (!or_cond_2_reg_692.read()[0].is_01())? sc_lv<32>(): ((or_cond_2_reg_692.read()[0].to_bool())? acc_new_3_reg_687.read(): write_val_2_1_write_s_fu_555_p3.read());
}

void rc_receiver::thread_write_val_2_3_write_s_fu_590_p3() {
    write_val_2_3_write_s_fu_590_p3 = (!or_cond_3_reg_704.read()[0].is_01())? sc_lv<32>(): ((or_cond_3_reg_704.read()[0].to_bool())? acc_new_5_reg_699.read(): write_val_2_2_write_s_fu_561_p3.read());
}

void rc_receiver::thread_write_val_2_4_write_s_fu_596_p3() {
    write_val_2_4_write_s_fu_596_p3 = (!or_cond_4_reg_717.read()[0].is_01())? sc_lv<32>(): ((or_cond_4_reg_717.read()[0].to_bool())? acc_new_7_reg_712.read(): write_val_2_3_write_s_fu_590_p3.read());
}

void rc_receiver::thread_write_val_2_5_write_s_fu_641_p3() {
    write_val_2_5_write_s_fu_641_p3 = (!ap_reg_pp0_iter1_or_cond_5_reg_728.read()[0].is_01())? sc_lv<32>(): ((ap_reg_pp0_iter1_or_cond_5_reg_728.read()[0].to_bool())? ap_reg_pp0_iter1_acc_new_9_reg_723.read(): write_val_2_4_write_s_reg_739.read());
}

void rc_receiver::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

void rc_receiver::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_norm_out_AWVALID\" :  \"" << m_axi_norm_out_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_norm_out_AWREADY\" :  \"" << m_axi_norm_out_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_AWADDR\" :  \"" << m_axi_norm_out_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_AWID\" :  \"" << m_axi_norm_out_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_AWLEN\" :  \"" << m_axi_norm_out_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_AWSIZE\" :  \"" << m_axi_norm_out_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_AWBURST\" :  \"" << m_axi_norm_out_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_AWLOCK\" :  \"" << m_axi_norm_out_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_AWCACHE\" :  \"" << m_axi_norm_out_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_AWPROT\" :  \"" << m_axi_norm_out_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_AWQOS\" :  \"" << m_axi_norm_out_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_AWREGION\" :  \"" << m_axi_norm_out_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_AWUSER\" :  \"" << m_axi_norm_out_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_WVALID\" :  \"" << m_axi_norm_out_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_norm_out_WREADY\" :  \"" << m_axi_norm_out_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_WDATA\" :  \"" << m_axi_norm_out_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_WSTRB\" :  \"" << m_axi_norm_out_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_WLAST\" :  \"" << m_axi_norm_out_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_WID\" :  \"" << m_axi_norm_out_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_WUSER\" :  \"" << m_axi_norm_out_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_ARVALID\" :  \"" << m_axi_norm_out_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_norm_out_ARREADY\" :  \"" << m_axi_norm_out_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_ARADDR\" :  \"" << m_axi_norm_out_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_ARID\" :  \"" << m_axi_norm_out_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_ARLEN\" :  \"" << m_axi_norm_out_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_ARSIZE\" :  \"" << m_axi_norm_out_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_ARBURST\" :  \"" << m_axi_norm_out_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_ARLOCK\" :  \"" << m_axi_norm_out_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_ARCACHE\" :  \"" << m_axi_norm_out_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_ARPROT\" :  \"" << m_axi_norm_out_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_ARQOS\" :  \"" << m_axi_norm_out_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_ARREGION\" :  \"" << m_axi_norm_out_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_ARUSER\" :  \"" << m_axi_norm_out_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_norm_out_RVALID\" :  \"" << m_axi_norm_out_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_RREADY\" :  \"" << m_axi_norm_out_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_norm_out_RDATA\" :  \"" << m_axi_norm_out_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_norm_out_RLAST\" :  \"" << m_axi_norm_out_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_norm_out_RID\" :  \"" << m_axi_norm_out_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_norm_out_RUSER\" :  \"" << m_axi_norm_out_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_norm_out_RRESP\" :  \"" << m_axi_norm_out_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_norm_out_BVALID\" :  \"" << m_axi_norm_out_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_norm_out_BREADY\" :  \"" << m_axi_norm_out_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_norm_out_BRESP\" :  \"" << m_axi_norm_out_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_norm_out_BID\" :  \"" << m_axi_norm_out_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_norm_out_BUSER\" :  \"" << m_axi_norm_out_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"channels_V\" :  \"" << channels_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_AWVALID\" :  \"" << s_axi_in_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_in_AWREADY\" :  \"" << s_axi_in_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_AWADDR\" :  \"" << s_axi_in_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_WVALID\" :  \"" << s_axi_in_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_in_WREADY\" :  \"" << s_axi_in_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_WDATA\" :  \"" << s_axi_in_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_WSTRB\" :  \"" << s_axi_in_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_ARVALID\" :  \"" << s_axi_in_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_in_ARREADY\" :  \"" << s_axi_in_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_ARADDR\" :  \"" << s_axi_in_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_in_RVALID\" :  \"" << s_axi_in_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_RREADY\" :  \"" << s_axi_in_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_in_RDATA\" :  \"" << s_axi_in_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_in_RRESP\" :  \"" << s_axi_in_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_in_BVALID\" :  \"" << s_axi_in_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_in_BREADY\" :  \"" << s_axi_in_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_in_BRESP\" :  \"" << s_axi_in_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

