// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pidfixed.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pidfixed::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pidfixed::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<35> pidfixed::ap_ST_fsm_state1 = "1";
const sc_lv<35> pidfixed::ap_ST_fsm_state2 = "10";
const sc_lv<35> pidfixed::ap_ST_fsm_state3 = "100";
const sc_lv<35> pidfixed::ap_ST_fsm_state4 = "1000";
const sc_lv<35> pidfixed::ap_ST_fsm_state5 = "10000";
const sc_lv<35> pidfixed::ap_ST_fsm_state6 = "100000";
const sc_lv<35> pidfixed::ap_ST_fsm_state7 = "1000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state8 = "10000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state9 = "100000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state10 = "1000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state11 = "10000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state12 = "100000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<35> pidfixed::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<32> pidfixed::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<16> pidfixed::ap_const_lv16_0 = "0000000000000000";
const int pidfixed::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> pidfixed::ap_const_lv32_1 = "1";
const sc_lv<32> pidfixed::ap_const_lv32_2 = "10";
const sc_lv<32> pidfixed::ap_const_lv32_3 = "11";
const sc_lv<32> pidfixed::ap_const_lv32_4 = "100";
const sc_lv<32> pidfixed::ap_const_lv32_A = "1010";
const sc_lv<32> pidfixed::ap_const_lv32_B = "1011";
const sc_lv<32> pidfixed::ap_const_lv32_1D = "11101";
const sc_lv<32> pidfixed::ap_const_lv32_1E = "11110";
const sc_lv<32> pidfixed::ap_const_lv32_20 = "100000";
const sc_lv<32> pidfixed::ap_const_lv32_21 = "100001";
const sc_lv<32> pidfixed::ap_const_lv32_22 = "100010";
const sc_lv<7> pidfixed::ap_const_lv7_0 = "0000000";
const sc_lv<32> pidfixed::ap_const_lv32_7 = "111";
const sc_lv<32> pidfixed::ap_const_lv32_16 = "10110";
const sc_lv<14> pidfixed::ap_const_lv14_0 = "00000000000000";
const sc_lv<32> pidfixed::ap_const_lv32_E = "1110";
const bool pidfixed::ap_const_boolean_1 = true;

pidfixed::pidfixed(sc_module_name name) : sc_module(name), mVcdFile(0) {
    pidfixed_CTRL_s_axi_U = new pidfixed_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>("pidfixed_CTRL_s_axi_U");
    pidfixed_CTRL_s_axi_U->AWVALID(s_axi_CTRL_AWVALID);
    pidfixed_CTRL_s_axi_U->AWREADY(s_axi_CTRL_AWREADY);
    pidfixed_CTRL_s_axi_U->AWADDR(s_axi_CTRL_AWADDR);
    pidfixed_CTRL_s_axi_U->WVALID(s_axi_CTRL_WVALID);
    pidfixed_CTRL_s_axi_U->WREADY(s_axi_CTRL_WREADY);
    pidfixed_CTRL_s_axi_U->WDATA(s_axi_CTRL_WDATA);
    pidfixed_CTRL_s_axi_U->WSTRB(s_axi_CTRL_WSTRB);
    pidfixed_CTRL_s_axi_U->ARVALID(s_axi_CTRL_ARVALID);
    pidfixed_CTRL_s_axi_U->ARREADY(s_axi_CTRL_ARREADY);
    pidfixed_CTRL_s_axi_U->ARADDR(s_axi_CTRL_ARADDR);
    pidfixed_CTRL_s_axi_U->RVALID(s_axi_CTRL_RVALID);
    pidfixed_CTRL_s_axi_U->RREADY(s_axi_CTRL_RREADY);
    pidfixed_CTRL_s_axi_U->RDATA(s_axi_CTRL_RDATA);
    pidfixed_CTRL_s_axi_U->RRESP(s_axi_CTRL_RRESP);
    pidfixed_CTRL_s_axi_U->BVALID(s_axi_CTRL_BVALID);
    pidfixed_CTRL_s_axi_U->BREADY(s_axi_CTRL_BREADY);
    pidfixed_CTRL_s_axi_U->BRESP(s_axi_CTRL_BRESP);
    pidfixed_CTRL_s_axi_U->ACLK(ap_clk);
    pidfixed_CTRL_s_axi_U->ARESET(ap_rst_n_inv);
    pidfixed_CTRL_s_axi_U->ACLK_EN(ap_var_for_const0);
    pidfixed_CTRL_s_axi_U->ap_start(ap_start);
    pidfixed_CTRL_s_axi_U->interrupt(interrupt);
    pidfixed_CTRL_s_axi_U->ap_ready(ap_ready);
    pidfixed_CTRL_s_axi_U->ap_done(ap_done);
    pidfixed_CTRL_s_axi_U->ap_idle(ap_idle);
    pidfixed_CTRL_s_axi_U->target_roll_V(target_roll_V);
    pidfixed_CTRL_s_axi_U->current_roll_V(current_roll_V);
    pidfixed_CTRL_s_axi_U->Kp_roll_V(Kp_roll_V);
    pidfixed_CTRL_s_axi_U->Ki_roll_V(Ki_roll_V);
    pidfixed_CTRL_s_axi_U->Kd_roll_V(Kd_roll_V);
    pidfixed_CTRL_s_axi_U->target_pitch_V(target_pitch_V);
    pidfixed_CTRL_s_axi_U->current_pitch_V(current_pitch_V);
    pidfixed_CTRL_s_axi_U->Kp_pitch_V(Kp_pitch_V);
    pidfixed_CTRL_s_axi_U->Ki_pitch_V(Ki_pitch_V);
    pidfixed_CTRL_s_axi_U->Kd_pitch_V(Kd_pitch_V);
    pidfixed_CTRL_s_axi_U->target_yaw_V(target_yaw_V);
    pidfixed_CTRL_s_axi_U->current_yaw_V(current_yaw_V);
    pidfixed_CTRL_s_axi_U->Kp_yaw_V(Kp_yaw_V);
    pidfixed_CTRL_s_axi_U->Ki_yaw_V(Ki_yaw_V);
    pidfixed_CTRL_s_axi_U->Kd_yaw_V(Kd_yaw_V);
    pidfixed_CTRL_s_axi_U->dt_V(dt_V);
    pidfixed_CTRL_s_axi_U->rollX_V(p_Val2_27_reg_1032);
    pidfixed_CTRL_s_axi_U->rollX_V_ap_vld(rollX_V_ap_vld);
    pidfixed_CTRL_s_axi_U->pitchY_V(p_Val2_s_6_reg_1037);
    pidfixed_CTRL_s_axi_U->pitchY_V_ap_vld(pitchY_V_ap_vld);
    pidfixed_CTRL_s_axi_U->yawZ_V(p_Val2_31_reg_1042);
    pidfixed_CTRL_s_axi_U->yawZ_V_ap_vld(yawZ_V_ap_vld);
    pidfixed_sdiv_24nbkb_U1 = new pidfixed_sdiv_24nbkb<1,28,24,16,23>("pidfixed_sdiv_24nbkb_U1");
    pidfixed_sdiv_24nbkb_U1->clk(ap_clk);
    pidfixed_sdiv_24nbkb_U1->reset(ap_rst_n_inv);
    pidfixed_sdiv_24nbkb_U1->din0(grp_fu_377_p0);
    pidfixed_sdiv_24nbkb_U1->din1(grp_fu_377_p1);
    pidfixed_sdiv_24nbkb_U1->ce(ap_var_for_const0);
    pidfixed_sdiv_24nbkb_U1->dout(grp_fu_377_p2);
    pidfixed_sdiv_24nbkb_U2 = new pidfixed_sdiv_24nbkb<1,28,24,16,23>("pidfixed_sdiv_24nbkb_U2");
    pidfixed_sdiv_24nbkb_U2->clk(ap_clk);
    pidfixed_sdiv_24nbkb_U2->reset(ap_rst_n_inv);
    pidfixed_sdiv_24nbkb_U2->din0(grp_fu_390_p0);
    pidfixed_sdiv_24nbkb_U2->din1(grp_fu_390_p1);
    pidfixed_sdiv_24nbkb_U2->ce(ap_var_for_const0);
    pidfixed_sdiv_24nbkb_U2->dout(grp_fu_390_p2);
    pidfixed_sdiv_24nbkb_U3 = new pidfixed_sdiv_24nbkb<1,28,24,16,23>("pidfixed_sdiv_24nbkb_U3");
    pidfixed_sdiv_24nbkb_U3->clk(ap_clk);
    pidfixed_sdiv_24nbkb_U3->reset(ap_rst_n_inv);
    pidfixed_sdiv_24nbkb_U3->din0(grp_fu_403_p0);
    pidfixed_sdiv_24nbkb_U3->din1(grp_fu_403_p1);
    pidfixed_sdiv_24nbkb_U3->ce(ap_var_for_const0);
    pidfixed_sdiv_24nbkb_U3->dout(grp_fu_403_p2);
    pidfixed_mul_16s_cud_U4 = new pidfixed_mul_16s_cud<1,7,16,30,30>("pidfixed_mul_16s_cud_U4");
    pidfixed_mul_16s_cud_U4->clk(ap_clk);
    pidfixed_mul_16s_cud_U4->reset(ap_rst_n_inv);
    pidfixed_mul_16s_cud_U4->din0(grp_fu_427_p0);
    pidfixed_mul_16s_cud_U4->din1(r_V_reg_895);
    pidfixed_mul_16s_cud_U4->ce(ap_var_for_const0);
    pidfixed_mul_16s_cud_U4->dout(grp_fu_427_p2);
    pidfixed_mul_16s_cud_U5 = new pidfixed_mul_16s_cud<1,7,16,30,30>("pidfixed_mul_16s_cud_U5");
    pidfixed_mul_16s_cud_U5->clk(ap_clk);
    pidfixed_mul_16s_cud_U5->reset(ap_rst_n_inv);
    pidfixed_mul_16s_cud_U5->din0(grp_fu_447_p0);
    pidfixed_mul_16s_cud_U5->din1(r_V_2_reg_905);
    pidfixed_mul_16s_cud_U5->ce(ap_var_for_const0);
    pidfixed_mul_16s_cud_U5->dout(grp_fu_447_p2);
    pidfixed_mul_16s_cud_U6 = new pidfixed_mul_16s_cud<1,7,16,30,30>("pidfixed_mul_16s_cud_U6");
    pidfixed_mul_16s_cud_U6->clk(ap_clk);
    pidfixed_mul_16s_cud_U6->reset(ap_rst_n_inv);
    pidfixed_mul_16s_cud_U6->din0(grp_fu_467_p0);
    pidfixed_mul_16s_cud_U6->din1(r_V_4_reg_915);
    pidfixed_mul_16s_cud_U6->ce(ap_var_for_const0);
    pidfixed_mul_16s_cud_U6->dout(grp_fu_467_p2);
    pidfixed_mul_mul_dEe_U7 = new pidfixed_mul_mul_dEe<1,3,16,16,23>("pidfixed_mul_mul_dEe_U7");
    pidfixed_mul_mul_dEe_U7->clk(ap_clk);
    pidfixed_mul_mul_dEe_U7->reset(ap_rst_n_inv);
    pidfixed_mul_mul_dEe_U7->din0(p_Val2_2_reg_769);
    pidfixed_mul_mul_dEe_U7->din1(Kp_roll_V_read_reg_764);
    pidfixed_mul_mul_dEe_U7->ce(ap_var_for_const0);
    pidfixed_mul_mul_dEe_U7->dout(grp_fu_664_p2);
    pidfixed_mul_mul_eOg_U8 = new pidfixed_mul_mul_eOg<1,3,16,16,30>("pidfixed_mul_mul_eOg_U8");
    pidfixed_mul_mul_eOg_U8->clk(ap_clk);
    pidfixed_mul_mul_eOg_U8->reset(ap_rst_n_inv);
    pidfixed_mul_mul_eOg_U8->din0(p_Val2_2_reg_769);
    pidfixed_mul_mul_eOg_U8->din1(Ki_roll_V_read_reg_759);
    pidfixed_mul_mul_eOg_U8->ce(ap_var_for_const0);
    pidfixed_mul_mul_eOg_U8->dout(grp_fu_670_p2);
    pidfixed_mul_mul_dEe_U9 = new pidfixed_mul_mul_dEe<1,3,16,16,23>("pidfixed_mul_mul_dEe_U9");
    pidfixed_mul_mul_dEe_U9->clk(ap_clk);
    pidfixed_mul_mul_dEe_U9->reset(ap_rst_n_inv);
    pidfixed_mul_mul_dEe_U9->din0(p_Val2_8_reg_777);
    pidfixed_mul_mul_dEe_U9->din1(Kp_pitch_V_read_reg_749);
    pidfixed_mul_mul_dEe_U9->ce(ap_var_for_const0);
    pidfixed_mul_mul_dEe_U9->dout(grp_fu_676_p2);
    pidfixed_mul_mul_eOg_U10 = new pidfixed_mul_mul_eOg<1,3,16,16,30>("pidfixed_mul_mul_eOg_U10");
    pidfixed_mul_mul_eOg_U10->clk(ap_clk);
    pidfixed_mul_mul_eOg_U10->reset(ap_rst_n_inv);
    pidfixed_mul_mul_eOg_U10->din0(p_Val2_8_reg_777);
    pidfixed_mul_mul_eOg_U10->din1(Ki_pitch_V_read_reg_744);
    pidfixed_mul_mul_eOg_U10->ce(ap_var_for_const0);
    pidfixed_mul_mul_eOg_U10->dout(grp_fu_682_p2);
    pidfixed_mul_mul_dEe_U11 = new pidfixed_mul_mul_dEe<1,3,16,16,23>("pidfixed_mul_mul_dEe_U11");
    pidfixed_mul_mul_dEe_U11->clk(ap_clk);
    pidfixed_mul_mul_dEe_U11->reset(ap_rst_n_inv);
    pidfixed_mul_mul_dEe_U11->din0(p_Val2_18_reg_785);
    pidfixed_mul_mul_dEe_U11->din1(Kp_yaw_V_read_reg_734);
    pidfixed_mul_mul_dEe_U11->ce(ap_var_for_const0);
    pidfixed_mul_mul_dEe_U11->dout(grp_fu_688_p2);
    pidfixed_mul_mul_eOg_U12 = new pidfixed_mul_mul_eOg<1,3,16,16,30>("pidfixed_mul_mul_eOg_U12");
    pidfixed_mul_mul_eOg_U12->clk(ap_clk);
    pidfixed_mul_mul_eOg_U12->reset(ap_rst_n_inv);
    pidfixed_mul_mul_eOg_U12->din0(p_Val2_18_reg_785);
    pidfixed_mul_mul_eOg_U12->din1(Ki_yaw_V_read_reg_729);
    pidfixed_mul_mul_eOg_U12->ce(ap_var_for_const0);
    pidfixed_mul_mul_eOg_U12->dout(grp_fu_694_p2);
    pidfixed_mul_mul_fYi_U13 = new pidfixed_mul_mul_fYi<1,3,16,23,23>("pidfixed_mul_mul_fYi_U13");
    pidfixed_mul_mul_fYi_U13->clk(ap_clk);
    pidfixed_mul_mul_fYi_U13->reset(ap_rst_n_inv);
    pidfixed_mul_mul_fYi_U13->din0(Kd_roll_V_read_reg_754);
    pidfixed_mul_mul_fYi_U13->din1(grp_fu_700_p1);
    pidfixed_mul_mul_fYi_U13->ce(ap_var_for_const0);
    pidfixed_mul_mul_fYi_U13->dout(grp_fu_700_p2);
    pidfixed_mul_mul_fYi_U14 = new pidfixed_mul_mul_fYi<1,3,16,23,23>("pidfixed_mul_mul_fYi_U14");
    pidfixed_mul_mul_fYi_U14->clk(ap_clk);
    pidfixed_mul_mul_fYi_U14->reset(ap_rst_n_inv);
    pidfixed_mul_mul_fYi_U14->din0(Kd_pitch_V_read_reg_739);
    pidfixed_mul_mul_fYi_U14->din1(grp_fu_706_p1);
    pidfixed_mul_mul_fYi_U14->ce(ap_var_for_const0);
    pidfixed_mul_mul_fYi_U14->dout(grp_fu_706_p2);
    pidfixed_mul_mul_fYi_U15 = new pidfixed_mul_mul_fYi<1,3,16,23,23>("pidfixed_mul_mul_fYi_U15");
    pidfixed_mul_mul_fYi_U15->clk(ap_clk);
    pidfixed_mul_mul_fYi_U15->reset(ap_rst_n_inv);
    pidfixed_mul_mul_fYi_U15->din0(Kd_yaw_V_read_reg_724);
    pidfixed_mul_mul_fYi_U15->din1(grp_fu_712_p1);
    pidfixed_mul_mul_fYi_U15->ce(ap_var_for_const0);
    pidfixed_mul_mul_fYi_U15->dout(grp_fu_712_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_grp_fu_377_p0);
    sensitive << ( p_Val2_6_reg_813 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_fu_377_p1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_11_tr_cast_fu_374_p1 );

    SC_METHOD(thread_grp_fu_390_p0);
    sensitive << ( p_Val2_16_reg_838 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_fu_390_p1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_11_tr_cast_fu_374_p1 );

    SC_METHOD(thread_grp_fu_403_p0);
    sensitive << ( p_Val2_24_reg_863 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_fu_403_p1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_11_tr_cast_fu_374_p1 );

    SC_METHOD(thread_grp_fu_427_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_1_fu_424_p1 );

    SC_METHOD(thread_grp_fu_447_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_1_fu_424_p1 );

    SC_METHOD(thread_grp_fu_467_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_1_fu_424_p1 );

    SC_METHOD(thread_grp_fu_700_p1);
    sensitive << ( r_V_1_reg_972 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_grp_fu_706_p1);
    sensitive << ( r_V_3_reg_977 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_grp_fu_712_p1);
    sensitive << ( r_V_5_reg_982 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_p_Val2_13_fu_517_p2);
    sensitive << ( tmp_13_cast_reg_947 );
    sensitive << ( tmp_s_fu_509_p3 );

    SC_METHOD(thread_p_Val2_16_fu_322_p2);
    sensitive << ( tmp_3_fu_311_p1 );
    sensitive << ( tmp_4_fu_318_p1 );

    SC_METHOD(thread_p_Val2_18_fu_253_p2);
    sensitive << ( target_yaw_V );
    sensitive << ( current_yaw_V );

    SC_METHOD(thread_p_Val2_20_fu_604_p4);
    sensitive << ( p_Val2_17_reg_1022 );

    SC_METHOD(thread_p_Val2_22_fu_550_p2);
    sensitive << ( tmp_23_cast_reg_952 );
    sensitive << ( tmp_8_fu_542_p3 );

    SC_METHOD(thread_p_Val2_24_fu_356_p2);
    sensitive << ( tmp_10_fu_345_p1 );
    sensitive << ( tmp_11_fu_352_p1 );

    SC_METHOD(thread_p_Val2_27_fu_639_p2);
    sensitive << ( p_Val2_5_reg_957 );
    sensitive << ( tmp_fu_634_p2 );

    SC_METHOD(thread_p_Val2_29_fu_619_p4);
    sensitive << ( p_Val2_25_reg_1027 );

    SC_METHOD(thread_p_Val2_2_fu_229_p2);
    sensitive << ( target_roll_V );
    sensitive << ( current_roll_V );

    SC_METHOD(thread_p_Val2_31_fu_659_p2);
    sensitive << ( p_Val2_28_reg_967 );
    sensitive << ( tmp2_fu_654_p2 );

    SC_METHOD(thread_p_Val2_3_fu_484_p2);
    sensitive << ( tmp_1_cast_reg_942 );
    sensitive << ( tmp_2_fu_476_p3 );

    SC_METHOD(thread_p_Val2_6_fu_288_p2);
    sensitive << ( tmp_6_fu_277_p1 );
    sensitive << ( tmp_7_fu_284_p1 );

    SC_METHOD(thread_p_Val2_8_fu_241_p2);
    sensitive << ( target_pitch_V );
    sensitive << ( current_pitch_V );

    SC_METHOD(thread_p_Val2_9_fu_589_p4);
    sensitive << ( p_Val2_7_reg_1017 );

    SC_METHOD(thread_p_Val2_s_6_fu_649_p2);
    sensitive << ( p_Val2_14_reg_962 );
    sensitive << ( tmp1_fu_644_p2 );

    SC_METHOD(thread_pitchY_V_ap_vld);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_rollX_V_ap_vld);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_tmp1_fu_644_p2);
    sensitive << ( p_Val2_11_reg_932 );
    sensitive << ( p_Val2_20_fu_604_p4 );

    SC_METHOD(thread_tmp2_fu_654_p2);
    sensitive << ( p_Val2_26_reg_937 );
    sensitive << ( p_Val2_29_fu_619_p4 );

    SC_METHOD(thread_tmp_10_fu_345_p1);
    sensitive << ( p_Val2_18_reg_785 );

    SC_METHOD(thread_tmp_11_fu_352_p1);
    sensitive << ( previous_error_yaw_V );

    SC_METHOD(thread_tmp_11_tr_cast_fu_374_p1);
    sensitive << ( dt_V_read_reg_718 );

    SC_METHOD(thread_tmp_1_fu_424_p1);
    sensitive << ( dt_V_read_reg_718 );

    SC_METHOD(thread_tmp_2_fu_476_p3);
    sensitive << ( integral_roll_V );

    SC_METHOD(thread_tmp_3_fu_311_p1);
    sensitive << ( p_Val2_8_reg_777 );

    SC_METHOD(thread_tmp_4_fu_318_p1);
    sensitive << ( previous_error_pitch );

    SC_METHOD(thread_tmp_6_fu_277_p1);
    sensitive << ( p_Val2_2_reg_769 );

    SC_METHOD(thread_tmp_7_fu_284_p1);
    sensitive << ( previous_error_roll_s );

    SC_METHOD(thread_tmp_8_fu_542_p3);
    sensitive << ( integral_yaw_V );

    SC_METHOD(thread_tmp_fu_634_p2);
    sensitive << ( p_Val2_30_reg_920 );
    sensitive << ( p_Val2_9_fu_589_p4 );

    SC_METHOD(thread_tmp_s_fu_509_p3);
    sensitive << ( integral_pitch_V );

    SC_METHOD(thread_yawZ_V_ap_vld);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000000000000000001";
    integral_roll_V = "0000000000000000";
    previous_error_roll_s = "0000000000000000";
    integral_pitch_V = "0000000000000000";
    previous_error_pitch = "0000000000000000";
    integral_yaw_V = "0000000000000000";
    previous_error_yaw_V = "0000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pidfixed_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_CTRL_AWVALID, "(port)s_axi_CTRL_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_AWREADY, "(port)s_axi_CTRL_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_AWADDR, "(port)s_axi_CTRL_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_WVALID, "(port)s_axi_CTRL_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_WREADY, "(port)s_axi_CTRL_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_WDATA, "(port)s_axi_CTRL_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_WSTRB, "(port)s_axi_CTRL_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_ARVALID, "(port)s_axi_CTRL_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_ARREADY, "(port)s_axi_CTRL_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_ARADDR, "(port)s_axi_CTRL_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_RVALID, "(port)s_axi_CTRL_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_RREADY, "(port)s_axi_CTRL_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_RDATA, "(port)s_axi_CTRL_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_RRESP, "(port)s_axi_CTRL_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BVALID, "(port)s_axi_CTRL_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BREADY, "(port)s_axi_CTRL_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BRESP, "(port)s_axi_CTRL_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, target_roll_V, "target_roll_V");
    sc_trace(mVcdFile, current_roll_V, "current_roll_V");
    sc_trace(mVcdFile, Kp_roll_V, "Kp_roll_V");
    sc_trace(mVcdFile, Ki_roll_V, "Ki_roll_V");
    sc_trace(mVcdFile, Kd_roll_V, "Kd_roll_V");
    sc_trace(mVcdFile, target_pitch_V, "target_pitch_V");
    sc_trace(mVcdFile, current_pitch_V, "current_pitch_V");
    sc_trace(mVcdFile, Kp_pitch_V, "Kp_pitch_V");
    sc_trace(mVcdFile, Ki_pitch_V, "Ki_pitch_V");
    sc_trace(mVcdFile, Kd_pitch_V, "Kd_pitch_V");
    sc_trace(mVcdFile, target_yaw_V, "target_yaw_V");
    sc_trace(mVcdFile, current_yaw_V, "current_yaw_V");
    sc_trace(mVcdFile, Kp_yaw_V, "Kp_yaw_V");
    sc_trace(mVcdFile, Ki_yaw_V, "Ki_yaw_V");
    sc_trace(mVcdFile, Kd_yaw_V, "Kd_yaw_V");
    sc_trace(mVcdFile, dt_V, "dt_V");
    sc_trace(mVcdFile, rollX_V_ap_vld, "rollX_V_ap_vld");
    sc_trace(mVcdFile, pitchY_V_ap_vld, "pitchY_V_ap_vld");
    sc_trace(mVcdFile, yawZ_V_ap_vld, "yawZ_V_ap_vld");
    sc_trace(mVcdFile, integral_roll_V, "integral_roll_V");
    sc_trace(mVcdFile, previous_error_roll_s, "previous_error_roll_s");
    sc_trace(mVcdFile, integral_pitch_V, "integral_pitch_V");
    sc_trace(mVcdFile, previous_error_pitch, "previous_error_pitch");
    sc_trace(mVcdFile, integral_yaw_V, "integral_yaw_V");
    sc_trace(mVcdFile, previous_error_yaw_V, "previous_error_yaw_V");
    sc_trace(mVcdFile, dt_V_read_reg_718, "dt_V_read_reg_718");
    sc_trace(mVcdFile, Kd_yaw_V_read_reg_724, "Kd_yaw_V_read_reg_724");
    sc_trace(mVcdFile, Ki_yaw_V_read_reg_729, "Ki_yaw_V_read_reg_729");
    sc_trace(mVcdFile, Kp_yaw_V_read_reg_734, "Kp_yaw_V_read_reg_734");
    sc_trace(mVcdFile, Kd_pitch_V_read_reg_739, "Kd_pitch_V_read_reg_739");
    sc_trace(mVcdFile, Ki_pitch_V_read_reg_744, "Ki_pitch_V_read_reg_744");
    sc_trace(mVcdFile, Kp_pitch_V_read_reg_749, "Kp_pitch_V_read_reg_749");
    sc_trace(mVcdFile, Kd_roll_V_read_reg_754, "Kd_roll_V_read_reg_754");
    sc_trace(mVcdFile, Ki_roll_V_read_reg_759, "Ki_roll_V_read_reg_759");
    sc_trace(mVcdFile, Kp_roll_V_read_reg_764, "Kp_roll_V_read_reg_764");
    sc_trace(mVcdFile, p_Val2_2_fu_229_p2, "p_Val2_2_fu_229_p2");
    sc_trace(mVcdFile, p_Val2_2_reg_769, "p_Val2_2_reg_769");
    sc_trace(mVcdFile, p_Val2_8_fu_241_p2, "p_Val2_8_fu_241_p2");
    sc_trace(mVcdFile, p_Val2_8_reg_777, "p_Val2_8_reg_777");
    sc_trace(mVcdFile, p_Val2_18_fu_253_p2, "p_Val2_18_fu_253_p2");
    sc_trace(mVcdFile, p_Val2_18_reg_785, "p_Val2_18_reg_785");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, p_Val2_6_fu_288_p2, "p_Val2_6_fu_288_p2");
    sc_trace(mVcdFile, p_Val2_6_reg_813, "p_Val2_6_reg_813");
    sc_trace(mVcdFile, p_Val2_16_fu_322_p2, "p_Val2_16_fu_322_p2");
    sc_trace(mVcdFile, p_Val2_16_reg_838, "p_Val2_16_reg_838");
    sc_trace(mVcdFile, p_Val2_24_fu_356_p2, "p_Val2_24_fu_356_p2");
    sc_trace(mVcdFile, p_Val2_24_reg_863, "p_Val2_24_reg_863");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_11_tr_cast_fu_374_p1, "tmp_11_tr_cast_fu_374_p1");
    sc_trace(mVcdFile, grp_fu_664_p2, "grp_fu_664_p2");
    sc_trace(mVcdFile, p_Val2_s_reg_890, "p_Val2_s_reg_890");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_fu_670_p2, "grp_fu_670_p2");
    sc_trace(mVcdFile, r_V_reg_895, "r_V_reg_895");
    sc_trace(mVcdFile, grp_fu_676_p2, "grp_fu_676_p2");
    sc_trace(mVcdFile, p_Val2_10_reg_900, "p_Val2_10_reg_900");
    sc_trace(mVcdFile, grp_fu_682_p2, "grp_fu_682_p2");
    sc_trace(mVcdFile, r_V_2_reg_905, "r_V_2_reg_905");
    sc_trace(mVcdFile, grp_fu_688_p2, "grp_fu_688_p2");
    sc_trace(mVcdFile, p_Val2_19_reg_910, "p_Val2_19_reg_910");
    sc_trace(mVcdFile, grp_fu_694_p2, "grp_fu_694_p2");
    sc_trace(mVcdFile, r_V_4_reg_915, "r_V_4_reg_915");
    sc_trace(mVcdFile, p_Val2_30_reg_920, "p_Val2_30_reg_920");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_1_fu_424_p1, "tmp_1_fu_424_p1");
    sc_trace(mVcdFile, p_Val2_11_reg_932, "p_Val2_11_reg_932");
    sc_trace(mVcdFile, p_Val2_26_reg_937, "p_Val2_26_reg_937");
    sc_trace(mVcdFile, grp_fu_427_p2, "grp_fu_427_p2");
    sc_trace(mVcdFile, tmp_1_cast_reg_942, "tmp_1_cast_reg_942");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_447_p2, "grp_fu_447_p2");
    sc_trace(mVcdFile, tmp_13_cast_reg_947, "tmp_13_cast_reg_947");
    sc_trace(mVcdFile, grp_fu_467_p2, "grp_fu_467_p2");
    sc_trace(mVcdFile, tmp_23_cast_reg_952, "tmp_23_cast_reg_952");
    sc_trace(mVcdFile, p_Val2_5_reg_957, "p_Val2_5_reg_957");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, p_Val2_14_reg_962, "p_Val2_14_reg_962");
    sc_trace(mVcdFile, p_Val2_28_reg_967, "p_Val2_28_reg_967");
    sc_trace(mVcdFile, grp_fu_377_p2, "grp_fu_377_p2");
    sc_trace(mVcdFile, r_V_1_reg_972, "r_V_1_reg_972");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, grp_fu_390_p2, "grp_fu_390_p2");
    sc_trace(mVcdFile, r_V_3_reg_977, "r_V_3_reg_977");
    sc_trace(mVcdFile, grp_fu_403_p2, "grp_fu_403_p2");
    sc_trace(mVcdFile, r_V_5_reg_982, "r_V_5_reg_982");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, grp_fu_700_p2, "grp_fu_700_p2");
    sc_trace(mVcdFile, p_Val2_7_reg_1017, "p_Val2_7_reg_1017");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, grp_fu_706_p2, "grp_fu_706_p2");
    sc_trace(mVcdFile, p_Val2_17_reg_1022, "p_Val2_17_reg_1022");
    sc_trace(mVcdFile, grp_fu_712_p2, "grp_fu_712_p2");
    sc_trace(mVcdFile, p_Val2_25_reg_1027, "p_Val2_25_reg_1027");
    sc_trace(mVcdFile, p_Val2_27_fu_639_p2, "p_Val2_27_fu_639_p2");
    sc_trace(mVcdFile, p_Val2_27_reg_1032, "p_Val2_27_reg_1032");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, p_Val2_s_6_fu_649_p2, "p_Val2_s_6_fu_649_p2");
    sc_trace(mVcdFile, p_Val2_s_6_reg_1037, "p_Val2_s_6_reg_1037");
    sc_trace(mVcdFile, p_Val2_31_fu_659_p2, "p_Val2_31_fu_659_p2");
    sc_trace(mVcdFile, p_Val2_31_reg_1042, "p_Val2_31_reg_1042");
    sc_trace(mVcdFile, p_Val2_9_fu_589_p4, "p_Val2_9_fu_589_p4");
    sc_trace(mVcdFile, p_Val2_20_fu_604_p4, "p_Val2_20_fu_604_p4");
    sc_trace(mVcdFile, p_Val2_29_fu_619_p4, "p_Val2_29_fu_619_p4");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, tmp_6_fu_277_p1, "tmp_6_fu_277_p1");
    sc_trace(mVcdFile, tmp_7_fu_284_p1, "tmp_7_fu_284_p1");
    sc_trace(mVcdFile, tmp_3_fu_311_p1, "tmp_3_fu_311_p1");
    sc_trace(mVcdFile, tmp_4_fu_318_p1, "tmp_4_fu_318_p1");
    sc_trace(mVcdFile, tmp_10_fu_345_p1, "tmp_10_fu_345_p1");
    sc_trace(mVcdFile, tmp_11_fu_352_p1, "tmp_11_fu_352_p1");
    sc_trace(mVcdFile, grp_fu_377_p0, "grp_fu_377_p0");
    sc_trace(mVcdFile, grp_fu_377_p1, "grp_fu_377_p1");
    sc_trace(mVcdFile, grp_fu_390_p0, "grp_fu_390_p0");
    sc_trace(mVcdFile, grp_fu_390_p1, "grp_fu_390_p1");
    sc_trace(mVcdFile, grp_fu_403_p0, "grp_fu_403_p0");
    sc_trace(mVcdFile, grp_fu_403_p1, "grp_fu_403_p1");
    sc_trace(mVcdFile, grp_fu_427_p0, "grp_fu_427_p0");
    sc_trace(mVcdFile, grp_fu_447_p0, "grp_fu_447_p0");
    sc_trace(mVcdFile, grp_fu_467_p0, "grp_fu_467_p0");
    sc_trace(mVcdFile, tmp_2_fu_476_p3, "tmp_2_fu_476_p3");
    sc_trace(mVcdFile, p_Val2_3_fu_484_p2, "p_Val2_3_fu_484_p2");
    sc_trace(mVcdFile, tmp_s_fu_509_p3, "tmp_s_fu_509_p3");
    sc_trace(mVcdFile, p_Val2_13_fu_517_p2, "p_Val2_13_fu_517_p2");
    sc_trace(mVcdFile, tmp_8_fu_542_p3, "tmp_8_fu_542_p3");
    sc_trace(mVcdFile, p_Val2_22_fu_550_p2, "p_Val2_22_fu_550_p2");
    sc_trace(mVcdFile, tmp_fu_634_p2, "tmp_fu_634_p2");
    sc_trace(mVcdFile, tmp1_fu_644_p2, "tmp1_fu_644_p2");
    sc_trace(mVcdFile, tmp2_fu_654_p2, "tmp2_fu_654_p2");
    sc_trace(mVcdFile, grp_fu_700_p1, "grp_fu_700_p1");
    sc_trace(mVcdFile, grp_fu_706_p1, "grp_fu_706_p1");
    sc_trace(mVcdFile, grp_fu_712_p1, "grp_fu_712_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("pidfixed.hdltvin.dat");
    mHdltvoutHandle.open("pidfixed.hdltvout.dat");
}

pidfixed::~pidfixed() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete pidfixed_CTRL_s_axi_U;
    delete pidfixed_sdiv_24nbkb_U1;
    delete pidfixed_sdiv_24nbkb_U2;
    delete pidfixed_sdiv_24nbkb_U3;
    delete pidfixed_mul_16s_cud_U4;
    delete pidfixed_mul_16s_cud_U5;
    delete pidfixed_mul_16s_cud_U6;
    delete pidfixed_mul_mul_dEe_U7;
    delete pidfixed_mul_mul_eOg_U8;
    delete pidfixed_mul_mul_dEe_U9;
    delete pidfixed_mul_mul_eOg_U10;
    delete pidfixed_mul_mul_dEe_U11;
    delete pidfixed_mul_mul_eOg_U12;
    delete pidfixed_mul_mul_fYi_U13;
    delete pidfixed_mul_mul_fYi_U14;
    delete pidfixed_mul_mul_fYi_U15;
}

void pidfixed::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void pidfixed::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        integral_pitch_V = ap_const_lv16_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
            integral_pitch_V = p_Val2_13_fu_517_p2.read().range(29, 14);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        integral_roll_V = ap_const_lv16_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
            integral_roll_V = p_Val2_3_fu_484_p2.read().range(29, 14);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        integral_yaw_V = ap_const_lv16_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
            integral_yaw_V = p_Val2_22_fu_550_p2.read().range(29, 14);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        previous_error_pitch = ap_const_lv16_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            previous_error_pitch = p_Val2_8_reg_777.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        previous_error_roll_s = ap_const_lv16_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            previous_error_roll_s = p_Val2_2_reg_769.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        previous_error_yaw_V = ap_const_lv16_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            previous_error_yaw_V = p_Val2_18_reg_785.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        Kd_pitch_V_read_reg_739 = Kd_pitch_V.read();
        Kd_roll_V_read_reg_754 = Kd_roll_V.read();
        Kd_yaw_V_read_reg_724 = Kd_yaw_V.read();
        Ki_pitch_V_read_reg_744 = Ki_pitch_V.read();
        Ki_roll_V_read_reg_759 = Ki_roll_V.read();
        Ki_yaw_V_read_reg_729 = Ki_yaw_V.read();
        Kp_pitch_V_read_reg_749 = Kp_pitch_V.read();
        Kp_roll_V_read_reg_764 = Kp_roll_V.read();
        Kp_yaw_V_read_reg_734 = Kp_yaw_V.read();
        dt_V_read_reg_718 = dt_V.read();
        p_Val2_18_reg_785 = p_Val2_18_fu_253_p2.read();
        p_Val2_2_reg_769 = p_Val2_2_fu_229_p2.read();
        p_Val2_8_reg_777 = p_Val2_8_fu_241_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_Val2_10_reg_900 = grp_fu_676_p2.read();
        p_Val2_19_reg_910 = grp_fu_688_p2.read();
        p_Val2_s_reg_890 = grp_fu_664_p2.read();
        r_V_2_reg_905 = grp_fu_682_p2.read();
        r_V_4_reg_915 = grp_fu_694_p2.read();
        r_V_reg_895 = grp_fu_670_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        p_Val2_11_reg_932 = p_Val2_10_reg_900.read().range(22, 7);
        p_Val2_26_reg_937 = p_Val2_19_reg_910.read().range(22, 7);
        p_Val2_30_reg_920 = p_Val2_s_reg_890.read().range(22, 7);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        p_Val2_14_reg_962 = p_Val2_13_fu_517_p2.read().range(29, 14);
        p_Val2_28_reg_967 = p_Val2_22_fu_550_p2.read().range(29, 14);
        p_Val2_5_reg_957 = p_Val2_3_fu_484_p2.read().range(29, 14);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        p_Val2_16_reg_838 = p_Val2_16_fu_322_p2.read();
        p_Val2_24_reg_863 = p_Val2_24_fu_356_p2.read();
        p_Val2_6_reg_813 = p_Val2_6_fu_288_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        p_Val2_17_reg_1022 = grp_fu_706_p2.read();
        p_Val2_25_reg_1027 = grp_fu_712_p2.read();
        p_Val2_7_reg_1017 = grp_fu_700_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        p_Val2_27_reg_1032 = p_Val2_27_fu_639_p2.read();
        p_Val2_31_reg_1042 = p_Val2_31_fu_659_p2.read();
        p_Val2_s_6_reg_1037 = p_Val2_s_6_fu_649_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        r_V_1_reg_972 = grp_fu_377_p2.read();
        r_V_3_reg_977 = grp_fu_390_p2.read();
        r_V_5_reg_982 = grp_fu_403_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_13_cast_reg_947 = grp_fu_447_p2.read();
        tmp_1_cast_reg_942 = grp_fu_427_p2.read();
        tmp_23_cast_reg_952 = grp_fu_467_p2.read();
    }
}

void pidfixed::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pidfixed::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void pidfixed::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void pidfixed::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pidfixed::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pidfixed::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void pidfixed::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void pidfixed::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void pidfixed::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void pidfixed::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void pidfixed::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pidfixed::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void pidfixed::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pidfixed::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pidfixed::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pidfixed::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void pidfixed::thread_grp_fu_377_p0() {
    grp_fu_377_p0 = esl_concat<17,7>(p_Val2_6_reg_813.read(), ap_const_lv7_0);
}

void pidfixed::thread_grp_fu_377_p1() {
    grp_fu_377_p1 =  (sc_lv<16>) (tmp_11_tr_cast_fu_374_p1.read());
}

void pidfixed::thread_grp_fu_390_p0() {
    grp_fu_390_p0 = esl_concat<17,7>(p_Val2_16_reg_838.read(), ap_const_lv7_0);
}

void pidfixed::thread_grp_fu_390_p1() {
    grp_fu_390_p1 =  (sc_lv<16>) (tmp_11_tr_cast_fu_374_p1.read());
}

void pidfixed::thread_grp_fu_403_p0() {
    grp_fu_403_p0 = esl_concat<17,7>(p_Val2_24_reg_863.read(), ap_const_lv7_0);
}

void pidfixed::thread_grp_fu_403_p1() {
    grp_fu_403_p1 =  (sc_lv<16>) (tmp_11_tr_cast_fu_374_p1.read());
}

void pidfixed::thread_grp_fu_427_p0() {
    grp_fu_427_p0 =  (sc_lv<16>) (tmp_1_fu_424_p1.read());
}

void pidfixed::thread_grp_fu_447_p0() {
    grp_fu_447_p0 =  (sc_lv<16>) (tmp_1_fu_424_p1.read());
}

void pidfixed::thread_grp_fu_467_p0() {
    grp_fu_467_p0 =  (sc_lv<16>) (tmp_1_fu_424_p1.read());
}

void pidfixed::thread_grp_fu_700_p1() {
    grp_fu_700_p1 = r_V_1_reg_972.read().range(23-1, 0);
}

void pidfixed::thread_grp_fu_706_p1() {
    grp_fu_706_p1 = r_V_3_reg_977.read().range(23-1, 0);
}

void pidfixed::thread_grp_fu_712_p1() {
    grp_fu_712_p1 = r_V_5_reg_982.read().range(23-1, 0);
}

void pidfixed::thread_p_Val2_13_fu_517_p2() {
    p_Val2_13_fu_517_p2 = (!tmp_13_cast_reg_947.read().is_01() || !tmp_s_fu_509_p3.read().is_01())? sc_lv<30>(): (sc_biguint<30>(tmp_13_cast_reg_947.read()) + sc_biguint<30>(tmp_s_fu_509_p3.read()));
}

void pidfixed::thread_p_Val2_16_fu_322_p2() {
    p_Val2_16_fu_322_p2 = (!tmp_3_fu_311_p1.read().is_01() || !tmp_4_fu_318_p1.read().is_01())? sc_lv<17>(): (sc_bigint<17>(tmp_3_fu_311_p1.read()) - sc_bigint<17>(tmp_4_fu_318_p1.read()));
}

void pidfixed::thread_p_Val2_18_fu_253_p2() {
    p_Val2_18_fu_253_p2 = (!target_yaw_V.read().is_01() || !current_yaw_V.read().is_01())? sc_lv<16>(): (sc_biguint<16>(target_yaw_V.read()) - sc_biguint<16>(current_yaw_V.read()));
}

void pidfixed::thread_p_Val2_20_fu_604_p4() {
    p_Val2_20_fu_604_p4 = p_Val2_17_reg_1022.read().range(22, 7);
}

void pidfixed::thread_p_Val2_22_fu_550_p2() {
    p_Val2_22_fu_550_p2 = (!tmp_23_cast_reg_952.read().is_01() || !tmp_8_fu_542_p3.read().is_01())? sc_lv<30>(): (sc_biguint<30>(tmp_23_cast_reg_952.read()) + sc_biguint<30>(tmp_8_fu_542_p3.read()));
}

void pidfixed::thread_p_Val2_24_fu_356_p2() {
    p_Val2_24_fu_356_p2 = (!tmp_10_fu_345_p1.read().is_01() || !tmp_11_fu_352_p1.read().is_01())? sc_lv<17>(): (sc_bigint<17>(tmp_10_fu_345_p1.read()) - sc_bigint<17>(tmp_11_fu_352_p1.read()));
}

void pidfixed::thread_p_Val2_27_fu_639_p2() {
    p_Val2_27_fu_639_p2 = (!p_Val2_5_reg_957.read().is_01() || !tmp_fu_634_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(p_Val2_5_reg_957.read()) + sc_biguint<16>(tmp_fu_634_p2.read()));
}

void pidfixed::thread_p_Val2_29_fu_619_p4() {
    p_Val2_29_fu_619_p4 = p_Val2_25_reg_1027.read().range(22, 7);
}

void pidfixed::thread_p_Val2_2_fu_229_p2() {
    p_Val2_2_fu_229_p2 = (!target_roll_V.read().is_01() || !current_roll_V.read().is_01())? sc_lv<16>(): (sc_biguint<16>(target_roll_V.read()) - sc_biguint<16>(current_roll_V.read()));
}

void pidfixed::thread_p_Val2_31_fu_659_p2() {
    p_Val2_31_fu_659_p2 = (!p_Val2_28_reg_967.read().is_01() || !tmp2_fu_654_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(p_Val2_28_reg_967.read()) + sc_biguint<16>(tmp2_fu_654_p2.read()));
}

void pidfixed::thread_p_Val2_3_fu_484_p2() {
    p_Val2_3_fu_484_p2 = (!tmp_1_cast_reg_942.read().is_01() || !tmp_2_fu_476_p3.read().is_01())? sc_lv<30>(): (sc_biguint<30>(tmp_1_cast_reg_942.read()) + sc_biguint<30>(tmp_2_fu_476_p3.read()));
}

void pidfixed::thread_p_Val2_6_fu_288_p2() {
    p_Val2_6_fu_288_p2 = (!tmp_6_fu_277_p1.read().is_01() || !tmp_7_fu_284_p1.read().is_01())? sc_lv<17>(): (sc_bigint<17>(tmp_6_fu_277_p1.read()) - sc_bigint<17>(tmp_7_fu_284_p1.read()));
}

void pidfixed::thread_p_Val2_8_fu_241_p2() {
    p_Val2_8_fu_241_p2 = (!target_pitch_V.read().is_01() || !current_pitch_V.read().is_01())? sc_lv<16>(): (sc_biguint<16>(target_pitch_V.read()) - sc_biguint<16>(current_pitch_V.read()));
}

void pidfixed::thread_p_Val2_9_fu_589_p4() {
    p_Val2_9_fu_589_p4 = p_Val2_7_reg_1017.read().range(22, 7);
}

void pidfixed::thread_p_Val2_s_6_fu_649_p2() {
    p_Val2_s_6_fu_649_p2 = (!p_Val2_14_reg_962.read().is_01() || !tmp1_fu_644_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(p_Val2_14_reg_962.read()) + sc_biguint<16>(tmp1_fu_644_p2.read()));
}

void pidfixed::thread_pitchY_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        pitchY_V_ap_vld = ap_const_logic_1;
    } else {
        pitchY_V_ap_vld = ap_const_logic_0;
    }
}

void pidfixed::thread_rollX_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        rollX_V_ap_vld = ap_const_logic_1;
    } else {
        rollX_V_ap_vld = ap_const_logic_0;
    }
}

void pidfixed::thread_tmp1_fu_644_p2() {
    tmp1_fu_644_p2 = (!p_Val2_20_fu_604_p4.read().is_01() || !p_Val2_11_reg_932.read().is_01())? sc_lv<16>(): (sc_biguint<16>(p_Val2_20_fu_604_p4.read()) + sc_biguint<16>(p_Val2_11_reg_932.read()));
}

void pidfixed::thread_tmp2_fu_654_p2() {
    tmp2_fu_654_p2 = (!p_Val2_29_fu_619_p4.read().is_01() || !p_Val2_26_reg_937.read().is_01())? sc_lv<16>(): (sc_biguint<16>(p_Val2_29_fu_619_p4.read()) + sc_biguint<16>(p_Val2_26_reg_937.read()));
}

void pidfixed::thread_tmp_10_fu_345_p1() {
    tmp_10_fu_345_p1 = esl_sext<17,16>(p_Val2_18_reg_785.read());
}

void pidfixed::thread_tmp_11_fu_352_p1() {
    tmp_11_fu_352_p1 = esl_sext<17,16>(previous_error_yaw_V.read());
}

void pidfixed::thread_tmp_11_tr_cast_fu_374_p1() {
    tmp_11_tr_cast_fu_374_p1 = esl_sext<24,16>(dt_V_read_reg_718.read());
}

void pidfixed::thread_tmp_1_fu_424_p1() {
    tmp_1_fu_424_p1 = esl_sext<30,16>(dt_V_read_reg_718.read());
}

void pidfixed::thread_tmp_2_fu_476_p3() {
    tmp_2_fu_476_p3 = esl_concat<16,14>(integral_roll_V.read(), ap_const_lv14_0);
}

void pidfixed::thread_tmp_3_fu_311_p1() {
    tmp_3_fu_311_p1 = esl_sext<17,16>(p_Val2_8_reg_777.read());
}

void pidfixed::thread_tmp_4_fu_318_p1() {
    tmp_4_fu_318_p1 = esl_sext<17,16>(previous_error_pitch.read());
}

void pidfixed::thread_tmp_6_fu_277_p1() {
    tmp_6_fu_277_p1 = esl_sext<17,16>(p_Val2_2_reg_769.read());
}

void pidfixed::thread_tmp_7_fu_284_p1() {
    tmp_7_fu_284_p1 = esl_sext<17,16>(previous_error_roll_s.read());
}

void pidfixed::thread_tmp_8_fu_542_p3() {
    tmp_8_fu_542_p3 = esl_concat<16,14>(integral_yaw_V.read(), ap_const_lv14_0);
}

void pidfixed::thread_tmp_fu_634_p2() {
    tmp_fu_634_p2 = (!p_Val2_9_fu_589_p4.read().is_01() || !p_Val2_30_reg_920.read().is_01())? sc_lv<16>(): (sc_biguint<16>(p_Val2_9_fu_589_p4.read()) + sc_biguint<16>(p_Val2_30_reg_920.read()));
}

void pidfixed::thread_tmp_s_fu_509_p3() {
    tmp_s_fu_509_p3 = esl_concat<16,14>(integral_pitch_V.read(), ap_const_lv14_0);
}

void pidfixed::thread_yawZ_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        yawZ_V_ap_vld = ap_const_logic_1;
    } else {
        yawZ_V_ap_vld = ap_const_logic_0;
    }
}

void pidfixed::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

void pidfixed::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWVALID\" :  \"" << s_axi_CTRL_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_CTRL_AWREADY\" :  \"" << s_axi_CTRL_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_AWADDR\" :  \"" << s_axi_CTRL_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WVALID\" :  \"" << s_axi_CTRL_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_WREADY\" :  \"" << s_axi_CTRL_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WDATA\" :  \"" << s_axi_CTRL_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_WSTRB\" :  \"" << s_axi_CTRL_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARVALID\" :  \"" << s_axi_CTRL_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_ARREADY\" :  \"" << s_axi_CTRL_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_ARADDR\" :  \"" << s_axi_CTRL_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RVALID\" :  \"" << s_axi_CTRL_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_RREADY\" :  \"" << s_axi_CTRL_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RDATA\" :  \"" << s_axi_CTRL_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_RRESP\" :  \"" << s_axi_CTRL_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BVALID\" :  \"" << s_axi_CTRL_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BREADY\" :  \"" << s_axi_CTRL_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BRESP\" :  \"" << s_axi_CTRL_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

