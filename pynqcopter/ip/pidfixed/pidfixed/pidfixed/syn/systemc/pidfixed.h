// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pidfixed_HH_
#define _pidfixed_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "pidfixed_sdiv_24nbkb.h"
#include "pidfixed_mul_16s_cud.h"
#include "pidfixed_mul_mul_dEe.h"
#include "pidfixed_mul_mul_eOg.h"
#include "pidfixed_mul_mul_fYi.h"
#include "pidfixed_CTRL_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CTRL_ADDR_WIDTH = 8,
         unsigned int C_S_AXI_CTRL_DATA_WIDTH = 32>
struct pidfixed : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > s_axi_CTRL_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_WVALID;
    sc_out< sc_logic > s_axi_CTRL_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH/8> > s_axi_CTRL_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_RVALID;
    sc_in< sc_logic > s_axi_CTRL_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    pidfixed(sc_module_name name);
    SC_HAS_PROCESS(pidfixed);

    ~pidfixed();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    pidfixed_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>* pidfixed_CTRL_s_axi_U;
    pidfixed_sdiv_24nbkb<1,28,24,16,23>* pidfixed_sdiv_24nbkb_U1;
    pidfixed_sdiv_24nbkb<1,28,24,16,23>* pidfixed_sdiv_24nbkb_U2;
    pidfixed_sdiv_24nbkb<1,28,24,16,23>* pidfixed_sdiv_24nbkb_U3;
    pidfixed_mul_16s_cud<1,7,16,30,30>* pidfixed_mul_16s_cud_U4;
    pidfixed_mul_16s_cud<1,7,16,30,30>* pidfixed_mul_16s_cud_U5;
    pidfixed_mul_16s_cud<1,7,16,30,30>* pidfixed_mul_16s_cud_U6;
    pidfixed_mul_mul_dEe<1,3,16,16,23>* pidfixed_mul_mul_dEe_U7;
    pidfixed_mul_mul_eOg<1,3,16,16,30>* pidfixed_mul_mul_eOg_U8;
    pidfixed_mul_mul_dEe<1,3,16,16,23>* pidfixed_mul_mul_dEe_U9;
    pidfixed_mul_mul_eOg<1,3,16,16,30>* pidfixed_mul_mul_eOg_U10;
    pidfixed_mul_mul_dEe<1,3,16,16,23>* pidfixed_mul_mul_dEe_U11;
    pidfixed_mul_mul_eOg<1,3,16,16,30>* pidfixed_mul_mul_eOg_U12;
    pidfixed_mul_mul_fYi<1,3,16,23,23>* pidfixed_mul_mul_fYi_U13;
    pidfixed_mul_mul_fYi<1,3,16,23,23>* pidfixed_mul_mul_fYi_U14;
    pidfixed_mul_mul_fYi<1,3,16,23,23>* pidfixed_mul_mul_fYi_U15;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<35> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<16> > target_roll_V;
    sc_signal< sc_lv<16> > current_roll_V;
    sc_signal< sc_lv<16> > Kp_roll_V;
    sc_signal< sc_lv<16> > Ki_roll_V;
    sc_signal< sc_lv<16> > Kd_roll_V;
    sc_signal< sc_lv<16> > target_pitch_V;
    sc_signal< sc_lv<16> > current_pitch_V;
    sc_signal< sc_lv<16> > Kp_pitch_V;
    sc_signal< sc_lv<16> > Ki_pitch_V;
    sc_signal< sc_lv<16> > Kd_pitch_V;
    sc_signal< sc_lv<16> > target_yaw_V;
    sc_signal< sc_lv<16> > current_yaw_V;
    sc_signal< sc_lv<16> > Kp_yaw_V;
    sc_signal< sc_lv<16> > Ki_yaw_V;
    sc_signal< sc_lv<16> > Kd_yaw_V;
    sc_signal< sc_lv<16> > dt_V;
    sc_signal< sc_logic > rollX_V_ap_vld;
    sc_signal< sc_logic > pitchY_V_ap_vld;
    sc_signal< sc_logic > yawZ_V_ap_vld;
    sc_signal< sc_lv<16> > integral_roll_V;
    sc_signal< sc_lv<16> > previous_error_roll_s;
    sc_signal< sc_lv<16> > integral_pitch_V;
    sc_signal< sc_lv<16> > previous_error_pitch;
    sc_signal< sc_lv<16> > integral_yaw_V;
    sc_signal< sc_lv<16> > previous_error_yaw_V;
    sc_signal< sc_lv<16> > dt_V_read_reg_714;
    sc_signal< sc_lv<16> > Kd_yaw_V_read_reg_720;
    sc_signal< sc_lv<16> > Ki_yaw_V_read_reg_725;
    sc_signal< sc_lv<16> > Kp_yaw_V_read_reg_730;
    sc_signal< sc_lv<16> > Kd_pitch_V_read_reg_735;
    sc_signal< sc_lv<16> > Ki_pitch_V_read_reg_740;
    sc_signal< sc_lv<16> > Kp_pitch_V_read_reg_745;
    sc_signal< sc_lv<16> > Kd_roll_V_read_reg_750;
    sc_signal< sc_lv<16> > Ki_roll_V_read_reg_755;
    sc_signal< sc_lv<16> > Kp_roll_V_read_reg_760;
    sc_signal< sc_lv<16> > p_Val2_2_fu_225_p2;
    sc_signal< sc_lv<16> > p_Val2_2_reg_765;
    sc_signal< sc_lv<16> > p_Val2_8_fu_237_p2;
    sc_signal< sc_lv<16> > p_Val2_8_reg_773;
    sc_signal< sc_lv<16> > p_Val2_18_fu_249_p2;
    sc_signal< sc_lv<16> > p_Val2_18_reg_781;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<17> > p_Val2_6_fu_284_p2;
    sc_signal< sc_lv<17> > p_Val2_6_reg_809;
    sc_signal< sc_lv<17> > p_Val2_16_fu_318_p2;
    sc_signal< sc_lv<17> > p_Val2_16_reg_834;
    sc_signal< sc_lv<17> > p_Val2_24_fu_352_p2;
    sc_signal< sc_lv<17> > p_Val2_24_reg_859;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<24> > tmp_11_tr_cast_fu_370_p1;
    sc_signal< sc_lv<23> > grp_fu_660_p2;
    sc_signal< sc_lv<23> > p_Val2_s_reg_886;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<30> > grp_fu_666_p2;
    sc_signal< sc_lv<30> > r_V_reg_891;
    sc_signal< sc_lv<23> > grp_fu_672_p2;
    sc_signal< sc_lv<23> > p_Val2_10_reg_896;
    sc_signal< sc_lv<30> > grp_fu_678_p2;
    sc_signal< sc_lv<30> > r_V_2_reg_901;
    sc_signal< sc_lv<23> > grp_fu_684_p2;
    sc_signal< sc_lv<23> > p_Val2_19_reg_906;
    sc_signal< sc_lv<30> > grp_fu_690_p2;
    sc_signal< sc_lv<30> > r_V_4_reg_911;
    sc_signal< sc_lv<16> > p_Val2_30_reg_916;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<30> > tmp_1_fu_420_p1;
    sc_signal< sc_lv<16> > p_Val2_11_reg_928;
    sc_signal< sc_lv<16> > p_Val2_26_reg_933;
    sc_signal< sc_lv<30> > grp_fu_423_p2;
    sc_signal< sc_lv<30> > tmp_1_cast_reg_938;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<30> > grp_fu_443_p2;
    sc_signal< sc_lv<30> > tmp_13_cast_reg_943;
    sc_signal< sc_lv<30> > grp_fu_463_p2;
    sc_signal< sc_lv<30> > tmp_23_cast_reg_948;
    sc_signal< sc_lv<16> > p_Val2_5_reg_953;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<16> > p_Val2_14_reg_958;
    sc_signal< sc_lv<16> > p_Val2_28_reg_963;
    sc_signal< sc_lv<23> > grp_fu_373_p2;
    sc_signal< sc_lv<23> > r_V_1_reg_968;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_lv<23> > grp_fu_386_p2;
    sc_signal< sc_lv<23> > r_V_3_reg_973;
    sc_signal< sc_lv<23> > grp_fu_399_p2;
    sc_signal< sc_lv<23> > r_V_5_reg_978;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< sc_lv<23> > grp_fu_696_p2;
    sc_signal< sc_lv<23> > p_Val2_7_reg_1013;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_lv<23> > grp_fu_702_p2;
    sc_signal< sc_lv<23> > p_Val2_17_reg_1018;
    sc_signal< sc_lv<23> > grp_fu_708_p2;
    sc_signal< sc_lv<23> > p_Val2_25_reg_1023;
    sc_signal< sc_lv<16> > p_Val2_27_fu_635_p2;
    sc_signal< sc_lv<16> > p_Val2_27_reg_1028;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_lv<16> > p_Val2_s_6_fu_645_p2;
    sc_signal< sc_lv<16> > p_Val2_s_6_reg_1033;
    sc_signal< sc_lv<16> > p_Val2_31_fu_655_p2;
    sc_signal< sc_lv<16> > p_Val2_31_reg_1038;
    sc_signal< sc_lv<16> > p_Val2_9_fu_585_p4;
    sc_signal< sc_lv<16> > p_Val2_20_fu_600_p4;
    sc_signal< sc_lv<16> > p_Val2_29_fu_615_p4;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_lv<17> > tmp_6_fu_273_p1;
    sc_signal< sc_lv<17> > tmp_7_fu_280_p1;
    sc_signal< sc_lv<17> > tmp_3_fu_307_p1;
    sc_signal< sc_lv<17> > tmp_4_fu_314_p1;
    sc_signal< sc_lv<17> > tmp_10_fu_341_p1;
    sc_signal< sc_lv<17> > tmp_11_fu_348_p1;
    sc_signal< sc_lv<24> > grp_fu_373_p0;
    sc_signal< sc_lv<16> > grp_fu_373_p1;
    sc_signal< sc_lv<24> > grp_fu_386_p0;
    sc_signal< sc_lv<16> > grp_fu_386_p1;
    sc_signal< sc_lv<24> > grp_fu_399_p0;
    sc_signal< sc_lv<16> > grp_fu_399_p1;
    sc_signal< sc_lv<16> > grp_fu_423_p0;
    sc_signal< sc_lv<16> > grp_fu_443_p0;
    sc_signal< sc_lv<16> > grp_fu_463_p0;
    sc_signal< sc_lv<30> > tmp_2_fu_472_p3;
    sc_signal< sc_lv<30> > p_Val2_3_fu_480_p2;
    sc_signal< sc_lv<30> > tmp_s_fu_505_p3;
    sc_signal< sc_lv<30> > p_Val2_13_fu_513_p2;
    sc_signal< sc_lv<30> > tmp_8_fu_538_p3;
    sc_signal< sc_lv<30> > p_Val2_22_fu_546_p2;
    sc_signal< sc_lv<16> > tmp_fu_630_p2;
    sc_signal< sc_lv<16> > tmp1_fu_640_p2;
    sc_signal< sc_lv<16> > tmp2_fu_650_p2;
    sc_signal< sc_lv<23> > grp_fu_696_p1;
    sc_signal< sc_lv<23> > grp_fu_702_p1;
    sc_signal< sc_lv<23> > grp_fu_708_p1;
    sc_signal< sc_lv<35> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<35> ap_ST_fsm_state1;
    static const sc_lv<35> ap_ST_fsm_state2;
    static const sc_lv<35> ap_ST_fsm_state3;
    static const sc_lv<35> ap_ST_fsm_state4;
    static const sc_lv<35> ap_ST_fsm_state5;
    static const sc_lv<35> ap_ST_fsm_state6;
    static const sc_lv<35> ap_ST_fsm_state7;
    static const sc_lv<35> ap_ST_fsm_state8;
    static const sc_lv<35> ap_ST_fsm_state9;
    static const sc_lv<35> ap_ST_fsm_state10;
    static const sc_lv<35> ap_ST_fsm_state11;
    static const sc_lv<35> ap_ST_fsm_state12;
    static const sc_lv<35> ap_ST_fsm_state13;
    static const sc_lv<35> ap_ST_fsm_state14;
    static const sc_lv<35> ap_ST_fsm_state15;
    static const sc_lv<35> ap_ST_fsm_state16;
    static const sc_lv<35> ap_ST_fsm_state17;
    static const sc_lv<35> ap_ST_fsm_state18;
    static const sc_lv<35> ap_ST_fsm_state19;
    static const sc_lv<35> ap_ST_fsm_state20;
    static const sc_lv<35> ap_ST_fsm_state21;
    static const sc_lv<35> ap_ST_fsm_state22;
    static const sc_lv<35> ap_ST_fsm_state23;
    static const sc_lv<35> ap_ST_fsm_state24;
    static const sc_lv<35> ap_ST_fsm_state25;
    static const sc_lv<35> ap_ST_fsm_state26;
    static const sc_lv<35> ap_ST_fsm_state27;
    static const sc_lv<35> ap_ST_fsm_state28;
    static const sc_lv<35> ap_ST_fsm_state29;
    static const sc_lv<35> ap_ST_fsm_state30;
    static const sc_lv<35> ap_ST_fsm_state31;
    static const sc_lv<35> ap_ST_fsm_state32;
    static const sc_lv<35> ap_ST_fsm_state33;
    static const sc_lv<35> ap_ST_fsm_state34;
    static const sc_lv<35> ap_ST_fsm_state35;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_grp_fu_373_p0();
    void thread_grp_fu_373_p1();
    void thread_grp_fu_386_p0();
    void thread_grp_fu_386_p1();
    void thread_grp_fu_399_p0();
    void thread_grp_fu_399_p1();
    void thread_grp_fu_423_p0();
    void thread_grp_fu_443_p0();
    void thread_grp_fu_463_p0();
    void thread_grp_fu_696_p1();
    void thread_grp_fu_702_p1();
    void thread_grp_fu_708_p1();
    void thread_p_Val2_13_fu_513_p2();
    void thread_p_Val2_16_fu_318_p2();
    void thread_p_Val2_18_fu_249_p2();
    void thread_p_Val2_20_fu_600_p4();
    void thread_p_Val2_22_fu_546_p2();
    void thread_p_Val2_24_fu_352_p2();
    void thread_p_Val2_27_fu_635_p2();
    void thread_p_Val2_29_fu_615_p4();
    void thread_p_Val2_2_fu_225_p2();
    void thread_p_Val2_31_fu_655_p2();
    void thread_p_Val2_3_fu_480_p2();
    void thread_p_Val2_6_fu_284_p2();
    void thread_p_Val2_8_fu_237_p2();
    void thread_p_Val2_9_fu_585_p4();
    void thread_p_Val2_s_6_fu_645_p2();
    void thread_pitchY_V_ap_vld();
    void thread_rollX_V_ap_vld();
    void thread_tmp1_fu_640_p2();
    void thread_tmp2_fu_650_p2();
    void thread_tmp_10_fu_341_p1();
    void thread_tmp_11_fu_348_p1();
    void thread_tmp_11_tr_cast_fu_370_p1();
    void thread_tmp_1_fu_420_p1();
    void thread_tmp_2_fu_472_p3();
    void thread_tmp_3_fu_307_p1();
    void thread_tmp_4_fu_314_p1();
    void thread_tmp_6_fu_273_p1();
    void thread_tmp_7_fu_280_p1();
    void thread_tmp_8_fu_538_p3();
    void thread_tmp_fu_630_p2();
    void thread_tmp_s_fu_505_p3();
    void thread_yawZ_V_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
