// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="bmesensor,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.500000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=1554,HLS_SYN_LUT=2947}" *)

module bmesensor (
        ap_clk,
        ap_rst_n,
        m_axi_iic_AWVALID,
        m_axi_iic_AWREADY,
        m_axi_iic_AWADDR,
        m_axi_iic_AWID,
        m_axi_iic_AWLEN,
        m_axi_iic_AWSIZE,
        m_axi_iic_AWBURST,
        m_axi_iic_AWLOCK,
        m_axi_iic_AWCACHE,
        m_axi_iic_AWPROT,
        m_axi_iic_AWQOS,
        m_axi_iic_AWREGION,
        m_axi_iic_AWUSER,
        m_axi_iic_WVALID,
        m_axi_iic_WREADY,
        m_axi_iic_WDATA,
        m_axi_iic_WSTRB,
        m_axi_iic_WLAST,
        m_axi_iic_WID,
        m_axi_iic_WUSER,
        m_axi_iic_ARVALID,
        m_axi_iic_ARREADY,
        m_axi_iic_ARADDR,
        m_axi_iic_ARID,
        m_axi_iic_ARLEN,
        m_axi_iic_ARSIZE,
        m_axi_iic_ARBURST,
        m_axi_iic_ARLOCK,
        m_axi_iic_ARCACHE,
        m_axi_iic_ARPROT,
        m_axi_iic_ARQOS,
        m_axi_iic_ARREGION,
        m_axi_iic_ARUSER,
        m_axi_iic_RVALID,
        m_axi_iic_RREADY,
        m_axi_iic_RDATA,
        m_axi_iic_RLAST,
        m_axi_iic_RID,
        m_axi_iic_RUSER,
        m_axi_iic_RRESP,
        m_axi_iic_BVALID,
        m_axi_iic_BREADY,
        m_axi_iic_BRESP,
        m_axi_iic_BID,
        m_axi_iic_BUSER,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 210'd1;
parameter    ap_ST_fsm_state2 = 210'd2;
parameter    ap_ST_fsm_state3 = 210'd4;
parameter    ap_ST_fsm_state4 = 210'd8;
parameter    ap_ST_fsm_state5 = 210'd16;
parameter    ap_ST_fsm_state6 = 210'd32;
parameter    ap_ST_fsm_state7 = 210'd64;
parameter    ap_ST_fsm_state8 = 210'd128;
parameter    ap_ST_fsm_state9 = 210'd256;
parameter    ap_ST_fsm_state10 = 210'd512;
parameter    ap_ST_fsm_state11 = 210'd1024;
parameter    ap_ST_fsm_state12 = 210'd2048;
parameter    ap_ST_fsm_state13 = 210'd4096;
parameter    ap_ST_fsm_state14 = 210'd8192;
parameter    ap_ST_fsm_state15 = 210'd16384;
parameter    ap_ST_fsm_state16 = 210'd32768;
parameter    ap_ST_fsm_state17 = 210'd65536;
parameter    ap_ST_fsm_state18 = 210'd131072;
parameter    ap_ST_fsm_state19 = 210'd262144;
parameter    ap_ST_fsm_state20 = 210'd524288;
parameter    ap_ST_fsm_state21 = 210'd1048576;
parameter    ap_ST_fsm_state22 = 210'd2097152;
parameter    ap_ST_fsm_state23 = 210'd4194304;
parameter    ap_ST_fsm_state24 = 210'd8388608;
parameter    ap_ST_fsm_state25 = 210'd16777216;
parameter    ap_ST_fsm_state26 = 210'd33554432;
parameter    ap_ST_fsm_state27 = 210'd67108864;
parameter    ap_ST_fsm_state28 = 210'd134217728;
parameter    ap_ST_fsm_state29 = 210'd268435456;
parameter    ap_ST_fsm_state30 = 210'd536870912;
parameter    ap_ST_fsm_state31 = 210'd1073741824;
parameter    ap_ST_fsm_state32 = 210'd2147483648;
parameter    ap_ST_fsm_state33 = 210'd4294967296;
parameter    ap_ST_fsm_state34 = 210'd8589934592;
parameter    ap_ST_fsm_state35 = 210'd17179869184;
parameter    ap_ST_fsm_state36 = 210'd34359738368;
parameter    ap_ST_fsm_state37 = 210'd68719476736;
parameter    ap_ST_fsm_state38 = 210'd137438953472;
parameter    ap_ST_fsm_state39 = 210'd274877906944;
parameter    ap_ST_fsm_state40 = 210'd549755813888;
parameter    ap_ST_fsm_state41 = 210'd1099511627776;
parameter    ap_ST_fsm_state42 = 210'd2199023255552;
parameter    ap_ST_fsm_state43 = 210'd4398046511104;
parameter    ap_ST_fsm_state44 = 210'd8796093022208;
parameter    ap_ST_fsm_state45 = 210'd17592186044416;
parameter    ap_ST_fsm_state46 = 210'd35184372088832;
parameter    ap_ST_fsm_state47 = 210'd70368744177664;
parameter    ap_ST_fsm_state48 = 210'd140737488355328;
parameter    ap_ST_fsm_state49 = 210'd281474976710656;
parameter    ap_ST_fsm_state50 = 210'd562949953421312;
parameter    ap_ST_fsm_state51 = 210'd1125899906842624;
parameter    ap_ST_fsm_state52 = 210'd2251799813685248;
parameter    ap_ST_fsm_state53 = 210'd4503599627370496;
parameter    ap_ST_fsm_state54 = 210'd9007199254740992;
parameter    ap_ST_fsm_state55 = 210'd18014398509481984;
parameter    ap_ST_fsm_state56 = 210'd36028797018963968;
parameter    ap_ST_fsm_state57 = 210'd72057594037927936;
parameter    ap_ST_fsm_state58 = 210'd144115188075855872;
parameter    ap_ST_fsm_state59 = 210'd288230376151711744;
parameter    ap_ST_fsm_state60 = 210'd576460752303423488;
parameter    ap_ST_fsm_state61 = 210'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 210'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 210'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 210'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 210'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 210'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 210'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 210'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 210'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 210'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 210'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 210'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 210'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 210'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 210'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 210'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 210'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 210'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 210'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 210'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 210'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 210'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 210'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 210'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 210'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 210'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 210'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 210'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 210'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 210'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 210'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 210'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 210'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 210'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 210'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 210'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 210'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 210'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 210'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 210'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 210'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 210'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 210'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 210'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 210'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 210'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 210'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 210'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 210'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 210'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 210'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 210'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 210'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 210'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 210'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 210'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 210'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 210'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 210'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 210'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 210'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 210'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 210'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 210'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 210'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 210'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 210'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 210'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 210'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 210'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 210'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 210'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 210'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 210'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 210'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 210'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 210'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 210'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 210'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 210'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 210'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 210'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 210'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 210'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 210'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 210'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 210'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 210'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 210'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 210'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 210'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 210'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 210'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 210'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 210'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 210'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 210'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 210'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 210'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 210'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 210'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 210'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 210'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 210'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 210'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 210'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 210'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 210'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 210'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 210'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 210'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 210'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 210'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 210'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 210'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 210'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 210'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 210'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 210'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 210'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 210'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 210'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 210'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 210'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 210'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 210'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 210'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 210'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 210'd392318858461667547739736838950479151006397215279002157056;
parameter    ap_ST_fsm_state190 = 210'd784637716923335095479473677900958302012794430558004314112;
parameter    ap_ST_fsm_state191 = 210'd1569275433846670190958947355801916604025588861116008628224;
parameter    ap_ST_fsm_state192 = 210'd3138550867693340381917894711603833208051177722232017256448;
parameter    ap_ST_fsm_state193 = 210'd6277101735386680763835789423207666416102355444464034512896;
parameter    ap_ST_fsm_state194 = 210'd12554203470773361527671578846415332832204710888928069025792;
parameter    ap_ST_fsm_state195 = 210'd25108406941546723055343157692830665664409421777856138051584;
parameter    ap_ST_fsm_state196 = 210'd50216813883093446110686315385661331328818843555712276103168;
parameter    ap_ST_fsm_state197 = 210'd100433627766186892221372630771322662657637687111424552206336;
parameter    ap_ST_fsm_state198 = 210'd200867255532373784442745261542645325315275374222849104412672;
parameter    ap_ST_fsm_state199 = 210'd401734511064747568885490523085290650630550748445698208825344;
parameter    ap_ST_fsm_state200 = 210'd803469022129495137770981046170581301261101496891396417650688;
parameter    ap_ST_fsm_state201 = 210'd1606938044258990275541962092341162602522202993782792835301376;
parameter    ap_ST_fsm_state202 = 210'd3213876088517980551083924184682325205044405987565585670602752;
parameter    ap_ST_fsm_state203 = 210'd6427752177035961102167848369364650410088811975131171341205504;
parameter    ap_ST_fsm_state204 = 210'd12855504354071922204335696738729300820177623950262342682411008;
parameter    ap_ST_fsm_state205 = 210'd25711008708143844408671393477458601640355247900524685364822016;
parameter    ap_ST_fsm_state206 = 210'd51422017416287688817342786954917203280710495801049370729644032;
parameter    ap_ST_fsm_state207 = 210'd102844034832575377634685573909834406561420991602098741459288064;
parameter    ap_ST_fsm_state208 = 210'd205688069665150755269371147819668813122841983204197482918576128;
parameter    ap_ST_fsm_state209 = 210'd411376139330301510538742295639337626245683966408394965837152256;
parameter    ap_ST_fsm_state210 = 210'd822752278660603021077484591278675252491367932816789931674304512;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_IIC_ID_WIDTH = 1;
parameter    C_M_AXI_IIC_ADDR_WIDTH = 32;
parameter    C_M_AXI_IIC_DATA_WIDTH = 32;
parameter    C_M_AXI_IIC_AWUSER_WIDTH = 1;
parameter    C_M_AXI_IIC_ARUSER_WIDTH = 1;
parameter    C_M_AXI_IIC_WUSER_WIDTH = 1;
parameter    C_M_AXI_IIC_RUSER_WIDTH = 1;
parameter    C_M_AXI_IIC_BUSER_WIDTH = 1;
parameter    C_M_AXI_IIC_TARGET_ADDR = 0;
parameter    C_M_AXI_IIC_USER_VALUE = 0;
parameter    C_M_AXI_IIC_PROT_VALUE = 0;
parameter    C_M_AXI_IIC_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_IIC_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_iic_AWVALID;
input   m_axi_iic_AWREADY;
output  [C_M_AXI_IIC_ADDR_WIDTH - 1:0] m_axi_iic_AWADDR;
output  [C_M_AXI_IIC_ID_WIDTH - 1:0] m_axi_iic_AWID;
output  [7:0] m_axi_iic_AWLEN;
output  [2:0] m_axi_iic_AWSIZE;
output  [1:0] m_axi_iic_AWBURST;
output  [1:0] m_axi_iic_AWLOCK;
output  [3:0] m_axi_iic_AWCACHE;
output  [2:0] m_axi_iic_AWPROT;
output  [3:0] m_axi_iic_AWQOS;
output  [3:0] m_axi_iic_AWREGION;
output  [C_M_AXI_IIC_AWUSER_WIDTH - 1:0] m_axi_iic_AWUSER;
output   m_axi_iic_WVALID;
input   m_axi_iic_WREADY;
output  [C_M_AXI_IIC_DATA_WIDTH - 1:0] m_axi_iic_WDATA;
output  [C_M_AXI_IIC_WSTRB_WIDTH - 1:0] m_axi_iic_WSTRB;
output   m_axi_iic_WLAST;
output  [C_M_AXI_IIC_ID_WIDTH - 1:0] m_axi_iic_WID;
output  [C_M_AXI_IIC_WUSER_WIDTH - 1:0] m_axi_iic_WUSER;
output   m_axi_iic_ARVALID;
input   m_axi_iic_ARREADY;
output  [C_M_AXI_IIC_ADDR_WIDTH - 1:0] m_axi_iic_ARADDR;
output  [C_M_AXI_IIC_ID_WIDTH - 1:0] m_axi_iic_ARID;
output  [7:0] m_axi_iic_ARLEN;
output  [2:0] m_axi_iic_ARSIZE;
output  [1:0] m_axi_iic_ARBURST;
output  [1:0] m_axi_iic_ARLOCK;
output  [3:0] m_axi_iic_ARCACHE;
output  [2:0] m_axi_iic_ARPROT;
output  [3:0] m_axi_iic_ARQOS;
output  [3:0] m_axi_iic_ARREGION;
output  [C_M_AXI_IIC_ARUSER_WIDTH - 1:0] m_axi_iic_ARUSER;
input   m_axi_iic_RVALID;
output   m_axi_iic_RREADY;
input  [C_M_AXI_IIC_DATA_WIDTH - 1:0] m_axi_iic_RDATA;
input   m_axi_iic_RLAST;
input  [C_M_AXI_IIC_ID_WIDTH - 1:0] m_axi_iic_RID;
input  [C_M_AXI_IIC_RUSER_WIDTH - 1:0] m_axi_iic_RUSER;
input  [1:0] m_axi_iic_RRESP;
input   m_axi_iic_BVALID;
output   m_axi_iic_BREADY;
input  [1:0] m_axi_iic_BRESP;
input  [C_M_AXI_IIC_ID_WIDTH - 1:0] m_axi_iic_BID;
input  [C_M_AXI_IIC_BUSER_WIDTH - 1:0] m_axi_iic_BUSER;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [209:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] stat_reg_outValue1_i;
reg    stat_reg_outValue1_o_ap_vld;
wire   [31:0] empty_pirq_outValue_i;
reg    empty_pirq_outValue_o_ap_vld;
wire   [31:0] full_pirq_outValue_i;
reg    full_pirq_outValue_o_ap_vld;
wire   [31:0] ctrl_reg_outValue1_i;
reg    ctrl_reg_outValue1_o_ap_vld;
reg    pressure_msb_ap_vld;
reg    pressure_lsb_ap_vld;
reg    pressure_xlsb_ap_vld;
reg    iic_blk_n_AR;
reg    iic_blk_n_R;
wire    ap_CS_fsm_state8;
reg    iic_blk_n_AW;
wire    ap_CS_fsm_state9;
reg    iic_blk_n_W;
wire    ap_CS_fsm_state10;
reg    iic_blk_n_B;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire   [0:0] tmp_fu_602_p2;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state72;
reg   [0:0] tmp_reg_856;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state127;
wire    ap_CS_fsm_state128;
wire    ap_CS_fsm_state133;
wire    ap_CS_fsm_state143;
wire   [0:0] grp_fu_539_p3;
wire    ap_CS_fsm_state150;
wire    ap_CS_fsm_state151;
wire    ap_CS_fsm_state152;
wire    ap_CS_fsm_state157;
reg   [0:0] tmp_9_reg_902;
wire   [0:0] tmp_s_fu_670_p2;
wire    ap_CS_fsm_state158;
wire    ap_CS_fsm_state163;
wire    ap_CS_fsm_state187;
wire   [0:0] grp_fu_555_p3;
wire    ap_CS_fsm_state194;
wire    ap_CS_fsm_state195;
wire    ap_CS_fsm_state196;
wire    ap_CS_fsm_state201;
reg   [0:0] tmp_19_reg_958;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state111;
wire    ap_CS_fsm_state118;
wire    ap_CS_fsm_state202;
wire    ap_CS_fsm_state209;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state79;
wire   [0:0] grp_fu_547_p3;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state129;
wire    ap_CS_fsm_state134;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state112;
wire    ap_CS_fsm_state119;
wire    ap_CS_fsm_state120;
wire    ap_CS_fsm_state121;
wire    ap_CS_fsm_state126;
reg   [0:0] tmp_11_reg_884;
wire    ap_CS_fsm_state136;
wire    ap_CS_fsm_state165;
wire    ap_CS_fsm_state172;
wire    ap_CS_fsm_state173;
wire    ap_CS_fsm_state174;
wire    ap_CS_fsm_state179;
wire    ap_CS_fsm_state180;
wire    ap_CS_fsm_state164;
wire    ap_CS_fsm_state171;
reg    iic_AWVALID;
wire    iic_AWREADY;
reg   [31:0] iic_AWADDR;
reg    iic_WVALID;
wire    iic_WREADY;
reg   [31:0] iic_WDATA;
reg    iic_ARVALID;
wire    iic_ARREADY;
reg   [31:0] iic_ARADDR;
wire    iic_RVALID;
reg    iic_RREADY;
wire   [31:0] iic_RDATA;
wire    iic_RLAST;
wire   [0:0] iic_RID;
wire   [0:0] iic_RUSER;
wire   [1:0] iic_RRESP;
wire    iic_BVALID;
reg    iic_BREADY;
wire   [1:0] iic_BRESP;
wire   [0:0] iic_BID;
wire   [0:0] iic_BUSER;
reg   [31:0] reg_563;
reg    ap_sig_ioackin_iic_AWREADY;
reg   [31:0] reg_569;
wire   [31:0] iic_addr_reg_808;
reg    ap_sig_ioackin_iic_ARREADY;
wire   [31:0] iic_addr_1_reg_816;
wire   [31:0] iic_addr_2_reg_828;
reg   [31:0] iic_addr_2_read_reg_834;
wire   [31:0] iic_addr_3_reg_839;
reg    ap_block_state65_io;
wire   [31:0] iic_addr_4_reg_860;
reg   [0:0] tmp_2_reg_869;
wire   [1:0] tmp_3_fu_615_p1;
reg   [1:0] tmp_3_reg_874;
wire   [2:0] ctrl_reg_val2_copy_1_fu_632_p1;
reg   [2:0] ctrl_reg_val2_copy_1_reg_879;
reg    ap_block_state103_io;
reg   [0:0] tmp_14_reg_888;
reg    ap_block_state126;
wire   [0:0] tmp_9_fu_664_p2;
wire    ap_CS_fsm_state135;
wire   [0:0] tmp_8_fu_658_p2;
reg   [31:0] rx_fifo_reg_913;
wire   [31:0] rx_fifo_2_fu_717_p3;
reg   [31:0] rx_fifo_2_reg_920;
wire   [31:0] tmp_10_fu_725_p3;
reg   [31:0] tmp_10_reg_925;
wire   [31:0] tmp_13_fu_733_p3;
reg   [31:0] tmp_13_reg_930;
reg   [0:0] tmp_21_reg_935;
reg   [0:0] tmp_22_reg_940;
wire   [0:0] tmp_23_fu_757_p1;
reg   [0:0] tmp_23_reg_945;
wire   [1:0] pressByteCount_1_fu_761_p2;
reg   [1:0] pressByteCount_1_reg_950;
reg   [0:0] tmp_24_reg_962;
wire   [31:0] phitmp_fu_802_p2;
wire    ap_CS_fsm_state210;
wire   [0:0] demorgan_fu_797_p2;
reg   [31:0] tmp_5_reg_477;
reg   [31:0] tmp_6_reg_490;
reg   [31:0] tmp_7_reg_503;
reg   [1:0] pressByteCount_reg_516;
reg   [31:0] counter_reg_528;
reg    ap_block_state201;
reg    ap_reg_ioackin_iic_ARREADY;
reg    ap_reg_ioackin_iic_AWREADY;
reg    ap_sig_ioackin_iic_WREADY;
reg    ap_block_state89_io;
reg    ap_reg_ioackin_iic_WREADY;
reg    ap_block_state24_io;
reg    ap_block_state66_io;
reg    ap_block_state72;
reg    ap_block_state104_io;
reg    ap_block_state143_io;
reg    ap_block_state157;
reg    ap_block_state157_io;
reg    ap_block_state187_io;
reg    ap_block_state40_io;
reg    ap_block_state45_io;
reg    ap_block_state41_io;
reg    ap_block_state46_io;
reg    ap_block_state42_io;
reg    ap_block_state47_io;
reg    ap_block_state43_io;
reg    ap_block_state48_io;
reg    ap_block_state44_io;
reg    ap_block_state49_io;
reg    ap_block_state50_io;
reg    ap_block_state73_io;
reg    ap_block_state128_io;
wire   [31:0] tmp_1_cast_fu_627_p1;
wire   [31:0] clearInterrStatus_ca_fu_643_p1;
wire   [31:0] ctrl_reg_val2_copy_1_1_fu_654_p1;
wire   [31:0] lastByteRead_fu_676_p2;
wire   [31:0] clearLatchedInterr_c_fu_778_p1;
reg    ap_reg_ioackin_empty_pirq_outValue_dummy_ack;
reg    ap_reg_ioackin_full_pirq_outValue_dummy_ack;
reg    ap_reg_ioackin_ctrl_reg_outValue1_dummy_ack;
reg    ap_reg_ioackin_stat_reg_outValue1_dummy_ack;
wire   [3:0] tmp_1_fu_619_p4;
wire   [4:0] clearInterrStatus_fu_636_p3;
wire   [0:0] tmp_4_fu_683_p2;
wire   [0:0] tmp_20_fu_703_p3;
wire   [31:0] rx_fifo_1_fu_711_p3;
wire   [31:0] p_mux_fu_689_p3;
wire   [31:0] rx_fifo_0_mux_fu_696_p3;
wire   [5:0] clearLatchedInterr_fu_767_p6;
wire   [0:0] tmp_12_fu_791_p2;
reg   [209:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 210'd1;
#0 ap_reg_ioackin_iic_ARREADY = 1'b0;
#0 ap_reg_ioackin_iic_AWREADY = 1'b0;
#0 ap_reg_ioackin_iic_WREADY = 1'b0;
#0 ap_reg_ioackin_empty_pirq_outValue_dummy_ack = 1'b0;
#0 ap_reg_ioackin_full_pirq_outValue_dummy_ack = 1'b0;
#0 ap_reg_ioackin_ctrl_reg_outValue1_dummy_ack = 1'b0;
#0 ap_reg_ioackin_stat_reg_outValue1_dummy_ack = 1'b0;
end

bmesensor_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
bmesensor_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .stat_reg_outValue1_o(iic_addr_2_read_reg_834),
    .stat_reg_outValue1_o_ap_vld(stat_reg_outValue1_o_ap_vld),
    .stat_reg_outValue1_i(stat_reg_outValue1_i),
    .empty_pirq_outValue_o(reg_563),
    .empty_pirq_outValue_o_ap_vld(empty_pirq_outValue_o_ap_vld),
    .empty_pirq_outValue_i(empty_pirq_outValue_i),
    .full_pirq_outValue_o(reg_563),
    .full_pirq_outValue_o_ap_vld(full_pirq_outValue_o_ap_vld),
    .full_pirq_outValue_i(full_pirq_outValue_i),
    .ctrl_reg_outValue1_o(reg_569),
    .ctrl_reg_outValue1_o_ap_vld(ctrl_reg_outValue1_o_ap_vld),
    .ctrl_reg_outValue1_i(ctrl_reg_outValue1_i),
    .pressure_msb(tmp_7_reg_503),
    .pressure_msb_ap_vld(pressure_msb_ap_vld),
    .pressure_lsb(tmp_6_reg_490),
    .pressure_lsb_ap_vld(pressure_lsb_ap_vld),
    .pressure_xlsb(tmp_5_reg_477),
    .pressure_xlsb_ap_vld(pressure_xlsb_ap_vld)
);

bmesensor_iic_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_IIC_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_IIC_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_IIC_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_IIC_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_IIC_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_IIC_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_IIC_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_IIC_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_IIC_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_IIC_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_IIC_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_IIC_CACHE_VALUE ))
bmesensor_iic_m_axi_U(
    .AWVALID(m_axi_iic_AWVALID),
    .AWREADY(m_axi_iic_AWREADY),
    .AWADDR(m_axi_iic_AWADDR),
    .AWID(m_axi_iic_AWID),
    .AWLEN(m_axi_iic_AWLEN),
    .AWSIZE(m_axi_iic_AWSIZE),
    .AWBURST(m_axi_iic_AWBURST),
    .AWLOCK(m_axi_iic_AWLOCK),
    .AWCACHE(m_axi_iic_AWCACHE),
    .AWPROT(m_axi_iic_AWPROT),
    .AWQOS(m_axi_iic_AWQOS),
    .AWREGION(m_axi_iic_AWREGION),
    .AWUSER(m_axi_iic_AWUSER),
    .WVALID(m_axi_iic_WVALID),
    .WREADY(m_axi_iic_WREADY),
    .WDATA(m_axi_iic_WDATA),
    .WSTRB(m_axi_iic_WSTRB),
    .WLAST(m_axi_iic_WLAST),
    .WID(m_axi_iic_WID),
    .WUSER(m_axi_iic_WUSER),
    .ARVALID(m_axi_iic_ARVALID),
    .ARREADY(m_axi_iic_ARREADY),
    .ARADDR(m_axi_iic_ARADDR),
    .ARID(m_axi_iic_ARID),
    .ARLEN(m_axi_iic_ARLEN),
    .ARSIZE(m_axi_iic_ARSIZE),
    .ARBURST(m_axi_iic_ARBURST),
    .ARLOCK(m_axi_iic_ARLOCK),
    .ARCACHE(m_axi_iic_ARCACHE),
    .ARPROT(m_axi_iic_ARPROT),
    .ARQOS(m_axi_iic_ARQOS),
    .ARREGION(m_axi_iic_ARREGION),
    .ARUSER(m_axi_iic_ARUSER),
    .RVALID(m_axi_iic_RVALID),
    .RREADY(m_axi_iic_RREADY),
    .RDATA(m_axi_iic_RDATA),
    .RLAST(m_axi_iic_RLAST),
    .RID(m_axi_iic_RID),
    .RUSER(m_axi_iic_RUSER),
    .RRESP(m_axi_iic_RRESP),
    .BVALID(m_axi_iic_BVALID),
    .BREADY(m_axi_iic_BREADY),
    .BRESP(m_axi_iic_BRESP),
    .BID(m_axi_iic_BID),
    .BUSER(m_axi_iic_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(iic_ARVALID),
    .I_ARREADY(iic_ARREADY),
    .I_ARADDR(iic_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(32'd1),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(iic_RVALID),
    .I_RREADY(iic_RREADY),
    .I_RDATA(iic_RDATA),
    .I_RID(iic_RID),
    .I_RUSER(iic_RUSER),
    .I_RRESP(iic_RRESP),
    .I_RLAST(iic_RLAST),
    .I_AWVALID(iic_AWVALID),
    .I_AWREADY(iic_AWREADY),
    .I_AWADDR(iic_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(iic_WVALID),
    .I_WREADY(iic_WREADY),
    .I_WDATA(iic_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(iic_BVALID),
    .I_BREADY(iic_BREADY),
    .I_BRESP(iic_BRESP),
    .I_BID(iic_BID),
    .I_BUSER(iic_BUSER)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_ctrl_reg_outValue1_dummy_ack <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state40)) begin
            if ((1'b0 == ap_block_state40_io)) begin
                ap_reg_ioackin_ctrl_reg_outValue1_dummy_ack <= 1'b0;
            end else if ((1'b1 == 1'b1)) begin
                ap_reg_ioackin_ctrl_reg_outValue1_dummy_ack <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_empty_pirq_outValue_dummy_ack <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            if ((ap_sig_ioackin_iic_WREADY == 1'b1)) begin
                ap_reg_ioackin_empty_pirq_outValue_dummy_ack <= 1'b0;
            end else if ((1'b1 == 1'b1)) begin
                ap_reg_ioackin_empty_pirq_outValue_dummy_ack <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_full_pirq_outValue_dummy_ack <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state24)) begin
            if ((1'b0 == ap_block_state24_io)) begin
                ap_reg_ioackin_full_pirq_outValue_dummy_ack <= 1'b0;
            end else if ((1'b1 == 1'b1)) begin
                ap_reg_ioackin_full_pirq_outValue_dummy_ack <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_iic_ARREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state164) & (ap_sig_ioackin_iic_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state180) & (ap_sig_ioackin_iic_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state165) & (ap_sig_ioackin_iic_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state136) & (ap_sig_ioackin_iic_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state112) & (ap_sig_ioackin_iic_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state80) & (ap_sig_ioackin_iic_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state202) & (ap_sig_ioackin_iic_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state111) & (ap_sig_ioackin_iic_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state32) & (ap_sig_ioackin_iic_ARREADY == 1'b1)) | (~((iic_RVALID == 1'b0) | (1'b1 == ap_block_state187_io)) & (grp_fu_555_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state187)) | (~((iic_RVALID == 1'b0) | (1'b1 == ap_block_state143_io)) & (grp_fu_539_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state143)) | ((1'b1 == ap_CS_fsm_state96) & (ap_sig_ioackin_iic_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state57) & (ap_sig_ioackin_iic_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state31) & (ap_sig_ioackin_iic_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state16) & (ap_sig_ioackin_iic_ARREADY == 1'b1)) | (~((ap_start == 1'b0) | (ap_sig_ioackin_iic_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
            ap_reg_ioackin_iic_ARREADY <= 1'b0;
        end else if ((((iic_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state164)) | ((iic_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state180)) | ((iic_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state165)) | ((iic_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state136)) | ((iic_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state112)) | ((iic_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state80)) | ((iic_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state202)) | ((iic_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state111)) | ((iic_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state32)) | ((iic_RVALID == 1'b1) & (grp_fu_555_p3 == 1'd1) & (iic_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state187)) | ((iic_RVALID == 1'b1) & (grp_fu_539_p3 == 1'd1) & (iic_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state143)) | ((iic_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state96)) | ((iic_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state57)) | ((iic_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state31)) | ((iic_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_start == 1'b1) & (iic_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            ap_reg_ioackin_iic_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_iic_AWREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state173) & (ap_sig_ioackin_iic_AWREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state120) & (ap_sig_ioackin_iic_AWREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state88) & (ap_sig_ioackin_iic_AWREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state73) & (1'b0 == ap_block_state73_io)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state50_io)) & (1'b1 == ap_CS_fsm_state50)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state49_io)) & (1'b1 == ap_CS_fsm_state49)) | ((1'b1 == ap_CS_fsm_state44) & (1'b0 == ap_block_state44_io)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state48_io)) & (1'b1 == ap_CS_fsm_state48)) | ((1'b1 == ap_CS_fsm_state43) & (1'b0 == ap_block_state43_io)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state47_io)) & (1'b1 == ap_CS_fsm_state47)) | ((1'b1 == ap_CS_fsm_state42) & (1'b0 == ap_block_state42_io)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state46_io)) & (1'b1 == ap_CS_fsm_state46)) | ((1'b1 == ap_CS_fsm_state41) & (1'b0 == ap_block_state41_io)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state45_io)) & (1'b1 == ap_CS_fsm_state45)) | ((1'b1 == ap_CS_fsm_state40) & (1'b0 == ap_block_state40_io)) | (~((iic_RVALID == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state39)) | ((1'b1 == ap_CS_fsm_state195) & (ap_sig_ioackin_iic_AWREADY == 1'b1)) | (~((1'b1 == ap_block_state157_io) | ((tmp_9_reg_902 == 1'd1) & (iic_BVALID == 1'b0))) & (tmp_s_fu_670_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state157)) | ((1'b1 == ap_CS_fsm_state151) & (ap_sig_ioackin_iic_AWREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state128) & (1'b0 == ap_block_state128_io)) | ((1'b1 == ap_CS_fsm_state127) & (ap_sig_ioackin_iic_AWREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state104) & (1'b0 == ap_block_state104_io)) | (~((iic_RVALID == 1'b0) | (1'b1 == ap_block_state103_io)) & (grp_fu_547_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state103)) | (~((ap_sig_ioackin_iic_AWREADY == 1'b0) | ((tmp_reg_856 == 1'd1) & (iic_BVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state72)) | ((1'b1 == ap_CS_fsm_state66) & (1'b0 == ap_block_state66_io)) | ((tmp_fu_602_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state65) & (1'b0 == ap_block_state65_io)) | ((1'b1 == ap_CS_fsm_state24) & (1'b0 == ap_block_state24_io)) | ((1'b1 == ap_CS_fsm_state89) & (1'b0 == ap_block_state89_io)) | (~((iic_RVALID == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state23)) | ((1'b1 == ap_CS_fsm_state9) & (ap_sig_ioackin_iic_AWREADY == 1'b1)))) begin
            ap_reg_ioackin_iic_AWREADY <= 1'b0;
        end else if ((((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state173)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state120)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state88)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state73)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state50) & (iic_BVALID == 1'b1)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state49) & (iic_BVALID == 1'b1)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state48) & (iic_BVALID == 1'b1)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state43)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state47) & (iic_BVALID == 1'b1)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state42)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state46) & (iic_BVALID == 1'b1)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state41)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state45) & (iic_BVALID == 1'b1)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state40)) | ((iic_RVALID == 1'b1) & (iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state39)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state195)) | (~((tmp_9_reg_902 == 1'd1) & (iic_BVALID == 1'b0)) & (tmp_s_fu_670_p2 == 1'd1) & (iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state157)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state151)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state128)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state127)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state104)) | ((iic_RVALID == 1'b1) & (grp_fu_547_p3 == 1'd0) & (iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state103)) | (~((tmp_reg_856 == 1'd1) & (iic_BVALID == 1'b0)) & (iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state72)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state66)) | ((tmp_fu_602_p2 == 1'd1) & (iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state89)) | ((iic_RVALID == 1'b1) & (iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((iic_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
            ap_reg_ioackin_iic_AWREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_iic_WREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state174) & (ap_sig_ioackin_iic_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state121) & (ap_sig_ioackin_iic_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state129) & (ap_sig_ioackin_iic_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state74) & (ap_sig_ioackin_iic_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state73) & (1'b0 == ap_block_state73_io)) | (~((ap_sig_ioackin_iic_WREADY == 1'b0) | (iic_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state51)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state50_io)) & (1'b1 == ap_CS_fsm_state50)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state49_io)) & (1'b1 == ap_CS_fsm_state49)) | ((1'b1 == ap_CS_fsm_state44) & (1'b0 == ap_block_state44_io)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state48_io)) & (1'b1 == ap_CS_fsm_state48)) | ((1'b1 == ap_CS_fsm_state43) & (1'b0 == ap_block_state43_io)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state47_io)) & (1'b1 == ap_CS_fsm_state47)) | ((1'b1 == ap_CS_fsm_state42) & (1'b0 == ap_block_state42_io)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state46_io)) & (1'b1 == ap_CS_fsm_state46)) | ((1'b1 == ap_CS_fsm_state41) & (1'b0 == ap_block_state41_io)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state45_io)) & (1'b1 == ap_CS_fsm_state45)) | ((1'b1 == ap_CS_fsm_state40) & (1'b0 == ap_block_state40_io)) | ((1'b1 == ap_CS_fsm_state196) & (ap_sig_ioackin_iic_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state158) & (ap_sig_ioackin_iic_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state152) & (ap_sig_ioackin_iic_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state128) & (1'b0 == ap_block_state128_io)) | ((1'b1 == ap_CS_fsm_state105) & (ap_sig_ioackin_iic_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state104) & (1'b0 == ap_block_state104_io)) | ((1'b1 == ap_CS_fsm_state67) & (ap_sig_ioackin_iic_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state66) & (1'b0 == ap_block_state66_io)) | ((1'b1 == ap_CS_fsm_state25) & (ap_sig_ioackin_iic_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state24) & (1'b0 == ap_block_state24_io)) | ((1'b1 == ap_CS_fsm_state90) & (ap_sig_ioackin_iic_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state89) & (1'b0 == ap_block_state89_io)) | ((1'b1 == ap_CS_fsm_state10) & (ap_sig_ioackin_iic_WREADY == 1'b1)))) begin
            ap_reg_ioackin_iic_WREADY <= 1'b0;
        end else if ((((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state174)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state121)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state129)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state74)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state73)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51) & (iic_BVALID == 1'b1)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state50) & (iic_BVALID == 1'b1)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state49) & (iic_BVALID == 1'b1)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state48) & (iic_BVALID == 1'b1)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state43)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state47) & (iic_BVALID == 1'b1)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state42)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state46) & (iic_BVALID == 1'b1)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state41)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state45) & (iic_BVALID == 1'b1)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state40)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state196)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state158)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state152)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state128)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state105)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state104)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state67)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state66)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state89)) | ((iic_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
            ap_reg_ioackin_iic_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_stat_reg_outValue1_dummy_ack <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state40)) begin
            if ((1'b0 == ap_block_state40_io)) begin
                ap_reg_ioackin_stat_reg_outValue1_dummy_ack <= 1'b0;
            end else if ((1'b1 == 1'b1)) begin
                ap_reg_ioackin_stat_reg_outValue1_dummy_ack <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((demorgan_fu_797_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state210))) begin
        counter_reg_528 <= phitmp_fu_802_p2;
    end else if ((~((tmp_19_reg_958 == 1'd0) & (iic_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state201))) begin
        counter_reg_528 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state179) & (iic_BVALID == 1'b1))) begin
        pressByteCount_reg_516 <= pressByteCount_1_reg_950;
    end else if ((~((tmp_11_reg_884 == 1'd0) & (iic_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state126))) begin
        pressByteCount_reg_516 <= 2'd3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((iic_RVALID == 1'b0) | (1'b1 == ap_block_state103_io)) & (1'b1 == ap_CS_fsm_state103))) begin
        ctrl_reg_val2_copy_1_reg_879 <= ctrl_reg_val2_copy_1_fu_632_p1;
        tmp_11_reg_884 <= iic_RDATA[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if ((~((iic_RVALID == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state39))) begin
        iic_addr_2_read_reg_834 <= iic_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state172))) begin
        pressByteCount_1_reg_950 <= pressByteCount_1_fu_761_p2;
        rx_fifo_2_reg_920 <= rx_fifo_2_fu_717_p3;
        tmp_10_reg_925 <= tmp_10_fu_725_p3;
        tmp_13_reg_930 <= tmp_13_fu_733_p3;
        tmp_21_reg_935 <= iic_RDATA[32'd5];
        tmp_22_reg_940 <= iic_RDATA[32'd2];
        tmp_23_reg_945 <= tmp_23_fu_757_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((iic_RVALID == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state23)) | ((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        reg_563 <= iic_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state150)) | ((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state64)) | ((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state38)))) begin
        reg_569 <= iic_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state171))) begin
        rx_fifo_reg_913 <= iic_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state119))) begin
        tmp_14_reg_888 <= iic_RDATA[32'd4];
    end
end

always @ (posedge ap_clk) begin
    if (((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state194))) begin
        tmp_19_reg_958 <= iic_RDATA[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state209))) begin
        tmp_24_reg_962 <= iic_RDATA[32'd2];
    end
end

always @ (posedge ap_clk) begin
    if (((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state87))) begin
        tmp_2_reg_869 <= iic_RDATA[32'd3];
        tmp_3_reg_874 <= tmp_3_fu_615_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state179) & (iic_BVALID == 1'b1))) begin
        tmp_5_reg_477 <= rx_fifo_2_reg_920;
        tmp_6_reg_490 <= tmp_10_reg_925;
        tmp_7_reg_503 <= tmp_13_reg_930;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state135))) begin
        tmp_9_reg_902 <= tmp_9_fu_664_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state65) & (1'b0 == ap_block_state65_io))) begin
        tmp_reg_856 <= tmp_fu_602_p2;
    end
end

always @ (*) begin
    if (((demorgan_fu_797_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state210))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((demorgan_fu_797_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state210))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_iic_ARREADY == 1'b0)) begin
        ap_sig_ioackin_iic_ARREADY = iic_ARREADY;
    end else begin
        ap_sig_ioackin_iic_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_iic_AWREADY == 1'b0)) begin
        ap_sig_ioackin_iic_AWREADY = iic_AWREADY;
    end else begin
        ap_sig_ioackin_iic_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_iic_WREADY == 1'b0)) begin
        ap_sig_ioackin_iic_WREADY = iic_WREADY;
    end else begin
        ap_sig_ioackin_iic_WREADY = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_ctrl_reg_outValue1_dummy_ack == 1'b0) & (1'b1 == ap_CS_fsm_state40))) begin
        ctrl_reg_outValue1_o_ap_vld = 1'b1;
    end else begin
        ctrl_reg_outValue1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_empty_pirq_outValue_dummy_ack == 1'b0) & (1'b1 == ap_CS_fsm_state10))) begin
        empty_pirq_outValue_o_ap_vld = 1'b1;
    end else begin
        empty_pirq_outValue_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_full_pirq_outValue_dummy_ack == 1'b0) & (1'b1 == ap_CS_fsm_state24))) begin
        full_pirq_outValue_o_ap_vld = 1'b1;
    end else begin
        full_pirq_outValue_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state164))) begin
        iic_ARADDR = 64'd268436547;
    end else if ((((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state180)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state165)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state136)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state112)))) begin
        iic_ARADDR = iic_addr_4_reg_860;
    end else if (((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state80))) begin
        iic_ARADDR = 64'd268436488;
    end else if ((((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state202)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state111)))) begin
        iic_ARADDR = iic_addr_2_reg_828;
    end else if (((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state32))) begin
        iic_ARADDR = 64'd268436545;
    end else if ((((iic_RVALID == 1'b1) & (grp_fu_555_p3 == 1'd1) & (ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state187)) | ((iic_RVALID == 1'b1) & (grp_fu_539_p3 == 1'd1) & (ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state143)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state96)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state57)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state31)))) begin
        iic_ARADDR = 64'd268436544;
    end else if (((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state16))) begin
        iic_ARADDR = iic_addr_reg_808;
    end else if (((ap_reg_ioackin_iic_ARREADY == 1'b0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        iic_ARADDR = 64'd268436552;
    end else begin
        iic_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state164)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state180)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state165)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state136)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state112)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state80)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state202)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state111)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state32)) | ((iic_RVALID == 1'b1) & (grp_fu_555_p3 == 1'd1) & (ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state187)) | ((iic_RVALID == 1'b1) & (grp_fu_539_p3 == 1'd1) & (ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state143)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state96)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state57)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state31)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state16)) | ((ap_reg_ioackin_iic_ARREADY == 1'b0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        iic_ARVALID = 1'b1;
    end else begin
        iic_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state173)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state120)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state88)))) begin
        iic_AWADDR = 64'd268436488;
    end else if ((((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state73)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state50) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state49) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state44)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state48) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state43)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state47) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state42)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state46) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state41)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state45) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state40)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state128)) | ((iic_RVALID == 1'b1) & (grp_fu_547_p3 == 1'd0) & (ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state103)) | (~((tmp_reg_856 == 1'd1) & (iic_BVALID == 1'b0)) & (ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state72)))) begin
        iic_AWADDR = iic_addr_3_reg_839;
    end else if (((iic_RVALID == 1'b1) & (ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state39))) begin
        iic_AWADDR = 64'd268436546;
    end else if ((((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state195)) | (~((tmp_9_reg_902 == 1'd1) & (iic_BVALID == 1'b0)) & (tmp_s_fu_670_p2 == 1'd1) & (ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state157)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state151)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state127)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state104)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state66)) | ((tmp_fu_602_p2 == 1'd1) & (ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state65)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state24)))) begin
        iic_AWADDR = iic_addr_1_reg_816;
    end else if (((iic_RVALID == 1'b1) & (ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state23))) begin
        iic_AWADDR = 64'd268436544;
    end else if ((((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state89)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state9)))) begin
        iic_AWADDR = 64'd268436552;
    end else begin
        iic_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state173)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state120)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state88)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state73)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state50) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state49) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state44)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state48) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state43)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state47) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state42)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state46) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state41)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state45) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state40)) | ((iic_RVALID == 1'b1) & (ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state39)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state195)) | (~((tmp_9_reg_902 == 1'd1) & (iic_BVALID == 1'b0)) & (tmp_s_fu_670_p2 == 1'd1) & (ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state157)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state151)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state128)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state127)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state104)) | ((iic_RVALID == 1'b1) & (grp_fu_547_p3 == 1'd0) & (ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state103)) | (~((tmp_reg_856 == 1'd1) & (iic_BVALID == 1'b0)) & (ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state72)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state66)) | ((tmp_fu_602_p2 == 1'd1) & (ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state65)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state24)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state89)) | ((iic_RVALID == 1'b1) & (ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state23)) | ((ap_reg_ioackin_iic_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state9)))) begin
        iic_AWVALID = 1'b1;
    end else begin
        iic_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state179) & (iic_BVALID == 1'b1)) | (~((tmp_11_reg_884 == 1'd0) & (iic_BVALID == 1'b0)) & (tmp_11_reg_884 == 1'd0) & (1'b1 == ap_CS_fsm_state126)) | ((1'b1 == ap_CS_fsm_state94) & (iic_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state134) & (iic_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state109) & (iic_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state79) & (iic_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state78) & (iic_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state56) & (iic_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state55) & (iic_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state54) & (iic_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (iic_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state52) & (iic_BVALID == 1'b1)) | (~((ap_sig_ioackin_iic_WREADY == 1'b0) | (iic_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state51)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state50_io)) & (1'b1 == ap_CS_fsm_state50)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state49_io)) & (1'b1 == ap_CS_fsm_state49)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state48_io)) & (1'b1 == ap_CS_fsm_state48)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state47_io)) & (1'b1 == ap_CS_fsm_state47)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state46_io)) & (1'b1 == ap_CS_fsm_state46)) | (~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state45_io)) & (1'b1 == ap_CS_fsm_state45)) | (~((tmp_19_reg_958 == 1'd0) & (iic_BVALID == 1'b0)) & (tmp_19_reg_958 == 1'd0) & (1'b1 == ap_CS_fsm_state201)) | ((1'b1 == ap_CS_fsm_state163) & (iic_BVALID == 1'b1)) | (~((1'b1 == ap_block_state157_io) | ((tmp_9_reg_902 == 1'd1) & (iic_BVALID == 1'b0))) & (tmp_9_reg_902 == 1'd1) & (1'b1 == ap_CS_fsm_state157)) | ((1'b1 == ap_CS_fsm_state133) & (iic_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state110) & (iic_BVALID == 1'b1)) | (~((ap_sig_ioackin_iic_AWREADY == 1'b0) | ((tmp_reg_856 == 1'd1) & (iic_BVALID == 1'b0))) & (tmp_reg_856 == 1'd1) & (1'b1 == ap_CS_fsm_state72)) | ((1'b1 == ap_CS_fsm_state71) & (iic_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state30) & (iic_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state29) & (iic_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state95) & (iic_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state15) & (iic_BVALID == 1'b1)))) begin
        iic_BREADY = 1'b1;
    end else begin
        iic_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state171)) | ((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state172)) | ((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state119)) | ((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state87)) | ((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state209)) | ((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state118)) | (~((iic_RVALID == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state39)) | ((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state194)) | (~((iic_RVALID == 1'b0) | (1'b1 == ap_block_state187_io)) & (1'b1 == ap_CS_fsm_state187)) | ((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state150)) | (~((iic_RVALID == 1'b0) | (1'b1 == ap_block_state143_io)) & (1'b1 == ap_CS_fsm_state143)) | (~((iic_RVALID == 1'b0) | (1'b1 == ap_block_state103_io)) & (1'b1 == ap_CS_fsm_state103)) | ((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state64)) | ((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state38)) | (~((iic_RVALID == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state23)) | ((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        iic_RREADY = 1'b1;
    end else begin
        iic_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state174))) begin
        iic_WDATA = clearLatchedInterr_c_fu_778_p1;
    end else if (((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state158))) begin
        iic_WDATA = lastByteRead_fu_676_p2;
    end else if (((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state129))) begin
        iic_WDATA = 32'd493;
    end else if (((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state128))) begin
        iic_WDATA = ctrl_reg_val2_copy_1_1_fu_654_p1;
    end else if (((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state121))) begin
        iic_WDATA = clearInterrStatus_ca_fu_643_p1;
    end else if (((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state105))) begin
        iic_WDATA = 32'd5;
    end else if (((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state104))) begin
        iic_WDATA = 32'd237;
    end else if (((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state89))) begin
        iic_WDATA = tmp_1_cast_fu_627_p1;
    end else if (((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state74))) begin
        iic_WDATA = 32'd759;
    end else if (((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state51) & (iic_BVALID == 1'b1))) begin
        iic_WDATA = 32'd36;
    end else if (((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state50) & (iic_BVALID == 1'b1))) begin
        iic_WDATA = 32'd245;
    end else if (((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state48) & (iic_BVALID == 1'b1))) begin
        iic_WDATA = 32'd23;
    end else if (((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state47) & (iic_BVALID == 1'b1))) begin
        iic_WDATA = 32'd244;
    end else if ((((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state45) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state196)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state90)))) begin
        iic_WDATA = 32'd0;
    end else if (((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state44))) begin
        iic_WDATA = 32'd242;
    end else if (((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state42))) begin
        iic_WDATA = 32'd182;
    end else if (((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state41))) begin
        iic_WDATA = 32'd224;
    end else if ((((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state73)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state49) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state43)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state46) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state40)))) begin
        iic_WDATA = 32'd492;
    end else if ((((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state152)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state67)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state25)))) begin
        iic_WDATA = 32'd1;
    end else if ((((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state66)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state24)))) begin
        iic_WDATA = 32'd2;
    end else if (((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state10))) begin
        iic_WDATA = 32'd15;
    end else begin
        iic_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state174)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state121)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state129)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state74)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state73)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state51) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state50) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state49) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state44)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state48) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state43)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state47) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state42)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state46) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state41)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state45) & (iic_BVALID == 1'b1)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state40)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state196)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state158)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state152)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state128)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state105)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state104)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state67)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state66)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state25)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state24)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state90)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state89)) | ((ap_reg_ioackin_iic_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state10)))) begin
        iic_WVALID = 1'b1;
    end else begin
        iic_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state164) | (1'b1 == ap_CS_fsm_state180) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state16) | ((grp_fu_555_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state187)) | ((grp_fu_539_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state143)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        iic_blk_n_AR = m_axi_iic_ARREADY;
    end else begin
        iic_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state173) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state195) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state9) | ((tmp_s_fu_670_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state157)) | ((grp_fu_547_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state103)) | ((tmp_fu_602_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state65)))) begin
        iic_blk_n_AW = m_axi_iic_AWREADY;
    end else begin
        iic_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state179) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state163) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state15) | ((tmp_11_reg_884 == 1'd0) & (1'b1 == ap_CS_fsm_state126)) | ((tmp_19_reg_958 == 1'd0) & (1'b1 == ap_CS_fsm_state201)) | ((tmp_9_reg_902 == 1'd1) & (1'b1 == ap_CS_fsm_state157)) | ((tmp_reg_856 == 1'd1) & (1'b1 == ap_CS_fsm_state72)))) begin
        iic_blk_n_B = m_axi_iic_BVALID;
    end else begin
        iic_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state172) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state194) | (1'b1 == ap_CS_fsm_state187) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state8))) begin
        iic_blk_n_R = m_axi_iic_RVALID;
    end else begin
        iic_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state196) | (1'b1 == ap_CS_fsm_state158) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state10))) begin
        iic_blk_n_W = m_axi_iic_WREADY;
    end else begin
        iic_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((demorgan_fu_797_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state210))) begin
        pressure_lsb_ap_vld = 1'b1;
    end else begin
        pressure_lsb_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((demorgan_fu_797_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state210))) begin
        pressure_msb_ap_vld = 1'b1;
    end else begin
        pressure_msb_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((demorgan_fu_797_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state210))) begin
        pressure_xlsb_ap_vld = 1'b1;
    end else begin
        pressure_xlsb_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_stat_reg_outValue1_dummy_ack == 1'b0) & (1'b1 == ap_CS_fsm_state40))) begin
        stat_reg_outValue1_o_ap_vld = 1'b1;
    end else begin
        stat_reg_outValue1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_sig_ioackin_iic_ARREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (ap_sig_ioackin_iic_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (ap_sig_ioackin_iic_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (ap_sig_ioackin_iic_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if ((~((iic_RVALID == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (1'b0 == ap_block_state24_io))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (ap_sig_ioackin_iic_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (ap_sig_ioackin_iic_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((1'b1 == ap_CS_fsm_state32) & (ap_sig_ioackin_iic_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            if ((~((iic_RVALID == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (1'b0 == ap_block_state40_io))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & (1'b0 == ap_block_state41_io))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((1'b1 == ap_CS_fsm_state42) & (1'b0 == ap_block_state42_io))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((1'b1 == ap_CS_fsm_state43) & (1'b0 == ap_block_state43_io))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((1'b1 == ap_CS_fsm_state44) & (1'b0 == ap_block_state44_io))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            if ((~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state45_io)) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            if ((~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state46_io)) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            if ((~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state47_io)) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            if ((~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state48_io)) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            if ((~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state49_io)) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            if ((~((iic_BVALID == 1'b0) | (1'b1 == ap_block_state50_io)) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            if ((~((ap_sig_ioackin_iic_WREADY == 1'b0) | (iic_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((1'b1 == ap_CS_fsm_state52) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            if (((1'b1 == ap_CS_fsm_state54) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state55 : begin
            if (((1'b1 == ap_CS_fsm_state55) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state56 : begin
            if (((1'b1 == ap_CS_fsm_state56) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state57 : begin
            if (((1'b1 == ap_CS_fsm_state57) & (ap_sig_ioackin_iic_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            if (((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            if (((tmp_fu_602_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state65) & (1'b0 == ap_block_state65_io))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else if (((tmp_fu_602_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state65) & (1'b0 == ap_block_state65_io))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state66 : begin
            if (((1'b1 == ap_CS_fsm_state66) & (1'b0 == ap_block_state66_io))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state67 : begin
            if (((1'b1 == ap_CS_fsm_state67) & (ap_sig_ioackin_iic_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            if (((1'b1 == ap_CS_fsm_state71) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state72 : begin
            if ((~((ap_sig_ioackin_iic_AWREADY == 1'b0) | ((tmp_reg_856 == 1'd1) & (iic_BVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            if (((1'b1 == ap_CS_fsm_state73) & (1'b0 == ap_block_state73_io))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state74 : begin
            if (((1'b1 == ap_CS_fsm_state74) & (ap_sig_ioackin_iic_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            if (((1'b1 == ap_CS_fsm_state78) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_state79 : begin
            if (((1'b1 == ap_CS_fsm_state79) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state80 : begin
            if (((1'b1 == ap_CS_fsm_state80) & (ap_sig_ioackin_iic_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            if (((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state87))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end
        end
        ap_ST_fsm_state88 : begin
            if (((1'b1 == ap_CS_fsm_state88) & (ap_sig_ioackin_iic_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_state89 : begin
            if (((1'b1 == ap_CS_fsm_state89) & (1'b0 == ap_block_state89_io))) begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end
        end
        ap_ST_fsm_state90 : begin
            if (((1'b1 == ap_CS_fsm_state90) & (ap_sig_ioackin_iic_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            if (((1'b1 == ap_CS_fsm_state94) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end
        end
        ap_ST_fsm_state95 : begin
            if (((1'b1 == ap_CS_fsm_state95) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end
        end
        ap_ST_fsm_state96 : begin
            if (((1'b1 == ap_CS_fsm_state96) & (ap_sig_ioackin_iic_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            if ((~((iic_RVALID == 1'b0) | (1'b1 == ap_block_state103_io)) & (grp_fu_547_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state103))) begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end else if ((~((iic_RVALID == 1'b0) | (1'b1 == ap_block_state103_io)) & (grp_fu_547_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state103))) begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state104 : begin
            if (((1'b1 == ap_CS_fsm_state104) & (1'b0 == ap_block_state104_io))) begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end
        end
        ap_ST_fsm_state105 : begin
            if (((1'b1 == ap_CS_fsm_state105) & (ap_sig_ioackin_iic_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            if (((1'b1 == ap_CS_fsm_state109) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end
        end
        ap_ST_fsm_state110 : begin
            if (((1'b1 == ap_CS_fsm_state110) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end
        end
        ap_ST_fsm_state111 : begin
            if (((1'b1 == ap_CS_fsm_state111) & (ap_sig_ioackin_iic_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end
        end
        ap_ST_fsm_state112 : begin
            if (((1'b1 == ap_CS_fsm_state112) & (ap_sig_ioackin_iic_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            if (((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state118))) begin
                ap_NS_fsm = ap_ST_fsm_state119;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end
        end
        ap_ST_fsm_state119 : begin
            if (((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state119))) begin
                ap_NS_fsm = ap_ST_fsm_state120;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state119;
            end
        end
        ap_ST_fsm_state120 : begin
            if (((1'b1 == ap_CS_fsm_state120) & (ap_sig_ioackin_iic_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state120;
            end
        end
        ap_ST_fsm_state121 : begin
            if (((1'b1 == ap_CS_fsm_state121) & (ap_sig_ioackin_iic_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            if ((~((tmp_11_reg_884 == 1'd0) & (iic_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state126))) begin
                ap_NS_fsm = ap_ST_fsm_state135;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end
        end
        ap_ST_fsm_state127 : begin
            if (((1'b1 == ap_CS_fsm_state127) & (ap_sig_ioackin_iic_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end
        end
        ap_ST_fsm_state128 : begin
            if (((1'b1 == ap_CS_fsm_state128) & (1'b0 == ap_block_state128_io))) begin
                ap_NS_fsm = ap_ST_fsm_state129;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end
        end
        ap_ST_fsm_state129 : begin
            if (((1'b1 == ap_CS_fsm_state129) & (ap_sig_ioackin_iic_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state129;
            end
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            if (((1'b1 == ap_CS_fsm_state133) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state134;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state133;
            end
        end
        ap_ST_fsm_state134 : begin
            if (((1'b1 == ap_CS_fsm_state134) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state134;
            end
        end
        ap_ST_fsm_state135 : begin
            if (((tmp_8_fu_658_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state135))) begin
                ap_NS_fsm = ap_ST_fsm_state180;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state136;
            end
        end
        ap_ST_fsm_state136 : begin
            if (((1'b1 == ap_CS_fsm_state136) & (ap_sig_ioackin_iic_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state137;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state136;
            end
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            if ((~((iic_RVALID == 1'b0) | (1'b1 == ap_block_state143_io)) & (grp_fu_539_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state143))) begin
                ap_NS_fsm = ap_ST_fsm_state144;
            end else if ((~((iic_RVALID == 1'b0) | (1'b1 == ap_block_state143_io)) & (grp_fu_539_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state143))) begin
                ap_NS_fsm = ap_ST_fsm_state136;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state143;
            end
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            if (((iic_RVALID == 1'b1) & (tmp_9_reg_902 == 1'd0) & (1'b1 == ap_CS_fsm_state150))) begin
                ap_NS_fsm = ap_ST_fsm_state157;
            end else if (((iic_RVALID == 1'b1) & (tmp_9_reg_902 == 1'd1) & (1'b1 == ap_CS_fsm_state150))) begin
                ap_NS_fsm = ap_ST_fsm_state151;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state150;
            end
        end
        ap_ST_fsm_state151 : begin
            if (((1'b1 == ap_CS_fsm_state151) & (ap_sig_ioackin_iic_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state152;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state151;
            end
        end
        ap_ST_fsm_state152 : begin
            if (((1'b1 == ap_CS_fsm_state152) & (ap_sig_ioackin_iic_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state153;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state152;
            end
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            if ((~((1'b1 == ap_block_state157_io) | ((tmp_9_reg_902 == 1'd1) & (iic_BVALID == 1'b0))) & (tmp_s_fu_670_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state157))) begin
                ap_NS_fsm = ap_ST_fsm_state164;
            end else if ((~((1'b1 == ap_block_state157_io) | ((tmp_9_reg_902 == 1'd1) & (iic_BVALID == 1'b0))) & (tmp_s_fu_670_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state157))) begin
                ap_NS_fsm = ap_ST_fsm_state158;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state157;
            end
        end
        ap_ST_fsm_state158 : begin
            if (((1'b1 == ap_CS_fsm_state158) & (ap_sig_ioackin_iic_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state159;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state158;
            end
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            if (((1'b1 == ap_CS_fsm_state163) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state164;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state163;
            end
        end
        ap_ST_fsm_state164 : begin
            if (((1'b1 == ap_CS_fsm_state164) & (ap_sig_ioackin_iic_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state165;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state164;
            end
        end
        ap_ST_fsm_state165 : begin
            if (((1'b1 == ap_CS_fsm_state165) & (ap_sig_ioackin_iic_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state166;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state165;
            end
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            if (((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state171))) begin
                ap_NS_fsm = ap_ST_fsm_state172;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state171;
            end
        end
        ap_ST_fsm_state172 : begin
            if (((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state172))) begin
                ap_NS_fsm = ap_ST_fsm_state173;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state172;
            end
        end
        ap_ST_fsm_state173 : begin
            if (((1'b1 == ap_CS_fsm_state173) & (ap_sig_ioackin_iic_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state174;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state173;
            end
        end
        ap_ST_fsm_state174 : begin
            if (((1'b1 == ap_CS_fsm_state174) & (ap_sig_ioackin_iic_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state175;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state174;
            end
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            if (((1'b1 == ap_CS_fsm_state179) & (iic_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state135;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state179;
            end
        end
        ap_ST_fsm_state180 : begin
            if (((1'b1 == ap_CS_fsm_state180) & (ap_sig_ioackin_iic_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state181;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state180;
            end
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            if ((~((iic_RVALID == 1'b0) | (1'b1 == ap_block_state187_io)) & (grp_fu_555_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state187))) begin
                ap_NS_fsm = ap_ST_fsm_state188;
            end else if ((~((iic_RVALID == 1'b0) | (1'b1 == ap_block_state187_io)) & (grp_fu_555_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state187))) begin
                ap_NS_fsm = ap_ST_fsm_state180;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state187;
            end
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state191;
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state192 : begin
            ap_NS_fsm = ap_ST_fsm_state193;
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            if (((iic_RVALID == 1'b1) & (grp_fu_547_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state194))) begin
                ap_NS_fsm = ap_ST_fsm_state201;
            end else if (((iic_RVALID == 1'b1) & (grp_fu_547_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state194))) begin
                ap_NS_fsm = ap_ST_fsm_state195;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state194;
            end
        end
        ap_ST_fsm_state195 : begin
            if (((1'b1 == ap_CS_fsm_state195) & (ap_sig_ioackin_iic_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state196;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state195;
            end
        end
        ap_ST_fsm_state196 : begin
            if (((1'b1 == ap_CS_fsm_state196) & (ap_sig_ioackin_iic_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state197;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state196;
            end
        end
        ap_ST_fsm_state197 : begin
            ap_NS_fsm = ap_ST_fsm_state198;
        end
        ap_ST_fsm_state198 : begin
            ap_NS_fsm = ap_ST_fsm_state199;
        end
        ap_ST_fsm_state199 : begin
            ap_NS_fsm = ap_ST_fsm_state200;
        end
        ap_ST_fsm_state200 : begin
            ap_NS_fsm = ap_ST_fsm_state201;
        end
        ap_ST_fsm_state201 : begin
            if ((~((tmp_19_reg_958 == 1'd0) & (iic_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state201))) begin
                ap_NS_fsm = ap_ST_fsm_state202;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state201;
            end
        end
        ap_ST_fsm_state202 : begin
            if (((1'b1 == ap_CS_fsm_state202) & (ap_sig_ioackin_iic_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state203;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state202;
            end
        end
        ap_ST_fsm_state203 : begin
            ap_NS_fsm = ap_ST_fsm_state204;
        end
        ap_ST_fsm_state204 : begin
            ap_NS_fsm = ap_ST_fsm_state205;
        end
        ap_ST_fsm_state205 : begin
            ap_NS_fsm = ap_ST_fsm_state206;
        end
        ap_ST_fsm_state206 : begin
            ap_NS_fsm = ap_ST_fsm_state207;
        end
        ap_ST_fsm_state207 : begin
            ap_NS_fsm = ap_ST_fsm_state208;
        end
        ap_ST_fsm_state208 : begin
            ap_NS_fsm = ap_ST_fsm_state209;
        end
        ap_ST_fsm_state209 : begin
            if (((iic_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state209))) begin
                ap_NS_fsm = ap_ST_fsm_state210;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state209;
            end
        end
        ap_ST_fsm_state210 : begin
            if (((demorgan_fu_797_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state210))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state202;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd150];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state157 = ap_CS_fsm[32'd156];

assign ap_CS_fsm_state158 = ap_CS_fsm[32'd157];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state163 = ap_CS_fsm[32'd162];

assign ap_CS_fsm_state164 = ap_CS_fsm[32'd163];

assign ap_CS_fsm_state165 = ap_CS_fsm[32'd164];

assign ap_CS_fsm_state171 = ap_CS_fsm[32'd170];

assign ap_CS_fsm_state172 = ap_CS_fsm[32'd171];

assign ap_CS_fsm_state173 = ap_CS_fsm[32'd172];

assign ap_CS_fsm_state174 = ap_CS_fsm[32'd173];

assign ap_CS_fsm_state179 = ap_CS_fsm[32'd178];

assign ap_CS_fsm_state180 = ap_CS_fsm[32'd179];

assign ap_CS_fsm_state187 = ap_CS_fsm[32'd186];

assign ap_CS_fsm_state194 = ap_CS_fsm[32'd193];

assign ap_CS_fsm_state195 = ap_CS_fsm[32'd194];

assign ap_CS_fsm_state196 = ap_CS_fsm[32'd195];

assign ap_CS_fsm_state201 = ap_CS_fsm[32'd200];

assign ap_CS_fsm_state202 = ap_CS_fsm[32'd201];

assign ap_CS_fsm_state209 = ap_CS_fsm[32'd208];

assign ap_CS_fsm_state210 = ap_CS_fsm[32'd209];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

always @ (*) begin
    ap_block_state103_io = ((grp_fu_547_p3 == 1'd0) & (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state104_io = ((ap_sig_ioackin_iic_WREADY == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state126 = ((tmp_11_reg_884 == 1'd0) & (iic_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state128_io = ((ap_sig_ioackin_iic_WREADY == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state143_io = ((grp_fu_539_p3 == 1'd1) & (ap_sig_ioackin_iic_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state157 = ((tmp_9_reg_902 == 1'd1) & (iic_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state157_io = ((tmp_s_fu_670_p2 == 1'd1) & (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state187_io = ((grp_fu_555_p3 == 1'd1) & (ap_sig_ioackin_iic_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state201 = ((tmp_19_reg_958 == 1'd0) & (iic_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state24_io = ((ap_sig_ioackin_iic_WREADY == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state40_io = ((ap_sig_ioackin_iic_WREADY == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state41_io = ((ap_sig_ioackin_iic_WREADY == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state42_io = ((ap_sig_ioackin_iic_WREADY == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state43_io = ((ap_sig_ioackin_iic_WREADY == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state44_io = ((ap_sig_ioackin_iic_WREADY == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state45_io = ((ap_sig_ioackin_iic_WREADY == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state46_io = ((ap_sig_ioackin_iic_WREADY == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state47_io = ((ap_sig_ioackin_iic_WREADY == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state48_io = ((ap_sig_ioackin_iic_WREADY == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state49_io = ((ap_sig_ioackin_iic_WREADY == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state50_io = ((ap_sig_ioackin_iic_WREADY == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state65_io = ((tmp_fu_602_p2 == 1'd1) & (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state66_io = ((ap_sig_ioackin_iic_WREADY == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state72 = ((tmp_reg_856 == 1'd1) & (iic_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state73_io = ((ap_sig_ioackin_iic_WREADY == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state89_io = ((ap_sig_ioackin_iic_WREADY == 1'b0) | (ap_sig_ioackin_iic_AWREADY == 1'b0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign clearInterrStatus_ca_fu_643_p1 = clearInterrStatus_fu_636_p3;

assign clearInterrStatus_fu_636_p3 = {{tmp_14_reg_888}, {4'd0}};

assign clearLatchedInterr_c_fu_778_p1 = clearLatchedInterr_fu_767_p6;

assign clearLatchedInterr_fu_767_p6 = {{{{{tmp_21_reg_935}, {2'd0}}, {tmp_22_reg_940}}, {1'd0}}, {tmp_23_reg_945}};

assign ctrl_reg_val2_copy_1_1_fu_654_p1 = ctrl_reg_val2_copy_1_reg_879;

assign ctrl_reg_val2_copy_1_fu_632_p1 = iic_RDATA[2:0];

assign demorgan_fu_797_p2 = (tmp_24_reg_962 & tmp_12_fu_791_p2);

assign grp_fu_539_p3 = iic_RDATA[32'd3];

assign grp_fu_547_p3 = iic_RDATA[32'd5];

assign grp_fu_555_p3 = iic_RDATA[32'd4];

assign iic_addr_1_reg_816 = 64'd268436544;

assign iic_addr_2_reg_828 = 64'd268436545;

assign iic_addr_3_reg_839 = 64'd268436546;

assign iic_addr_4_reg_860 = 64'd268436488;

assign iic_addr_reg_808 = 64'd268436552;

assign lastByteRead_fu_676_p2 = (reg_569 | 32'd16);

assign p_mux_fu_689_p3 = ((tmp_4_fu_683_p2[0:0] === 1'b1) ? tmp_6_reg_490 : rx_fifo_reg_913);

assign phitmp_fu_802_p2 = (counter_reg_528 + 32'd1);

assign pressByteCount_1_fu_761_p2 = ($signed(2'd3) + $signed(pressByteCount_reg_516));

assign rx_fifo_0_mux_fu_696_p3 = ((tmp_4_fu_683_p2[0:0] === 1'b1) ? rx_fifo_reg_913 : tmp_7_reg_503);

assign rx_fifo_1_fu_711_p3 = ((tmp_9_reg_902[0:0] === 1'b1) ? rx_fifo_reg_913 : tmp_5_reg_477);

assign rx_fifo_2_fu_717_p3 = ((tmp_20_fu_703_p3[0:0] === 1'b1) ? tmp_5_reg_477 : rx_fifo_1_fu_711_p3);

assign tmp_10_fu_725_p3 = ((tmp_20_fu_703_p3[0:0] === 1'b1) ? p_mux_fu_689_p3 : tmp_6_reg_490);

assign tmp_12_fu_791_p2 = ((counter_reg_528 != 32'd1000) ? 1'b1 : 1'b0);

assign tmp_13_fu_733_p3 = ((tmp_20_fu_703_p3[0:0] === 1'b1) ? rx_fifo_0_mux_fu_696_p3 : tmp_7_reg_503);

assign tmp_1_cast_fu_627_p1 = tmp_1_fu_619_p4;

assign tmp_1_fu_619_p4 = {{{tmp_2_reg_869}, {1'd0}}, {tmp_3_reg_874}};

assign tmp_20_fu_703_p3 = pressByteCount_reg_516[32'd1];

assign tmp_23_fu_757_p1 = iic_RDATA[0:0];

assign tmp_3_fu_615_p1 = iic_RDATA[1:0];

assign tmp_4_fu_683_p2 = ((pressByteCount_reg_516 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_8_fu_658_p2 = ((pressByteCount_reg_516 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_9_fu_664_p2 = ((pressByteCount_reg_516 == 2'd1) ? 1'b1 : 1'b0);

assign tmp_fu_602_p2 = ((reg_569 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_670_p2 = ((pressByteCount_reg_516 == 2'd2) ? 1'b1 : 1'b0);

endmodule //bmesensor
