// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

// AXILiteS
// 0x00 : Control signals
//        bit 0  - ap_start (Read/Write/COH)
//        bit 1  - ap_done (Read/COR)
//        bit 2  - ap_idle (Read)
//        bit 3  - ap_ready (Read)
//        bit 7  - auto_restart (Read/Write)
//        others - reserved
// 0x04 : Global Interrupt Enable Register
//        bit 0  - Global Interrupt Enable (Read/Write)
//        others - reserved
// 0x08 : IP Interrupt Enable Register (Read/Write)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x0c : IP Interrupt Status Register (Read/TOW)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x10 : Data signal of stat_reg_outValue1
//        bit 31~0 - stat_reg_outValue1[31:0] (Read)
// 0x14 : Control signal of stat_reg_outValue1
//        bit 0  - stat_reg_outValue1_ap_vld (Read/COR)
//        others - reserved
// 0x18 : Data signal of empty_pirq_outValue
//        bit 31~0 - empty_pirq_outValue[31:0] (Read)
// 0x1c : Control signal of empty_pirq_outValue
//        bit 0  - empty_pirq_outValue_ap_vld (Read/COR)
//        others - reserved
// 0x20 : Data signal of full_pirq_outValue
//        bit 31~0 - full_pirq_outValue[31:0] (Read)
// 0x24 : Control signal of full_pirq_outValue
//        bit 0  - full_pirq_outValue_ap_vld (Read/COR)
//        others - reserved
// 0x28 : Data signal of ctrl_reg_outValue
//        bit 31~0 - ctrl_reg_outValue[31:0] (Read)
// 0x2c : Control signal of ctrl_reg_outValue
//        bit 0  - ctrl_reg_outValue_ap_vld (Read/COR)
//        others - reserved
// 0x30 : Data signal of rx_fifo_outValue
//        bit 31~0 - rx_fifo_outValue[31:0] (Read)
// 0x34 : Control signal of rx_fifo_outValue
//        bit 0  - rx_fifo_outValue_ap_vld (Read/COR)
//        others - reserved
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XIICCOMM_AXILITES_ADDR_AP_CTRL                  0x00
#define XIICCOMM_AXILITES_ADDR_GIE                      0x04
#define XIICCOMM_AXILITES_ADDR_IER                      0x08
#define XIICCOMM_AXILITES_ADDR_ISR                      0x0c
#define XIICCOMM_AXILITES_ADDR_STAT_REG_OUTVALUE1_DATA  0x10
#define XIICCOMM_AXILITES_BITS_STAT_REG_OUTVALUE1_DATA  32
#define XIICCOMM_AXILITES_ADDR_STAT_REG_OUTVALUE1_CTRL  0x14
#define XIICCOMM_AXILITES_ADDR_EMPTY_PIRQ_OUTVALUE_DATA 0x18
#define XIICCOMM_AXILITES_BITS_EMPTY_PIRQ_OUTVALUE_DATA 32
#define XIICCOMM_AXILITES_ADDR_EMPTY_PIRQ_OUTVALUE_CTRL 0x1c
#define XIICCOMM_AXILITES_ADDR_FULL_PIRQ_OUTVALUE_DATA  0x20
#define XIICCOMM_AXILITES_BITS_FULL_PIRQ_OUTVALUE_DATA  32
#define XIICCOMM_AXILITES_ADDR_FULL_PIRQ_OUTVALUE_CTRL  0x24
#define XIICCOMM_AXILITES_ADDR_CTRL_REG_OUTVALUE_DATA   0x28
#define XIICCOMM_AXILITES_BITS_CTRL_REG_OUTVALUE_DATA   32
#define XIICCOMM_AXILITES_ADDR_CTRL_REG_OUTVALUE_CTRL   0x2c
#define XIICCOMM_AXILITES_ADDR_RX_FIFO_OUTVALUE_DATA    0x30
#define XIICCOMM_AXILITES_BITS_RX_FIFO_OUTVALUE_DATA    32
#define XIICCOMM_AXILITES_ADDR_RX_FIFO_OUTVALUE_CTRL    0x34

