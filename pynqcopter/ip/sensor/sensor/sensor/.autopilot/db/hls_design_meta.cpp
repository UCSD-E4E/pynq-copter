#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_iicData_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_iicData_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_iicData_AWADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_iicData_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_iicData_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_iicData_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_iicData_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_iicData_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_iicData_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_iicData_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_iicData_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_iicData_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_iicData_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_iicData_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_iicData_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_iicData_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_iicData_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_iicData_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_iicData_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_iicData_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_iicData_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_iicData_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_iicData_ARADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_iicData_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_iicData_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_iicData_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_iicData_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_iicData_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_iicData_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_iicData_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_iicData_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_iicData_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_iicData_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_iicData_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_iicData_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_iicData_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_iicData_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_iicData_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_iicData_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_iicData_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_iicData_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_iicData_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_iicData_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_iicData_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_iicData_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("s_axi_CTRL_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_AWADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "sensor";
