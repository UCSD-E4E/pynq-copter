

================================================================
== Vivado HLS Report for 'pwm'
================================================================
* Date:           Fri Jul 27 18:14:31 2018

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        pwm
* Solution:       pwm
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.00|      3.40|        0.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |   18|   18|    6|    6| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 6, depth = 19


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 19
* Pipeline : 1
  Pipeline-0 : II = 6, D = 19, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 

* FSM state operations: 

 <State 1> : 2.32ns
ST_1 : Operation 20 [1/1] (1.00ns)   --->   "%period_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %period_V)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 21 [1/1] (1.00ns)   --->   "%max_duty_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %max_duty_V)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 22 [1/1] (1.00ns)   --->   "%min_duty_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %min_duty_V)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%m_V_addr = getelementptr [6 x i32]* %m_V, i64 0, i64 0" [pwm.cpp:57]
ST_1 : Operation 24 [2/2] (2.32ns)   --->   "%m_V_load = load i32* %m_V_addr, align 4" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 6> <RAM>

 <State 2> : 3.40ns
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%lhs_V = zext i32 %max_duty_V_read to i33" [pwm.cpp:57]
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%rhs_V = zext i32 %min_duty_V_read to i33" [pwm.cpp:57]
ST_2 : Operation 27 [1/1] (2.55ns)   --->   "%r_V = sub nsw i33 %lhs_V, %rhs_V" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/2] (2.32ns)   --->   "%m_V_load = load i32* %m_V_addr, align 4" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%m_V_addr_1 = getelementptr [6 x i32]* %m_V, i64 0, i64 1" [pwm.cpp:57]
ST_2 : Operation 30 [2/2] (2.32ns)   --->   "%m_V_load_1 = load i32* %m_V_addr_1, align 4" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%accumulator_V_load = load i32* @accumulator_V, align 4" [pwm.cpp:60]
ST_2 : Operation 32 [1/1] (2.47ns)   --->   "%tmp_6 = icmp ult i32 %accumulator_V_load, %max_duty_V_read" [pwm.cpp:63]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (2.47ns)   --->   "%tmp_1 = icmp ugt i32 %accumulator_V_load, %max_duty_V_read" [pwm.cpp:68]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (2.47ns)   --->   "%tmp_2 = icmp ult i32 %accumulator_V_load, %period_V_read" [pwm.cpp:68]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node tmp2)   --->   "%or_cond1 = and i1 %tmp_1, %tmp_2" [pwm.cpp:68]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (2.47ns)   --->   "%tmp_3 = icmp ugt i32 %accumulator_V_load, %period_V_read" [pwm.cpp:73]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.93ns) (out node of the LUT)   --->   "%tmp2 = or i1 %or_cond1, %tmp_3" [pwm.cpp:73]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

 <State 3> : 2.32ns
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%OP1_V = sext i33 %r_V to i65" [pwm.cpp:57]
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%OP2_V = zext i32 %m_V_load to i65" [pwm.cpp:57]
ST_3 : Operation 40 [7/7] (2.11ns)   --->   "%p_Val2_s = mul i65 %OP2_V, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 41 [1/2] (2.32ns)   --->   "%m_V_load_1 = load i32* %m_V_addr_1, align 4" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 6> <RAM>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%m_V_addr_2 = getelementptr [6 x i32]* %m_V, i64 0, i64 2" [pwm.cpp:57]
ST_3 : Operation 43 [2/2] (2.32ns)   --->   "%m_V_load_2 = load i32* %m_V_addr_2, align 4" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 6> <RAM>

 <State 4> : 2.32ns
ST_4 : Operation 44 [6/7] (2.11ns)   --->   "%p_Val2_s = mul i65 %OP2_V, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%OP2_V_1 = zext i32 %m_V_load_1 to i65" [pwm.cpp:57]
ST_4 : Operation 46 [7/7] (2.11ns)   --->   "%p_Val2_1 = mul i65 %OP2_V_1, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 47 [1/2] (2.32ns)   --->   "%m_V_load_2 = load i32* %m_V_addr_2, align 4" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 6> <RAM>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%m_V_addr_3 = getelementptr [6 x i32]* %m_V, i64 0, i64 3" [pwm.cpp:57]
ST_4 : Operation 49 [2/2] (2.32ns)   --->   "%m_V_load_3 = load i32* %m_V_addr_3, align 4" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 6> <RAM>

 <State 5> : 2.32ns
ST_5 : Operation 50 [5/7] (2.11ns)   --->   "%p_Val2_s = mul i65 %OP2_V, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 51 [6/7] (2.11ns)   --->   "%p_Val2_1 = mul i65 %OP2_V_1, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%OP2_V_2 = zext i32 %m_V_load_2 to i65" [pwm.cpp:57]
ST_5 : Operation 53 [7/7] (2.11ns)   --->   "%p_Val2_2 = mul i65 %OP2_V_2, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 54 [1/2] (2.32ns)   --->   "%m_V_load_3 = load i32* %m_V_addr_3, align 4" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 6> <RAM>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%m_V_addr_4 = getelementptr [6 x i32]* %m_V, i64 0, i64 4" [pwm.cpp:57]
ST_5 : Operation 56 [2/2] (2.32ns)   --->   "%m_V_load_4 = load i32* %m_V_addr_4, align 4" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 6> <RAM>

 <State 6> : 2.55ns
ST_6 : Operation 57 [4/7] (2.11ns)   --->   "%p_Val2_s = mul i65 %OP2_V, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 58 [5/7] (2.11ns)   --->   "%p_Val2_1 = mul i65 %OP2_V_1, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 59 [6/7] (2.11ns)   --->   "%p_Val2_2 = mul i65 %OP2_V_2, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 60 [1/1] (0.00ns)   --->   "%OP2_V_3 = zext i32 %m_V_load_3 to i65" [pwm.cpp:57]
ST_6 : Operation 61 [7/7] (2.11ns)   --->   "%p_Val2_3 = mul i65 %OP2_V_3, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 62 [1/2] (2.32ns)   --->   "%m_V_load_4 = load i32* %m_V_addr_4, align 4" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 6> <RAM>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "%m_V_addr_5 = getelementptr [6 x i32]* %m_V, i64 0, i64 5" [pwm.cpp:57]
ST_6 : Operation 64 [2/2] (2.32ns)   --->   "%m_V_load_5 = load i32* %m_V_addr_5, align 4" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 6> <RAM>
ST_6 : Operation 65 [1/1] (2.55ns)   --->   "%accumulator_V_load_o = add i32 1, %accumulator_V_load" [pwm.cpp:80]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

 <State 7> : 2.32ns
ST_7 : Operation 66 [3/7] (2.11ns)   --->   "%p_Val2_s = mul i65 %OP2_V, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 67 [4/7] (2.11ns)   --->   "%p_Val2_1 = mul i65 %OP2_V_1, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 68 [5/7] (2.11ns)   --->   "%p_Val2_2 = mul i65 %OP2_V_2, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 69 [6/7] (2.11ns)   --->   "%p_Val2_3 = mul i65 %OP2_V_3, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 70 [1/1] (0.00ns)   --->   "%OP2_V_4 = zext i32 %m_V_load_4 to i65" [pwm.cpp:57]
ST_7 : Operation 71 [7/7] (2.11ns)   --->   "%p_Val2_4 = mul i65 %OP2_V_4, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 72 [1/2] (2.32ns)   --->   "%m_V_load_5 = load i32* %m_V_addr_5, align 4" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 6> <RAM>
ST_7 : Operation 73 [1/1] (1.37ns)   --->   "%tmp_7 = select i1 %tmp_3, i32 1, i32 %accumulator_V_load_o" [pwm.cpp:80]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 74 [1/1] (0.00ns)   --->   "store i32 %tmp_7, i32* @accumulator_V, align 4" [pwm.cpp:80]

 <State 8> : 2.12ns
ST_8 : Operation 75 [2/7] (2.11ns)   --->   "%p_Val2_s = mul i65 %OP2_V, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 76 [3/7] (2.11ns)   --->   "%p_Val2_1 = mul i65 %OP2_V_1, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 77 [4/7] (2.11ns)   --->   "%p_Val2_2 = mul i65 %OP2_V_2, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 78 [5/7] (2.11ns)   --->   "%p_Val2_3 = mul i65 %OP2_V_3, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 79 [6/7] (2.11ns)   --->   "%p_Val2_4 = mul i65 %OP2_V_4, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 80 [1/1] (0.00ns)   --->   "%OP2_V_5 = zext i32 %m_V_load_5 to i65" [pwm.cpp:57]
ST_8 : Operation 81 [7/7] (2.11ns)   --->   "%p_Val2_5 = mul i65 %OP2_V_5, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

 <State 9> : 2.12ns
ST_9 : Operation 82 [1/7] (2.11ns)   --->   "%p_Val2_s = mul i65 %OP2_V, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_35 = trunc i65 %p_Val2_s to i31" [pwm.cpp:57]
ST_9 : Operation 84 [2/7] (2.11ns)   --->   "%p_Val2_1 = mul i65 %OP2_V_1, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 85 [3/7] (2.11ns)   --->   "%p_Val2_2 = mul i65 %OP2_V_2, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 86 [4/7] (2.11ns)   --->   "%p_Val2_3 = mul i65 %OP2_V_3, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 87 [5/7] (2.11ns)   --->   "%p_Val2_4 = mul i65 %OP2_V_4, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 88 [6/7] (2.11ns)   --->   "%p_Val2_5 = mul i65 %OP2_V_5, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

 <State 10> : 3.40ns
ST_10 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_8 = sext i65 %p_Val2_s to i66" [pwm.cpp:57]
ST_10 : Operation 90 [1/1] (0.00ns)   --->   "%tmp_s = call i63 @_ssdm_op_BitConcatenate.i63.i32.i31(i32 %min_duty_V_read, i31 0)" [pwm.cpp:57]
ST_10 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_cast = zext i63 %tmp_s to i66" [pwm.cpp:57]
ST_10 : Operation 92 [2/2] (2.63ns)   --->   "%r_V_1 = add nsw i66 %tmp_8, %tmp_cast" [pwm.cpp:57]   --->   Core 15 'AddSubnS' <Latency = 1> <II = 1> <Delay = 2.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 93 [1/1] (2.47ns)   --->   "%tmp_5 = icmp eq i31 %tmp_35, 0" [pwm.cpp:57]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 94 [1/7] (2.11ns)   --->   "%p_Val2_1 = mul i65 %OP2_V_1, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_37 = trunc i65 %p_Val2_1 to i31" [pwm.cpp:57]
ST_10 : Operation 96 [2/7] (2.11ns)   --->   "%p_Val2_2 = mul i65 %OP2_V_2, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 97 [3/7] (2.11ns)   --->   "%p_Val2_3 = mul i65 %OP2_V_3, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 98 [4/7] (2.11ns)   --->   "%p_Val2_4 = mul i65 %OP2_V_4, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 99 [5/7] (2.11ns)   --->   "%p_Val2_5 = mul i65 %OP2_V_5, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 100 [1/1] (2.47ns)   --->   "%tmp = icmp ult i32 %accumulator_V_load, %min_duty_V_read" [pwm.cpp:60]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 101 [1/1] (2.47ns)   --->   "%tmp_4 = icmp ugt i32 %accumulator_V_load, %min_duty_V_read" [pwm.cpp:63]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 102 [1/1] (0.93ns)   --->   "%or_cond = and i1 %tmp_4, %tmp_6" [pwm.cpp:63]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

 <State 11> : 2.64ns
ST_11 : Operation 103 [1/2] (2.63ns)   --->   "%r_V_1 = add nsw i66 %tmp_8, %tmp_cast" [pwm.cpp:57]   --->   Core 15 'AddSubnS' <Latency = 1> <II = 1> <Delay = 2.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 104 [1/1] (0.00ns)   --->   "%tmp_9 = call i32 @_ssdm_op_PartSelect.i32.i66.i32.i32(i66 %r_V_1, i32 31, i32 62)" [pwm.cpp:57]
ST_11 : Operation 105 [1/1] (0.00ns)   --->   "%tmp_8_1 = sext i65 %p_Val2_1 to i66" [pwm.cpp:57]
ST_11 : Operation 106 [2/2] (2.63ns)   --->   "%r_V_1_1 = add nsw i66 %tmp_8_1, %tmp_cast" [pwm.cpp:57]   --->   Core 15 'AddSubnS' <Latency = 1> <II = 1> <Delay = 2.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 107 [1/1] (2.47ns)   --->   "%tmp_5_1 = icmp eq i31 %tmp_37, 0" [pwm.cpp:57]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 108 [1/7] (2.11ns)   --->   "%p_Val2_2 = mul i65 %OP2_V_2, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 109 [1/1] (0.00ns)   --->   "%tmp_39 = trunc i65 %p_Val2_2 to i31" [pwm.cpp:57]
ST_11 : Operation 110 [2/7] (2.11ns)   --->   "%p_Val2_3 = mul i65 %OP2_V_3, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 111 [3/7] (2.11ns)   --->   "%p_Val2_4 = mul i65 %OP2_V_4, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 112 [4/7] (2.11ns)   --->   "%p_Val2_5 = mul i65 %OP2_V_5, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

 <State 12> : 2.64ns
ST_12 : Operation 113 [1/1] (2.55ns)   --->   "%tmp_11 = add i32 1, %tmp_9" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 114 [1/2] (2.63ns)   --->   "%r_V_1_1 = add nsw i66 %tmp_8_1, %tmp_cast" [pwm.cpp:57]   --->   Core 15 'AddSubnS' <Latency = 1> <II = 1> <Delay = 2.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 115 [1/1] (0.00ns)   --->   "%tmp_14 = call i32 @_ssdm_op_PartSelect.i32.i66.i32.i32(i66 %r_V_1_1, i32 31, i32 62)" [pwm.cpp:57]
ST_12 : Operation 116 [1/1] (0.00ns)   --->   "%tmp_8_2 = sext i65 %p_Val2_2 to i66" [pwm.cpp:57]
ST_12 : Operation 117 [2/2] (2.63ns)   --->   "%r_V_1_2 = add nsw i66 %tmp_8_2, %tmp_cast" [pwm.cpp:57]   --->   Core 15 'AddSubnS' <Latency = 1> <II = 1> <Delay = 2.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 118 [1/1] (2.47ns)   --->   "%tmp_5_2 = icmp eq i31 %tmp_39, 0" [pwm.cpp:57]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 119 [1/7] (2.11ns)   --->   "%p_Val2_3 = mul i65 %OP2_V_3, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 120 [1/1] (0.00ns)   --->   "%tmp_41 = trunc i65 %p_Val2_3 to i31" [pwm.cpp:57]
ST_12 : Operation 121 [2/7] (2.11ns)   --->   "%p_Val2_4 = mul i65 %OP2_V_4, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 122 [3/7] (2.11ns)   --->   "%p_Val2_5 = mul i65 %OP2_V_5, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

 <State 13> : 2.64ns
ST_13 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node tmp_10)   --->   "%tmp_34 = call i1 @_ssdm_op_BitSelect.i1.i66.i32(i66 %r_V_1, i32 65)" [pwm.cpp:57]
ST_13 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node tmp_10)   --->   "%tmp_12 = select i1 %tmp_5, i32 %tmp_9, i32 %tmp_11" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node tmp_10)   --->   "%tmp_13 = select i1 %tmp_34, i32 %tmp_12, i32 %tmp_9" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 126 [1/1] (2.55ns)   --->   "%tmp_15 = add i32 1, %tmp_14" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 127 [1/2] (2.63ns)   --->   "%r_V_1_2 = add nsw i66 %tmp_8_2, %tmp_cast" [pwm.cpp:57]   --->   Core 15 'AddSubnS' <Latency = 1> <II = 1> <Delay = 2.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 128 [1/1] (0.00ns)   --->   "%tmp_18 = call i32 @_ssdm_op_PartSelect.i32.i66.i32.i32(i66 %r_V_1_2, i32 31, i32 62)" [pwm.cpp:57]
ST_13 : Operation 129 [1/1] (0.00ns)   --->   "%tmp_8_3 = sext i65 %p_Val2_3 to i66" [pwm.cpp:57]
ST_13 : Operation 130 [2/2] (2.63ns)   --->   "%r_V_1_3 = add nsw i66 %tmp_8_3, %tmp_cast" [pwm.cpp:57]   --->   Core 15 'AddSubnS' <Latency = 1> <II = 1> <Delay = 2.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 131 [1/1] (2.47ns)   --->   "%tmp_5_3 = icmp eq i31 %tmp_41, 0" [pwm.cpp:57]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 132 [1/7] (2.11ns)   --->   "%p_Val2_4 = mul i65 %OP2_V_4, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 133 [1/1] (0.00ns)   --->   "%tmp_43 = trunc i65 %p_Val2_4 to i31" [pwm.cpp:57]
ST_13 : Operation 134 [2/7] (2.11ns)   --->   "%p_Val2_5 = mul i65 %OP2_V_5, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 135 [1/1] (2.47ns) (out node of the LUT)   --->   "%tmp_10 = icmp ugt i32 %accumulator_V_load, %tmp_13" [pwm.cpp:65]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

 <State 14> : 2.64ns
ST_14 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node tmp_10_1)   --->   "%tmp_36 = call i1 @_ssdm_op_BitSelect.i1.i66.i32(i66 %r_V_1_1, i32 65)" [pwm.cpp:57]
ST_14 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node tmp_10_1)   --->   "%tmp_16 = select i1 %tmp_5_1, i32 %tmp_14, i32 %tmp_15" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node tmp_10_1)   --->   "%tmp_17 = select i1 %tmp_36, i32 %tmp_16, i32 %tmp_14" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 139 [1/1] (2.55ns)   --->   "%tmp_19 = add i32 1, %tmp_18" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 140 [1/2] (2.63ns)   --->   "%r_V_1_3 = add nsw i66 %tmp_8_3, %tmp_cast" [pwm.cpp:57]   --->   Core 15 'AddSubnS' <Latency = 1> <II = 1> <Delay = 2.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 141 [1/1] (0.00ns)   --->   "%tmp_22 = call i32 @_ssdm_op_PartSelect.i32.i66.i32.i32(i66 %r_V_1_3, i32 31, i32 62)" [pwm.cpp:57]
ST_14 : Operation 142 [1/1] (0.00ns)   --->   "%tmp_8_4 = sext i65 %p_Val2_4 to i66" [pwm.cpp:57]
ST_14 : Operation 143 [2/2] (2.63ns)   --->   "%r_V_1_4 = add nsw i66 %tmp_8_4, %tmp_cast" [pwm.cpp:57]   --->   Core 15 'AddSubnS' <Latency = 1> <II = 1> <Delay = 2.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 144 [1/1] (2.47ns)   --->   "%tmp_5_4 = icmp eq i31 %tmp_43, 0" [pwm.cpp:57]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 145 [1/7] (2.11ns)   --->   "%p_Val2_5 = mul i65 %OP2_V_5, %OP1_V" [pwm.cpp:57]   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 146 [1/1] (0.00ns)   --->   "%tmp_45 = trunc i65 %p_Val2_5 to i31" [pwm.cpp:57]
ST_14 : Operation 147 [1/1] (2.47ns) (out node of the LUT)   --->   "%tmp_10_1 = icmp ugt i32 %accumulator_V_load, %tmp_17" [pwm.cpp:65]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

 <State 15> : 2.64ns
ST_15 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node tmp_10_2)   --->   "%tmp_38 = call i1 @_ssdm_op_BitSelect.i1.i66.i32(i66 %r_V_1_2, i32 65)" [pwm.cpp:57]
ST_15 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node tmp_10_2)   --->   "%tmp_20 = select i1 %tmp_5_2, i32 %tmp_18, i32 %tmp_19" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node tmp_10_2)   --->   "%tmp_21 = select i1 %tmp_38, i32 %tmp_20, i32 %tmp_18" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 151 [1/1] (2.55ns)   --->   "%tmp_23 = add i32 1, %tmp_22" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 152 [1/2] (2.63ns)   --->   "%r_V_1_4 = add nsw i66 %tmp_8_4, %tmp_cast" [pwm.cpp:57]   --->   Core 15 'AddSubnS' <Latency = 1> <II = 1> <Delay = 2.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 153 [1/1] (0.00ns)   --->   "%tmp_26 = call i32 @_ssdm_op_PartSelect.i32.i66.i32.i32(i66 %r_V_1_4, i32 31, i32 62)" [pwm.cpp:57]
ST_15 : Operation 154 [1/1] (0.00ns)   --->   "%tmp_8_5 = sext i65 %p_Val2_5 to i66" [pwm.cpp:57]
ST_15 : Operation 155 [2/2] (2.63ns)   --->   "%r_V_1_5 = add nsw i66 %tmp_8_5, %tmp_cast" [pwm.cpp:57]   --->   Core 15 'AddSubnS' <Latency = 1> <II = 1> <Delay = 2.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 156 [1/1] (2.47ns)   --->   "%tmp_5_5 = icmp eq i31 %tmp_45, 0" [pwm.cpp:57]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 157 [1/1] (2.47ns) (out node of the LUT)   --->   "%tmp_10_2 = icmp ugt i32 %accumulator_V_load, %tmp_21" [pwm.cpp:65]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

 <State 16> : 2.64ns
ST_16 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node tmp_10_3)   --->   "%tmp_40 = call i1 @_ssdm_op_BitSelect.i1.i66.i32(i66 %r_V_1_3, i32 65)" [pwm.cpp:57]
ST_16 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node tmp_10_3)   --->   "%tmp_24 = select i1 %tmp_5_3, i32 %tmp_22, i32 %tmp_23" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_16 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node tmp_10_3)   --->   "%tmp_25 = select i1 %tmp_40, i32 %tmp_24, i32 %tmp_22" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_16 : Operation 161 [1/1] (2.55ns)   --->   "%tmp_27 = add i32 1, %tmp_26" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 162 [1/2] (2.63ns)   --->   "%r_V_1_5 = add nsw i66 %tmp_8_5, %tmp_cast" [pwm.cpp:57]   --->   Core 15 'AddSubnS' <Latency = 1> <II = 1> <Delay = 2.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 163 [1/1] (0.00ns)   --->   "%tmp_30 = call i32 @_ssdm_op_PartSelect.i32.i66.i32.i32(i66 %r_V_1_5, i32 31, i32 62)" [pwm.cpp:57]
ST_16 : Operation 164 [1/1] (2.47ns) (out node of the LUT)   --->   "%tmp_10_3 = icmp ugt i32 %accumulator_V_load, %tmp_25" [pwm.cpp:65]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

 <State 17> : 2.55ns
ST_17 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node tmp_10_4)   --->   "%tmp_42 = call i1 @_ssdm_op_BitSelect.i1.i66.i32(i66 %r_V_1_4, i32 65)" [pwm.cpp:57]
ST_17 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node tmp_10_4)   --->   "%tmp_28 = select i1 %tmp_5_4, i32 %tmp_26, i32 %tmp_27" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_17 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node tmp_10_4)   --->   "%tmp_29 = select i1 %tmp_42, i32 %tmp_28, i32 %tmp_26" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_17 : Operation 168 [1/1] (2.55ns)   --->   "%tmp_31 = add i32 1, %tmp_30" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 169 [1/1] (2.47ns) (out node of the LUT)   --->   "%tmp_10_4 = icmp ugt i32 %accumulator_V_load, %tmp_29" [pwm.cpp:65]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

 <State 18> : 2.47ns
ST_18 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node tmp_10_5)   --->   "%tmp_44 = call i1 @_ssdm_op_BitSelect.i1.i66.i32(i66 %r_V_1_5, i32 65)" [pwm.cpp:57]
ST_18 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node tmp_10_5)   --->   "%tmp_32 = select i1 %tmp_5_5, i32 %tmp_30, i32 %tmp_31" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node tmp_10_5)   --->   "%tmp_33 = select i1 %tmp_44, i32 %tmp_32, i32 %tmp_30" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 173 [1/1] (0.00ns)   --->   "%out_p_V_load = load i6* @out_p_V, align 1" [pwm.cpp:65]
ST_18 : Operation 174 [1/1] (1.37ns)   --->   "%p_out_p_V_load = select i1 %tmp, i6 -1, i6 %out_p_V_load" [pwm.cpp:60]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 175 [1/1] (2.47ns) (out node of the LUT)   --->   "%tmp_10_5 = icmp ugt i32 %accumulator_V_load, %tmp_33" [pwm.cpp:65]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 176 [1/1] (0.00ns) (grouped into LUT with out node p_out_p_V_flag_1)   --->   "%tmp1 = or i1 %or_cond, %tmp" [pwm.cpp:73]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 177 [1/1] (0.93ns) (out node of the LUT)   --->   "%p_out_p_V_flag_1 = or i1 %tmp2, %tmp1" [pwm.cpp:73]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 178 [1/1] (0.00ns)   --->   "br i1 %p_out_p_V_flag_1, label %mergeST, label %._crit_edge172.new" [pwm.cpp:73]

 <State 19> : 2.74ns
ST_19 : Operation 179 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %min_duty_V), !map !103"
ST_19 : Operation 180 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %max_duty_V), !map !109"
ST_19 : Operation 181 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %period_V), !map !113"
ST_19 : Operation 182 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([6 x i32]* %m_V), !map !117"
ST_19 : Operation 183 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i6* %out_V), !map !123"
ST_19 : Operation 184 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @pwm_str) nounwind"
ST_19 : Operation 185 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %min_duty_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [pwm.cpp:44]
ST_19 : Operation 186 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %max_duty_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [pwm.cpp:45]
ST_19 : Operation 187 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %period_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [pwm.cpp:46]
ST_19 : Operation 188 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecMemCore([6 x i32]* %m_V, [1 x i8]* @p_str4, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str4, i32 -1, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4)"
ST_19 : Operation 189 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([6 x i32]* %m_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"
ST_19 : Operation 190 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i6* %out_V, [8 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [pwm.cpp:48]
ST_19 : Operation 191 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [pwm.cpp:49]
ST_19 : Operation 192 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [pwm.cpp:50]
ST_19 : Operation 193 [1/1] (0.00ns) (grouped into LUT with out node tmp_15_5)   --->   "%tmp_12_1 = call i2 @_ssdm_op_BitConcatenate.i2.i1.i1(i1 %tmp_10_1, i1 false)" [pwm.cpp:65]
ST_19 : Operation 194 [1/1] (0.00ns) (grouped into LUT with out node tmp_15_5)   --->   "%tmp_12_1_cast = zext i2 %tmp_12_1 to i6" [pwm.cpp:65]
ST_19 : Operation 195 [1/1] (0.00ns) (grouped into LUT with out node tmp_15_5)   --->   "%tmp_14_1 = xor i6 %tmp_12_1_cast, -1" [pwm.cpp:65]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 196 [1/1] (0.00ns) (grouped into LUT with out node tmp_15_5)   --->   "%tmp5_demorgan = call i5 @_ssdm_op_BitConcatenate.i5.i1.i1.i1.i2(i1 %tmp_10_4, i1 %tmp_10_3, i1 %tmp_10_2, i2 0)" [pwm.cpp:65]
ST_19 : Operation 197 [1/1] (0.00ns) (grouped into LUT with out node tmp_15_5)   --->   "%tmp5_demorgan_cast = zext i5 %tmp5_demorgan to i6" [pwm.cpp:65]
ST_19 : Operation 198 [1/1] (0.00ns) (grouped into LUT with out node tmp_15_5)   --->   "%tmp5 = xor i6 %tmp5_demorgan_cast, -1" [pwm.cpp:65]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node tmp_15_5)   --->   "%tmp8 = and i6 %p_out_p_V_load, %tmp_14_1" [pwm.cpp:65]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 200 [1/1] (0.00ns) (grouped into LUT with out node tmp_15_5)   --->   "%tmp9_demorgan = call i6 @_ssdm_op_BitConcatenate.i6.i1.i4.i1(i1 %tmp_10_5, i4 0, i1 %tmp_10)" [pwm.cpp:65]
ST_19 : Operation 201 [1/1] (0.00ns) (grouped into LUT with out node tmp_15_5)   --->   "%tmp9 = xor i6 %tmp9_demorgan, -1" [pwm.cpp:65]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node tmp_15_5)   --->   "%tmp7 = and i6 %tmp8, %tmp9" [pwm.cpp:65]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 203 [1/1] (1.09ns) (out node of the LUT)   --->   "%tmp_15_5 = and i6 %tmp7, %tmp5" [pwm.cpp:65]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node p_out_p_V_new_1_4)   --->   "%out_p_V_new_1 = select i1 %or_cond, i6 %tmp_15_5, i6 -1" [pwm.cpp:63]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node p_out_p_V_loc_1)   --->   "%out_p_V_loc_1 = select i1 %or_cond, i6 %tmp_15_5, i6 %p_out_p_V_load" [pwm.cpp:63]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 206 [1/1] (1.37ns)   --->   "%p_out_p_V_new_1 = select i1 %tmp_3, i6 -1, i6 0" [pwm.cpp:73]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 207 [1/1] (1.37ns) (out node of the LUT)   --->   "%p_out_p_V_new_1_4 = select i1 %tmp2, i6 %p_out_p_V_new_1, i6 %out_p_V_new_1" [pwm.cpp:73]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 208 [1/1] (1.37ns) (out node of the LUT)   --->   "%p_out_p_V_loc_1 = select i1 %tmp2, i6 %p_out_p_V_new_1, i6 %out_p_V_loc_1" [pwm.cpp:73]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 209 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i6P(i6* %out_V, i6 %p_out_p_V_loc_1)" [pwm.cpp:82]
ST_19 : Operation 210 [1/1] (0.00ns)   --->   "store i6 %p_out_p_V_new_1_4, i6* @out_p_V, align 1" [pwm.cpp:61]
ST_19 : Operation 211 [1/1] (0.00ns)   --->   "br label %._crit_edge172.new"
ST_19 : Operation 212 [1/1] (0.00ns)   --->   "ret void" [pwm.cpp:84]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 0.5ns.

 <State 1>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('m_V_addr', pwm.cpp:57) [29]  (0 ns)
	'load' operation ('m_V_load', pwm.cpp:57) on array 'm_V' [30]  (2.32 ns)

 <State 2>: 3.4ns
The critical path consists of the following:
	'load' operation ('accumulator_V_load', pwm.cpp:60) on static variable 'accumulator_V' [109]  (0 ns)
	'icmp' operation ('tmp_1', pwm.cpp:68) [135]  (2.47 ns)
	'and' operation ('or_cond1', pwm.cpp:68) [137]  (0 ns)
	'or' operation ('tmp2', pwm.cpp:73) [140]  (0.931 ns)

 <State 3>: 2.32ns
The critical path consists of the following:
	'load' operation ('m_V_load_1', pwm.cpp:57) on array 'm_V' [45]  (2.32 ns)

 <State 4>: 2.32ns
The critical path consists of the following:
	'load' operation ('m_V_load_2', pwm.cpp:57) on array 'm_V' [58]  (2.32 ns)

 <State 5>: 2.32ns
The critical path consists of the following:
	'load' operation ('m_V_load_3', pwm.cpp:57) on array 'm_V' [71]  (2.32 ns)

 <State 6>: 2.55ns
The critical path consists of the following:
	'add' operation ('accumulator_V_load_o', pwm.cpp:80) [145]  (2.55 ns)

 <State 7>: 2.32ns
The critical path consists of the following:
	'load' operation ('m_V_load_5', pwm.cpp:57) on array 'm_V' [97]  (2.32 ns)

 <State 8>: 2.12ns
The critical path consists of the following:
	'mul' operation ('p_Val2_s', pwm.cpp:57) [32]  (2.12 ns)

 <State 9>: 2.12ns
The critical path consists of the following:
	'mul' operation ('p_Val2_s', pwm.cpp:57) [32]  (2.12 ns)

 <State 10>: 3.4ns
The critical path consists of the following:
	'icmp' operation ('tmp_4', pwm.cpp:63) [113]  (2.47 ns)
	'and' operation ('or_cond', pwm.cpp:63) [115]  (0.931 ns)

 <State 11>: 2.64ns
The critical path consists of the following:
	'add' operation ('r_V_1', pwm.cpp:57) [36]  (2.64 ns)

 <State 12>: 2.64ns
The critical path consists of the following:
	'add' operation ('r_V_1_1', pwm.cpp:57) [49]  (2.64 ns)

 <State 13>: 2.64ns
The critical path consists of the following:
	'add' operation ('r_V_1_2', pwm.cpp:57) [62]  (2.64 ns)

 <State 14>: 2.64ns
The critical path consists of the following:
	'add' operation ('r_V_1_3', pwm.cpp:57) [75]  (2.64 ns)

 <State 15>: 2.64ns
The critical path consists of the following:
	'add' operation ('r_V_1_4', pwm.cpp:57) [88]  (2.64 ns)

 <State 16>: 2.64ns
The critical path consists of the following:
	'add' operation ('r_V_1_5', pwm.cpp:57) [101]  (2.64 ns)

 <State 17>: 2.55ns
The critical path consists of the following:
	'add' operation ('tmp_31', pwm.cpp:57) [106]  (2.55 ns)

 <State 18>: 2.47ns
The critical path consists of the following:
	'select' operation ('tmp_33', pwm.cpp:57) [108]  (0 ns)
	'icmp' operation ('tmp_10_5', pwm.cpp:65) [124]  (2.47 ns)

 <State 19>: 2.74ns
The critical path consists of the following:
	'select' operation ('p_out_p_V_new_1', pwm.cpp:73) [142]  (1.37 ns)
	'select' operation ('p_out_p_V_new_1_4', pwm.cpp:73) [143]  (1.37 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
