

================================================================
== Vivado HLS Report for 'pwm'
================================================================
* Date:           Thu Aug  9 10:06:35 2018

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        pwm
* Solution:       pwm
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.00|      3.89|        0.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |   12|   12|    6|    6| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 6, depth = 13


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 1
  Pipeline-0 : II = 6, D = 13, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 

* FSM state operations: 

 <State 1> : 2.32ns
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%m_V_addr = getelementptr [6 x i16]* %m_V, i64 0, i64 0" [pwm.cpp:57]
ST_1 : Operation 15 [2/2] (2.32ns)   --->   "%m_V_load = load i16* %m_V_addr, align 2" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>

 <State 2> : 3.43ns
ST_2 : Operation 16 [1/1] (1.00ns)   --->   "%period_V_read = call i16 @_ssdm_op_Read.s_axilite.i16(i16 %period_V)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 17 [1/1] (1.00ns)   --->   "%max_duty_V_read = call i16 @_ssdm_op_Read.s_axilite.i16(i16 %max_duty_V)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 18 [1/1] (1.00ns)   --->   "%min_duty_V_read = call i16 @_ssdm_op_Read.s_axilite.i16(i16 %min_duty_V)"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%lhs_V = zext i16 %max_duty_V_read to i17" [pwm.cpp:57]
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%rhs_V = zext i16 %min_duty_V_read to i17" [pwm.cpp:57]
ST_2 : Operation 21 [1/1] (2.07ns)   --->   "%r_V = sub i17 %lhs_V, %rhs_V" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/2] (2.32ns)   --->   "%m_V_load = load i16* %m_V_addr, align 2" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%m_V_addr_1 = getelementptr [6 x i16]* %m_V, i64 0, i64 1" [pwm.cpp:57]
ST_2 : Operation 24 [2/2] (2.32ns)   --->   "%m_V_load_1 = load i16* %m_V_addr_1, align 2" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%acc_V_load = load i16* @acc_V, align 2" [pwm.cpp:62]
ST_2 : Operation 26 [1/1] (2.42ns)   --->   "%tmp_2 = icmp ult i16 %acc_V_load, %max_duty_V_read" [pwm.cpp:62]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (2.42ns)   --->   "%tmp_10 = icmp ult i16 %acc_V_load, %period_V_read" [pwm.cpp:65]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

 <State 3> : 3.89ns
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%OP1_V = sext i17 %r_V to i33" [pwm.cpp:57]
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%OP2_V = sext i16 %m_V_load to i33" [pwm.cpp:57]
ST_3 : Operation 30 [3/3] (3.89ns)   --->   "%p_Val2_s = mul nsw i33 %OP1_V, %OP2_V" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 31 [1/2] (2.32ns)   --->   "%m_V_load_1 = load i16* %m_V_addr_1, align 2" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%m_V_addr_2 = getelementptr [6 x i16]* %m_V, i64 0, i64 2" [pwm.cpp:57]
ST_3 : Operation 33 [2/2] (2.32ns)   --->   "%m_V_load_2 = load i16* %m_V_addr_2, align 2" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_3 : Operation 34 [1/1] (2.07ns)   --->   "%tmp_12 = add i16 1, %acc_V_load" [pwm.cpp:65]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (1.37ns)   --->   "%tmp_18_s = select i1 %tmp_10, i16 %tmp_12, i16 0" [pwm.cpp:65]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "store i16 %tmp_18_s, i16* @acc_V, align 2" [pwm.cpp:65]

 <State 4> : 3.89ns
ST_4 : Operation 37 [2/3] (3.89ns)   --->   "%p_Val2_s = mul nsw i33 %OP1_V, %OP2_V" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%OP2_V_1 = sext i16 %m_V_load_1 to i33" [pwm.cpp:57]
ST_4 : Operation 39 [3/3] (3.89ns)   --->   "%p_Val2_1 = mul nsw i33 %OP1_V, %OP2_V_1" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 40 [1/2] (2.32ns)   --->   "%m_V_load_2 = load i16* %m_V_addr_2, align 2" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%m_V_addr_3 = getelementptr [6 x i16]* %m_V, i64 0, i64 3" [pwm.cpp:57]
ST_4 : Operation 42 [2/2] (2.32ns)   --->   "%m_V_load_3 = load i16* %m_V_addr_3, align 2" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>

 <State 5> : 3.89ns
ST_5 : Operation 43 [1/3] (0.00ns)   --->   "%p_Val2_s = mul nsw i33 %OP1_V, %OP2_V" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_37 = trunc i33 %p_Val2_s to i15" [pwm.cpp:57]
ST_5 : Operation 45 [2/3] (3.89ns)   --->   "%p_Val2_1 = mul nsw i33 %OP1_V, %OP2_V_1" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 46 [1/1] (0.00ns)   --->   "%OP2_V_2 = sext i16 %m_V_load_2 to i33" [pwm.cpp:57]
ST_5 : Operation 47 [3/3] (3.89ns)   --->   "%p_Val2_2 = mul nsw i33 %OP1_V, %OP2_V_2" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 48 [1/2] (2.32ns)   --->   "%m_V_load_3 = load i16* %m_V_addr_3, align 2" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_5 : Operation 49 [1/1] (0.00ns)   --->   "%m_V_addr_4 = getelementptr [6 x i16]* %m_V, i64 0, i64 4" [pwm.cpp:57]
ST_5 : Operation 50 [2/2] (2.32ns)   --->   "%m_V_load_4 = load i16* %m_V_addr_4, align 2" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>

 <State 6> : 3.89ns
ST_6 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_6 = call i31 @_ssdm_op_BitConcatenate.i31.i16.i15(i16 %min_duty_V_read, i15 0)" [pwm.cpp:57]
ST_6 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_6_cast = zext i31 %tmp_6 to i33" [pwm.cpp:57]
ST_6 : Operation 53 [1/1] (2.59ns)   --->   "%r_V_1 = add i33 %tmp_6_cast, %p_Val2_s" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 54 [1/1] (2.31ns)   --->   "%tmp_9 = icmp eq i15 %tmp_37, 0" [pwm.cpp:57]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_5 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_1, i32 15, i32 30)" [pwm.cpp:57]
ST_6 : Operation 56 [1/3] (0.00ns)   --->   "%p_Val2_1 = mul nsw i33 %OP1_V, %OP2_V_1" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_39 = trunc i33 %p_Val2_1 to i15" [pwm.cpp:57]
ST_6 : Operation 58 [2/3] (3.89ns)   --->   "%p_Val2_2 = mul nsw i33 %OP1_V, %OP2_V_2" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 59 [1/1] (0.00ns)   --->   "%OP2_V_3 = sext i16 %m_V_load_3 to i33" [pwm.cpp:57]
ST_6 : Operation 60 [3/3] (3.89ns)   --->   "%p_Val2_s_4 = mul nsw i33 %OP1_V, %OP2_V_3" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 61 [1/2] (2.32ns)   --->   "%m_V_load_4 = load i16* %m_V_addr_4, align 2" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_6 : Operation 62 [1/1] (0.00ns)   --->   "%m_V_addr_5 = getelementptr [6 x i16]* %m_V, i64 0, i64 5" [pwm.cpp:57]
ST_6 : Operation 63 [2/2] (2.32ns)   --->   "%m_V_load_5 = load i16* %m_V_addr_5, align 2" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>
ST_6 : Operation 64 [1/1] (2.42ns)   --->   "%tmp = icmp ult i16 %acc_V_load, %min_duty_V_read" [pwm.cpp:62]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

 <State 7> : 3.89ns
ST_7 : Operation 65 [1/1] (2.07ns)   --->   "%tmp_13 = add i16 1, %tmp_5" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 66 [1/1] (2.59ns)   --->   "%r_V_1_1 = add i33 %tmp_6_cast, %p_Val2_1" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 67 [1/1] (2.31ns)   --->   "%tmp_9_1 = icmp eq i15 %tmp_39, 0" [pwm.cpp:57]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_16 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_1_1, i32 15, i32 30)" [pwm.cpp:57]
ST_7 : Operation 69 [1/3] (0.00ns)   --->   "%p_Val2_2 = mul nsw i33 %OP1_V, %OP2_V_2" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_41 = trunc i33 %p_Val2_2 to i15" [pwm.cpp:57]
ST_7 : Operation 71 [2/3] (3.89ns)   --->   "%p_Val2_s_4 = mul nsw i33 %OP1_V, %OP2_V_3" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 72 [1/1] (0.00ns)   --->   "%OP2_V_4 = sext i16 %m_V_load_4 to i33" [pwm.cpp:57]
ST_7 : Operation 73 [3/3] (3.89ns)   --->   "%p_Val2_4 = mul nsw i33 %OP1_V, %OP2_V_4" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 74 [1/2] (2.32ns)   --->   "%m_V_load_5 = load i16* %m_V_addr_5, align 2" [pwm.cpp:57]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 16> <Depth = 6> <RAM>

 <State 8> : 3.89ns
ST_8 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node tmp_s)   --->   "%tmp_36 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_1, i32 32)" [pwm.cpp:57]
ST_8 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node tmp_s)   --->   "%tmp_14 = select i1 %tmp_9, i16 %tmp_5, i16 %tmp_13" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node tmp_s)   --->   "%tmp_15 = select i1 %tmp_36, i16 %tmp_14, i16 %tmp_5" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 78 [1/1] (2.07ns)   --->   "%tmp_17 = add i16 1, %tmp_16" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 79 [1/1] (2.59ns)   --->   "%r_V_1_2 = add i33 %tmp_6_cast, %p_Val2_2" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 80 [1/1] (2.31ns)   --->   "%tmp_9_2 = icmp eq i15 %tmp_41, 0" [pwm.cpp:57]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 81 [1/1] (0.00ns)   --->   "%tmp_20 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_1_2, i32 15, i32 30)" [pwm.cpp:57]
ST_8 : Operation 82 [1/3] (0.00ns)   --->   "%p_Val2_s_4 = mul nsw i33 %OP1_V, %OP2_V_3" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_43 = trunc i33 %p_Val2_s_4 to i15" [pwm.cpp:57]
ST_8 : Operation 84 [2/3] (3.89ns)   --->   "%p_Val2_4 = mul nsw i33 %OP1_V, %OP2_V_4" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 85 [1/1] (0.00ns)   --->   "%OP2_V_5 = sext i16 %m_V_load_5 to i33" [pwm.cpp:57]
ST_8 : Operation 86 [3/3] (3.89ns)   --->   "%p_Val2_5 = mul nsw i33 %OP1_V, %OP2_V_5" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 87 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_s = icmp ult i16 %acc_V_load, %tmp_15" [pwm.cpp:62]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

 <State 9> : 3.89ns
ST_9 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node tmp_12_1)   --->   "%tmp_38 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_1_1, i32 32)" [pwm.cpp:57]
ST_9 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node tmp_12_1)   --->   "%tmp_18 = select i1 %tmp_9_1, i16 %tmp_16, i16 %tmp_17" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node tmp_12_1)   --->   "%tmp_19 = select i1 %tmp_38, i16 %tmp_18, i16 %tmp_16" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 91 [1/1] (2.07ns)   --->   "%tmp_21 = add i16 1, %tmp_20" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 92 [1/1] (2.59ns)   --->   "%r_V_1_3 = add i33 %tmp_6_cast, %p_Val2_s_4" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 93 [1/1] (2.31ns)   --->   "%tmp_9_3 = icmp eq i15 %tmp_43, 0" [pwm.cpp:57]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_24 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_1_3, i32 15, i32 30)" [pwm.cpp:57]
ST_9 : Operation 95 [1/3] (0.00ns)   --->   "%p_Val2_4 = mul nsw i33 %OP1_V, %OP2_V_4" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_45 = trunc i33 %p_Val2_4 to i15" [pwm.cpp:57]
ST_9 : Operation 97 [2/3] (3.89ns)   --->   "%p_Val2_5 = mul nsw i33 %OP1_V, %OP2_V_5" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 98 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_12_1 = icmp ult i16 %acc_V_load, %tmp_19" [pwm.cpp:62]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

 <State 10> : 2.59ns
ST_10 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node tmp_12_2)   --->   "%tmp_40 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_1_2, i32 32)" [pwm.cpp:57]
ST_10 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node tmp_12_2)   --->   "%tmp_22 = select i1 %tmp_9_2, i16 %tmp_20, i16 %tmp_21" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node tmp_12_2)   --->   "%tmp_23 = select i1 %tmp_40, i16 %tmp_22, i16 %tmp_20" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 102 [1/1] (2.07ns)   --->   "%tmp_25 = add i16 1, %tmp_24" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 103 [1/1] (2.59ns)   --->   "%r_V_1_4 = add i33 %tmp_6_cast, %p_Val2_4" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 104 [1/1] (2.31ns)   --->   "%tmp_9_4 = icmp eq i15 %tmp_45, 0" [pwm.cpp:57]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 105 [1/1] (0.00ns)   --->   "%tmp_28 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_1_4, i32 15, i32 30)" [pwm.cpp:57]
ST_10 : Operation 106 [1/3] (0.00ns)   --->   "%p_Val2_5 = mul nsw i33 %OP1_V, %OP2_V_5" [pwm.cpp:57]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.89> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 107 [1/1] (0.00ns)   --->   "%tmp_47 = trunc i33 %p_Val2_5 to i15" [pwm.cpp:57]
ST_10 : Operation 108 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_12_2 = icmp ult i16 %acc_V_load, %tmp_23" [pwm.cpp:62]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

 <State 11> : 2.59ns
ST_11 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node tmp_12_3)   --->   "%tmp_42 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_1_3, i32 32)" [pwm.cpp:57]
ST_11 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node tmp_12_3)   --->   "%tmp_26 = select i1 %tmp_9_3, i16 %tmp_24, i16 %tmp_25" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node tmp_12_3)   --->   "%tmp_27 = select i1 %tmp_42, i16 %tmp_26, i16 %tmp_24" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 112 [1/1] (2.07ns)   --->   "%tmp_29 = add i16 1, %tmp_28" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 113 [1/1] (2.59ns)   --->   "%r_V_1_5 = add i33 %tmp_6_cast, %p_Val2_5" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 114 [1/1] (2.31ns)   --->   "%tmp_9_5 = icmp eq i15 %tmp_47, 0" [pwm.cpp:57]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 115 [1/1] (0.00ns)   --->   "%tmp_32 = call i16 @_ssdm_op_PartSelect.i16.i33.i32.i32(i33 %r_V_1_5, i32 15, i32 30)" [pwm.cpp:57]
ST_11 : Operation 116 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_12_3 = icmp ult i16 %acc_V_load, %tmp_27" [pwm.cpp:62]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

 <State 12> : 2.43ns
ST_12 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node tmp_12_4)   --->   "%tmp_44 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_1_4, i32 32)" [pwm.cpp:57]
ST_12 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node tmp_12_4)   --->   "%tmp_30 = select i1 %tmp_9_4, i16 %tmp_28, i16 %tmp_29" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node tmp_12_4)   --->   "%tmp_31 = select i1 %tmp_44, i16 %tmp_30, i16 %tmp_28" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 120 [1/1] (2.07ns)   --->   "%tmp_33 = add i16 1, %tmp_32" [pwm.cpp:57]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 121 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_12_4 = icmp ult i16 %acc_V_load, %tmp_31" [pwm.cpp:62]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

 <State 13> : 3.36ns
ST_13 : Operation 122 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %min_duty_V), !map !111"
ST_13 : Operation 123 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %max_duty_V), !map !117"
ST_13 : Operation 124 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %period_V), !map !121"
ST_13 : Operation 125 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([6 x i16]* %m_V), !map !125"
ST_13 : Operation 126 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i6* %out_V), !map !131"
ST_13 : Operation 127 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @pwm_str) nounwind"
ST_13 : Operation 128 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16 %min_duty_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [pwm.cpp:44]
ST_13 : Operation 129 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16 %max_duty_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [pwm.cpp:45]
ST_13 : Operation 130 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16 %period_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [pwm.cpp:46]
ST_13 : Operation 131 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecMemCore([6 x i16]* %m_V, [1 x i8]* @p_str4, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str4, i32 -1, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4)"
ST_13 : Operation 132 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([6 x i16]* %m_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"
ST_13 : Operation 133 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i6* %out_V, [8 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [pwm.cpp:48]
ST_13 : Operation 134 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [pwm.cpp:49]
ST_13 : Operation 135 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [pwm.cpp:50]
ST_13 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node tmp_12_5)   --->   "%tmp_46 = call i1 @_ssdm_op_BitSelect.i1.i33.i32(i33 %r_V_1_5, i32 32)" [pwm.cpp:57]
ST_13 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node tmp_12_5)   --->   "%tmp_34 = select i1 %tmp_9_5, i16 %tmp_32, i16 %tmp_33" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node tmp_12_5)   --->   "%tmp_35 = select i1 %tmp_46, i16 %tmp_34, i16 %tmp_32" [pwm.cpp:57]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 139 [1/1] (0.00ns)   --->   "%out_p_V_load = load i6* @out_p_V, align 1" [pwm.cpp:62]
ST_13 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_0_trunc)   --->   "%tmp_48 = trunc i6 %out_p_V_load to i1" [pwm.cpp:62]
ST_13 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_0_trunc)   --->   "%tmp_15_s = and i1 %tmp_48, %tmp_s" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_0_trunc)   --->   "%tmp_1 = or i1 %tmp_15_s, %tmp" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 143 [1/1] (0.93ns) (out node of the LUT)   --->   "%p_Repl2_0_trunc = and i1 %tmp_1, %tmp_2" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1_trunc)   --->   "%tmp_49 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %out_p_V_load, i32 1)" [pwm.cpp:62]
ST_13 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1_trunc)   --->   "%tmp_15_1 = and i1 %tmp_49, %tmp_12_1" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1_trunc)   --->   "%tmp_3 = or i1 %tmp_15_1, %tmp" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 147 [1/1] (0.93ns) (out node of the LUT)   --->   "%p_Repl2_1_trunc = and i1 %tmp_3, %tmp_2" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_2_trunc)   --->   "%tmp_50 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %out_p_V_load, i32 2)" [pwm.cpp:62]
ST_13 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_2_trunc)   --->   "%tmp_15_2 = and i1 %tmp_50, %tmp_12_2" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_2_trunc)   --->   "%tmp_4 = or i1 %tmp_15_2, %tmp" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 151 [1/1] (0.93ns) (out node of the LUT)   --->   "%p_Repl2_2_trunc = and i1 %tmp_4, %tmp_2" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_3_trunc)   --->   "%tmp_51 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %out_p_V_load, i32 3)" [pwm.cpp:62]
ST_13 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_3_trunc)   --->   "%tmp_15_3 = and i1 %tmp_51, %tmp_12_3" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_3_trunc)   --->   "%tmp_7 = or i1 %tmp_15_3, %tmp" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 155 [1/1] (0.93ns) (out node of the LUT)   --->   "%p_Repl2_3_trunc = and i1 %tmp_7, %tmp_2" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_4_trunc)   --->   "%tmp_52 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %out_p_V_load, i32 4)" [pwm.cpp:62]
ST_13 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_4_trunc)   --->   "%tmp_15_4 = and i1 %tmp_52, %tmp_12_4" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_4_trunc)   --->   "%tmp_8 = or i1 %tmp_15_4, %tmp" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 159 [1/1] (0.93ns) (out node of the LUT)   --->   "%p_Repl2_4_trunc = and i1 %tmp_8, %tmp_2" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 160 [1/1] (2.42ns) (out node of the LUT)   --->   "%tmp_12_5 = icmp ult i16 %acc_V_load, %tmp_35" [pwm.cpp:62]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_5_trunc)   --->   "%tmp_53 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %out_p_V_load, i32 5)" [pwm.cpp:62]
ST_13 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_5_trunc)   --->   "%tmp_15_5 = and i1 %tmp_53, %tmp_12_5" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_5_trunc)   --->   "%tmp_11 = or i1 %tmp_15_5, %tmp" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 164 [1/1] (0.93ns) (out node of the LUT)   --->   "%p_Repl2_5_trunc = and i1 %tmp_11, %tmp_2" [pwm.cpp:62]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 165 [1/1] (0.00ns)   --->   "%p_Result_4_5 = call i6 @_ssdm_op_BitConcatenate.i6.i1.i1.i1.i1.i1.i1(i1 %p_Repl2_5_trunc, i1 %p_Repl2_4_trunc, i1 %p_Repl2_3_trunc, i1 %p_Repl2_2_trunc, i1 %p_Repl2_1_trunc, i1 %p_Repl2_0_trunc)" [pwm.cpp:62]
ST_13 : Operation 166 [1/1] (0.00ns)   --->   "store i6 %p_Result_4_5, i6* @out_p_V, align 1" [pwm.cpp:62]
ST_13 : Operation 167 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i6P(i6* %out_V, i6 %p_Result_4_5)" [pwm.cpp:67]
ST_13 : Operation 168 [1/1] (0.00ns)   --->   "ret void" [pwm.cpp:69]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 0.5ns.

 <State 1>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('m_V_addr', pwm.cpp:57) [29]  (0 ns)
	'load' operation ('m_V_load', pwm.cpp:57) on array 'm_V' [30]  (2.32 ns)

 <State 2>: 3.43ns
The critical path consists of the following:
	s_axi read on port 'period_V' [14]  (1 ns)
	'icmp' operation ('tmp_10', pwm.cpp:65) [139]  (2.43 ns)

 <State 3>: 3.89ns
The critical path consists of the following:
	'mul' operation ('p_Val2_s', pwm.cpp:57) [32]  (3.89 ns)

 <State 4>: 3.89ns
The critical path consists of the following:
	'mul' operation ('p_Val2_s', pwm.cpp:57) [32]  (3.89 ns)

 <State 5>: 3.89ns
The critical path consists of the following:
	'mul' operation ('p_Val2_1', pwm.cpp:57) [46]  (3.89 ns)

 <State 6>: 3.89ns
The critical path consists of the following:
	'mul' operation ('p_Val2_2', pwm.cpp:57) [58]  (3.89 ns)

 <State 7>: 3.89ns
The critical path consists of the following:
	'mul' operation ('p_Val2_s_4', pwm.cpp:57) [70]  (3.89 ns)

 <State 8>: 3.89ns
The critical path consists of the following:
	'mul' operation ('p_Val2_4', pwm.cpp:57) [82]  (3.89 ns)

 <State 9>: 3.89ns
The critical path consists of the following:
	'mul' operation ('p_Val2_5', pwm.cpp:57) [94]  (3.89 ns)

 <State 10>: 2.59ns
The critical path consists of the following:
	'add' operation ('r_V_1_4', pwm.cpp:57) [83]  (2.59 ns)

 <State 11>: 2.59ns
The critical path consists of the following:
	'add' operation ('r_V_1_5', pwm.cpp:57) [95]  (2.59 ns)

 <State 12>: 2.43ns
The critical path consists of the following:
	'select' operation ('tmp_31', pwm.cpp:57) [90]  (0 ns)
	'icmp' operation ('tmp_12_4', pwm.cpp:62) [127]  (2.43 ns)

 <State 13>: 3.36ns
The critical path consists of the following:
	'select' operation ('tmp_35', pwm.cpp:57) [102]  (0 ns)
	'icmp' operation ('tmp_12_5', pwm.cpp:62) [132]  (2.43 ns)
	'and' operation ('tmp_15_5', pwm.cpp:62) [134]  (0 ns)
	'or' operation ('tmp_11', pwm.cpp:62) [135]  (0 ns)
	'and' operation ('p_Repl2_5_trunc', pwm.cpp:62) [136]  (0.931 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
