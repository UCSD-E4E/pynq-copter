// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pwm_HH_
#define _pwm_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "pwm_mul_mul_16s_1bkb.h"
#include "pwm_ctrl_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CTRL_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CTRL_DATA_WIDTH = 32>
struct pwm : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_lv<6> > out_V;
    sc_in< sc_logic > s_axi_ctrl_AWVALID;
    sc_out< sc_logic > s_axi_ctrl_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_ctrl_AWADDR;
    sc_in< sc_logic > s_axi_ctrl_WVALID;
    sc_out< sc_logic > s_axi_ctrl_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_ctrl_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH/8> > s_axi_ctrl_WSTRB;
    sc_in< sc_logic > s_axi_ctrl_ARVALID;
    sc_out< sc_logic > s_axi_ctrl_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_ctrl_ARADDR;
    sc_out< sc_logic > s_axi_ctrl_RVALID;
    sc_in< sc_logic > s_axi_ctrl_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_ctrl_RDATA;
    sc_out< sc_lv<2> > s_axi_ctrl_RRESP;
    sc_out< sc_logic > s_axi_ctrl_BVALID;
    sc_in< sc_logic > s_axi_ctrl_BREADY;
    sc_out< sc_lv<2> > s_axi_ctrl_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    pwm(sc_module_name name);
    SC_HAS_PROCESS(pwm);

    ~pwm();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    pwm_ctrl_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>* pwm_ctrl_s_axi_U;
    pwm_mul_mul_16s_1bkb<1,3,16,17,33>* pwm_mul_mul_16s_1bkb_U1;
    pwm_mul_mul_16s_1bkb<1,3,16,17,33>* pwm_mul_mul_16s_1bkb_U2;
    pwm_mul_mul_16s_1bkb<1,3,16,17,33>* pwm_mul_mul_16s_1bkb_U3;
    pwm_mul_mul_16s_1bkb<1,3,16,17,33>* pwm_mul_mul_16s_1bkb_U4;
    pwm_mul_mul_16s_1bkb<1,3,16,17,33>* pwm_mul_mul_16s_1bkb_U5;
    pwm_mul_mul_16s_1bkb<1,3,16,17,33>* pwm_mul_mul_16s_1bkb_U6;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_state6_pp0_stage5_iter0;
    sc_signal< bool > ap_block_state12_pp0_stage5_iter1;
    sc_signal< bool > ap_block_pp0_stage5_11001;
    sc_signal< sc_lv<16> > min_duty_V;
    sc_signal< sc_lv<16> > max_duty_V;
    sc_signal< sc_lv<16> > period_V;
    sc_signal< sc_lv<3> > m_V_address0;
    sc_signal< sc_logic > m_V_ce0;
    sc_signal< sc_lv<16> > m_V_q0;
    sc_signal< sc_lv<16> > accumulator_V;
    sc_signal< sc_lv<6> > out_p_V;
    sc_signal< sc_lv<16> > reg_175;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state2_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state14_pp0_stage1_iter2;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state3_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state9_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state4_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage3_iter1;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state5_pp0_stage4_iter0;
    sc_signal< bool > ap_block_state11_pp0_stage4_iter1;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<16> > min_duty_V_read_reg_776;
    sc_signal< sc_lv<17> > r_V_fu_187_p2;
    sc_signal< sc_lv<17> > r_V_reg_783;
    sc_signal< sc_lv<16> > accumulator_V_load_reg_793;
    sc_signal< sc_lv<16> > ap_reg_pp0_iter1_accumulator_V_load_reg_793;
    sc_signal< sc_lv<1> > tmp_6_fu_197_p2;
    sc_signal< sc_lv<1> > tmp_6_reg_806;
    sc_signal< sc_lv<1> > tmp_1_fu_203_p2;
    sc_signal< sc_lv<1> > tmp_1_reg_811;
    sc_signal< sc_lv<1> > tmp_2_fu_209_p2;
    sc_signal< sc_lv<1> > tmp_2_reg_816;
    sc_signal< sc_lv<1> > tmp_3_fu_215_p2;
    sc_signal< sc_lv<1> > tmp_3_reg_821;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_tmp_3_reg_821;
    sc_signal< sc_lv<33> > OP1_V_fu_221_p1;
    sc_signal< sc_lv<33> > OP1_V_reg_828;
    sc_signal< sc_lv<1> > tmp2_fu_232_p2;
    sc_signal< sc_lv<1> > tmp2_reg_848;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_tmp2_reg_848;
    sc_signal< sc_lv<33> > grp_fu_734_p2;
    sc_signal< sc_lv<33> > p_Val2_s_reg_865;
    sc_signal< sc_lv<15> > tmp_34_fu_241_p1;
    sc_signal< sc_lv<15> > tmp_34_reg_870;
    sc_signal< sc_lv<33> > tmp_cast_fu_255_p1;
    sc_signal< sc_lv<33> > tmp_cast_reg_885;
    sc_signal< sc_lv<33> > r_V_1_fu_259_p2;
    sc_signal< sc_lv<33> > r_V_1_reg_894;
    sc_signal< sc_lv<1> > tmp_5_fu_264_p2;
    sc_signal< sc_lv<1> > tmp_5_reg_899;
    sc_signal< sc_lv<16> > tmp_9_reg_904;
    sc_signal< sc_lv<33> > grp_fu_741_p2;
    sc_signal< sc_lv<33> > p_Val2_1_reg_911;
    sc_signal< sc_lv<15> > tmp_36_fu_279_p1;
    sc_signal< sc_lv<15> > tmp_36_reg_916;
    sc_signal< sc_lv<1> > tmp_fu_286_p2;
    sc_signal< sc_lv<1> > tmp_reg_931;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_tmp_reg_931;
    sc_signal< sc_lv<1> > or_cond_fu_294_p2;
    sc_signal< sc_lv<1> > or_cond_reg_937;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_or_cond_reg_937;
    sc_signal< sc_lv<16> > tmp_8_fu_299_p2;
    sc_signal< sc_lv<16> > tmp_8_reg_944;
    sc_signal< sc_lv<33> > r_V_1_1_fu_304_p2;
    sc_signal< sc_lv<33> > r_V_1_1_reg_949;
    sc_signal< sc_lv<1> > tmp_5_1_fu_308_p2;
    sc_signal< sc_lv<1> > tmp_5_1_reg_954;
    sc_signal< sc_lv<16> > tmp_13_reg_959;
    sc_signal< sc_lv<33> > grp_fu_747_p2;
    sc_signal< sc_lv<33> > p_Val2_2_reg_966;
    sc_signal< sc_lv<15> > tmp_38_fu_323_p1;
    sc_signal< sc_lv<15> > tmp_38_reg_971;
    sc_signal< sc_lv<16> > tmp_14_fu_367_p2;
    sc_signal< sc_lv<16> > tmp_14_reg_981;
    sc_signal< sc_lv<33> > r_V_1_2_fu_372_p2;
    sc_signal< sc_lv<33> > r_V_1_2_reg_986;
    sc_signal< sc_lv<1> > tmp_5_2_fu_376_p2;
    sc_signal< sc_lv<1> > tmp_5_2_reg_991;
    sc_signal< sc_lv<16> > tmp_17_reg_996;
    sc_signal< sc_lv<33> > grp_fu_753_p2;
    sc_signal< sc_lv<33> > p_Val2_3_reg_1003;
    sc_signal< sc_lv<15> > tmp_40_fu_391_p1;
    sc_signal< sc_lv<15> > tmp_40_reg_1008;
    sc_signal< sc_lv<1> > tmp_10_fu_398_p2;
    sc_signal< sc_lv<1> > tmp_10_reg_1018;
    sc_signal< sc_lv<16> > tmp_18_fu_422_p2;
    sc_signal< sc_lv<16> > tmp_18_reg_1023;
    sc_signal< sc_lv<33> > r_V_1_3_fu_427_p2;
    sc_signal< sc_lv<33> > r_V_1_3_reg_1028;
    sc_signal< sc_lv<1> > tmp_5_3_fu_431_p2;
    sc_signal< sc_lv<1> > tmp_5_3_reg_1033;
    sc_signal< sc_lv<16> > tmp_21_reg_1038;
    sc_signal< sc_lv<33> > grp_fu_759_p2;
    sc_signal< sc_lv<33> > p_Val2_4_reg_1045;
    sc_signal< sc_lv<15> > tmp_42_fu_446_p1;
    sc_signal< sc_lv<15> > tmp_42_reg_1050;
    sc_signal< sc_lv<1> > tmp_10_1_fu_449_p2;
    sc_signal< sc_lv<1> > tmp_10_1_reg_1055;
    sc_signal< sc_lv<16> > tmp_22_fu_473_p2;
    sc_signal< sc_lv<16> > tmp_22_reg_1060;
    sc_signal< sc_lv<33> > r_V_1_4_fu_478_p2;
    sc_signal< sc_lv<33> > r_V_1_4_reg_1065;
    sc_signal< sc_lv<1> > tmp_5_4_fu_482_p2;
    sc_signal< sc_lv<1> > tmp_5_4_reg_1070;
    sc_signal< sc_lv<16> > tmp_25_reg_1075;
    sc_signal< sc_lv<33> > grp_fu_765_p2;
    sc_signal< sc_lv<33> > p_Val2_5_reg_1082;
    sc_signal< sc_lv<15> > tmp_44_fu_497_p1;
    sc_signal< sc_lv<15> > tmp_44_reg_1087;
    sc_signal< sc_lv<1> > tmp_10_2_fu_500_p2;
    sc_signal< sc_lv<1> > tmp_10_2_reg_1092;
    sc_signal< sc_lv<16> > tmp_26_fu_524_p2;
    sc_signal< sc_lv<16> > tmp_26_reg_1097;
    sc_signal< sc_lv<33> > r_V_1_5_fu_529_p2;
    sc_signal< sc_lv<33> > r_V_1_5_reg_1102;
    sc_signal< sc_lv<1> > tmp_5_5_fu_533_p2;
    sc_signal< sc_lv<1> > tmp_5_5_reg_1107;
    sc_signal< sc_lv<16> > tmp_29_reg_1112;
    sc_signal< sc_lv<1> > tmp_10_3_fu_548_p2;
    sc_signal< sc_lv<1> > tmp_10_3_reg_1119;
    sc_signal< sc_lv<16> > tmp_30_fu_572_p2;
    sc_signal< sc_lv<16> > tmp_30_reg_1124;
    sc_signal< sc_lv<1> > tmp_10_4_fu_577_p2;
    sc_signal< sc_lv<1> > tmp_10_4_reg_1129;
    sc_signal< sc_lv<6> > p_out_p_V_load_fu_605_p3;
    sc_signal< sc_lv<6> > p_out_p_V_load_reg_1134;
    sc_signal< sc_lv<1> > tmp_10_5_fu_612_p2;
    sc_signal< sc_lv<1> > tmp_10_5_reg_1140;
    sc_signal< sc_lv<1> > p_out_p_V_flag_1_fu_621_p2;
    sc_signal< sc_lv<1> > p_out_p_V_flag_1_reg_1145;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0_reg;
    sc_signal< bool > ap_block_pp0_stage5_subdone;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< bool > ap_block_pp0_stage5;
    sc_signal< sc_lv<16> > tmp_7_fu_335_p3;
    sc_signal< sc_lv<6> > p_out_p_V_new_1_4_fu_713_p3;
    sc_signal< bool > ap_block_pp0_stage1_01001;
    sc_signal< sc_lv<17> > lhs_V_fu_179_p1;
    sc_signal< sc_lv<17> > rhs_V_fu_183_p1;
    sc_signal< sc_lv<1> > or_cond1_fu_228_p2;
    sc_signal< sc_lv<31> > tmp_s_fu_248_p3;
    sc_signal< sc_lv<1> > tmp_4_fu_290_p2;
    sc_signal< sc_lv<16> > accumulator_V_load_o_fu_330_p2;
    sc_signal< sc_lv<1> > tmp_33_fu_348_p3;
    sc_signal< sc_lv<16> > tmp_11_fu_355_p3;
    sc_signal< sc_lv<16> > tmp_12_fu_360_p3;
    sc_signal< sc_lv<1> > tmp_35_fu_403_p3;
    sc_signal< sc_lv<16> > tmp_15_fu_410_p3;
    sc_signal< sc_lv<16> > tmp_16_fu_415_p3;
    sc_signal< sc_lv<1> > tmp_37_fu_454_p3;
    sc_signal< sc_lv<16> > tmp_19_fu_461_p3;
    sc_signal< sc_lv<16> > tmp_20_fu_466_p3;
    sc_signal< sc_lv<1> > tmp_39_fu_505_p3;
    sc_signal< sc_lv<16> > tmp_23_fu_512_p3;
    sc_signal< sc_lv<16> > tmp_24_fu_517_p3;
    sc_signal< sc_lv<1> > tmp_41_fu_553_p3;
    sc_signal< sc_lv<16> > tmp_27_fu_560_p3;
    sc_signal< sc_lv<16> > tmp_28_fu_565_p3;
    sc_signal< sc_lv<1> > tmp_43_fu_582_p3;
    sc_signal< sc_lv<16> > tmp_31_fu_589_p3;
    sc_signal< sc_lv<16> > tmp_32_fu_594_p3;
    sc_signal< sc_lv<1> > tmp1_fu_617_p2;
    sc_signal< sc_lv<2> > tmp_12_1_fu_626_p3;
    sc_signal< sc_lv<6> > tmp_12_1_cast_fu_633_p1;
    sc_signal< sc_lv<5> > tmp5_demorgan_fu_643_p5;
    sc_signal< sc_lv<6> > tmp5_demorgan_cast_fu_652_p1;
    sc_signal< sc_lv<6> > tmp_14_1_fu_637_p2;
    sc_signal< sc_lv<6> > tmp9_demorgan_fu_667_p4;
    sc_signal< sc_lv<6> > tmp8_fu_662_p2;
    sc_signal< sc_lv<6> > tmp9_fu_675_p2;
    sc_signal< sc_lv<6> > tmp7_fu_681_p2;
    sc_signal< sc_lv<6> > tmp5_fu_656_p2;
    sc_signal< sc_lv<6> > tmp_15_5_fu_687_p2;
    sc_signal< sc_lv<6> > p_out_p_V_new_1_fu_706_p3;
    sc_signal< sc_lv<6> > out_p_V_new_1_fu_693_p3;
    sc_signal< sc_lv<6> > out_p_V_loc_1_fu_700_p3;
    sc_signal< sc_lv<17> > grp_fu_741_p1;
    sc_signal< sc_lv<17> > grp_fu_747_p1;
    sc_signal< sc_lv<17> > grp_fu_753_p1;
    sc_signal< sc_lv<17> > grp_fu_759_p1;
    sc_signal< sc_lv<17> > grp_fu_765_p1;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_idle_pp0_1to2;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage2;
    static const sc_lv<6> ap_ST_fsm_pp0_stage3;
    static const sc_lv<6> ap_ST_fsm_pp0_stage4;
    static const sc_lv<6> ap_ST_fsm_pp0_stage5;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const bool ap_const_boolean_0;
    static const sc_lv<6> ap_const_lv6_3F;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<6> ap_const_lv6_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_OP1_V_fu_221_p1();
    void thread_accumulator_V_load_o_fu_330_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_01001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_pp0_stage5();
    void thread_ap_block_pp0_stage5_11001();
    void thread_ap_block_pp0_stage5_subdone();
    void thread_ap_block_state10_pp0_stage3_iter1();
    void thread_ap_block_state11_pp0_stage4_iter1();
    void thread_ap_block_state12_pp0_stage5_iter1();
    void thread_ap_block_state13_pp0_stage0_iter2();
    void thread_ap_block_state14_pp0_stage1_iter2();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage1_iter0();
    void thread_ap_block_state3_pp0_stage2_iter0();
    void thread_ap_block_state4_pp0_stage3_iter0();
    void thread_ap_block_state5_pp0_stage4_iter0();
    void thread_ap_block_state6_pp0_stage5_iter0();
    void thread_ap_block_state7_pp0_stage0_iter1();
    void thread_ap_block_state8_pp0_stage1_iter1();
    void thread_ap_block_state9_pp0_stage2_iter1();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_idle_pp0_1to2();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_rst_n_inv();
    void thread_grp_fu_741_p1();
    void thread_grp_fu_747_p1();
    void thread_grp_fu_753_p1();
    void thread_grp_fu_759_p1();
    void thread_grp_fu_765_p1();
    void thread_lhs_V_fu_179_p1();
    void thread_m_V_address0();
    void thread_m_V_ce0();
    void thread_or_cond1_fu_228_p2();
    void thread_or_cond_fu_294_p2();
    void thread_out_V();
    void thread_out_p_V_loc_1_fu_700_p3();
    void thread_out_p_V_new_1_fu_693_p3();
    void thread_p_out_p_V_flag_1_fu_621_p2();
    void thread_p_out_p_V_load_fu_605_p3();
    void thread_p_out_p_V_new_1_4_fu_713_p3();
    void thread_p_out_p_V_new_1_fu_706_p3();
    void thread_r_V_1_1_fu_304_p2();
    void thread_r_V_1_2_fu_372_p2();
    void thread_r_V_1_3_fu_427_p2();
    void thread_r_V_1_4_fu_478_p2();
    void thread_r_V_1_5_fu_529_p2();
    void thread_r_V_1_fu_259_p2();
    void thread_r_V_fu_187_p2();
    void thread_rhs_V_fu_183_p1();
    void thread_tmp1_fu_617_p2();
    void thread_tmp2_fu_232_p2();
    void thread_tmp5_demorgan_cast_fu_652_p1();
    void thread_tmp5_demorgan_fu_643_p5();
    void thread_tmp5_fu_656_p2();
    void thread_tmp7_fu_681_p2();
    void thread_tmp8_fu_662_p2();
    void thread_tmp9_demorgan_fu_667_p4();
    void thread_tmp9_fu_675_p2();
    void thread_tmp_10_1_fu_449_p2();
    void thread_tmp_10_2_fu_500_p2();
    void thread_tmp_10_3_fu_548_p2();
    void thread_tmp_10_4_fu_577_p2();
    void thread_tmp_10_5_fu_612_p2();
    void thread_tmp_10_fu_398_p2();
    void thread_tmp_11_fu_355_p3();
    void thread_tmp_12_1_cast_fu_633_p1();
    void thread_tmp_12_1_fu_626_p3();
    void thread_tmp_12_fu_360_p3();
    void thread_tmp_14_1_fu_637_p2();
    void thread_tmp_14_fu_367_p2();
    void thread_tmp_15_5_fu_687_p2();
    void thread_tmp_15_fu_410_p3();
    void thread_tmp_16_fu_415_p3();
    void thread_tmp_18_fu_422_p2();
    void thread_tmp_19_fu_461_p3();
    void thread_tmp_1_fu_203_p2();
    void thread_tmp_20_fu_466_p3();
    void thread_tmp_22_fu_473_p2();
    void thread_tmp_23_fu_512_p3();
    void thread_tmp_24_fu_517_p3();
    void thread_tmp_26_fu_524_p2();
    void thread_tmp_27_fu_560_p3();
    void thread_tmp_28_fu_565_p3();
    void thread_tmp_2_fu_209_p2();
    void thread_tmp_30_fu_572_p2();
    void thread_tmp_31_fu_589_p3();
    void thread_tmp_32_fu_594_p3();
    void thread_tmp_33_fu_348_p3();
    void thread_tmp_34_fu_241_p1();
    void thread_tmp_35_fu_403_p3();
    void thread_tmp_36_fu_279_p1();
    void thread_tmp_37_fu_454_p3();
    void thread_tmp_38_fu_323_p1();
    void thread_tmp_39_fu_505_p3();
    void thread_tmp_3_fu_215_p2();
    void thread_tmp_40_fu_391_p1();
    void thread_tmp_41_fu_553_p3();
    void thread_tmp_42_fu_446_p1();
    void thread_tmp_43_fu_582_p3();
    void thread_tmp_44_fu_497_p1();
    void thread_tmp_4_fu_290_p2();
    void thread_tmp_5_1_fu_308_p2();
    void thread_tmp_5_2_fu_376_p2();
    void thread_tmp_5_3_fu_431_p2();
    void thread_tmp_5_4_fu_482_p2();
    void thread_tmp_5_5_fu_533_p2();
    void thread_tmp_5_fu_264_p2();
    void thread_tmp_6_fu_197_p2();
    void thread_tmp_7_fu_335_p3();
    void thread_tmp_8_fu_299_p2();
    void thread_tmp_cast_fu_255_p1();
    void thread_tmp_fu_286_p2();
    void thread_tmp_s_fu_248_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
