#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_IOMEM_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_IOMEM_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_IOMEM_AWADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_IOMEM_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_IOMEM_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_IOMEM_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_IOMEM_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_IOMEM_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_IOMEM_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_IOMEM_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_IOMEM_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_IOMEM_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_IOMEM_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_IOMEM_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_IOMEM_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_IOMEM_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_IOMEM_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_IOMEM_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_IOMEM_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_IOMEM_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_IOMEM_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_IOMEM_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_IOMEM_ARADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_IOMEM_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_IOMEM_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_IOMEM_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_IOMEM_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_IOMEM_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_IOMEM_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_IOMEM_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_IOMEM_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_IOMEM_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_IOMEM_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_IOMEM_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_IOMEM_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_IOMEM_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_IOMEM_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_IOMEM_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_IOMEM_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_IOMEM_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_IOMEM_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_IOMEM_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_IOMEM_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_IOMEM_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_IOMEM_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("buttons_V", 4, hls_in, 2, "ap_none", "in_data", 1),
	Port_Property("interrupt_V", 1, hls_in, 3, "ap_none", "in_data", 1),
	Port_Property("leds_V", 4, hls_out, 4, "ap_none", "out_data", 1),
	Port_Property("s_axi_CTRL_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_AWADDR", 10, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARADDR", 10, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "ctrlloop";
