

================================================================
== Vivado HLS Report for 'ctrlloop'
================================================================
* Date:           Wed Jul 18 09:43:11 2018

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        ctrlloop
* Solution:       ctrlloop
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.00|      2.46|        0.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----------+-----------+-----------+-----------+---------+
    |        Latency        |        Interval       | Pipeline|
    |    min    |    max    |    min    |    max    |   Type  |
    +-----------+-----------+-----------+-----------+---------+
    |  100000001|  100000001|  100000001|  100000001|   none  |
    +-----------+-----------+-----------+-----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----------+-----------+----------+-----------+-----------+-----------+----------+
        |          |        Latency        | Iteration|  Initiation Interval  |    Trip   |          |
        | Loop Name|    min    |    max    |  Latency |  achieved |   target  |   Count   | Pipelined|
        +----------+-----------+-----------+----------+-----------+-----------+-----------+----------+
        |- Loop 1  |  100000000|  100000000|         1|          -|          -|  100000000|    no    |
        +----------+-----------+-----------+----------+-----------+-----------+-----------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|DSP              |        -|      -|       -|      -|
|Expression       |        -|      -|       0|     65|
|FIFO             |        -|      -|       -|      -|
|Instance         |        2|      -|     116|    110|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|     33|
|Register         |        -|      -|      37|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        2|      0|     153|    208|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |    ~0   |      0|   ~0   |   ~0  |
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    +-----------------------+---------------------+---------+-------+-----+-----+
    |        Instance       |        Module       | BRAM_18K| DSP48E|  FF | LUT |
    +-----------------------+---------------------+---------+-------+-----+-----+
    |ctrlloop_CTRL_s_axi_U  |ctrlloop_CTRL_s_axi  |        2|      0|  116|  110|
    +-----------------------+---------------------+---------+-------+-----+-----+
    |Total                  |                     |        2|      0|  116|  110|
    +-----------------------+---------------------+---------+-------+-----+-----+

    * DSP48: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +------------------------------+----------+-------+---+----+------------+------------+
    |         Variable Name        | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +------------------------------+----------+-------+---+----+------------+------------+
    |ctr_V_fu_145_p2               |     +    |      0|  0|  34|          27|           1|
    |led_state_V_assign_fu_121_p2  |     +    |      0|  0|  13|           4|           1|
    |tmp_1_fu_139_p2               |   icmp   |      0|  0|  18|          27|          27|
    +------------------------------+----------+-------+---+----+------------+------------+
    |Total                         |          |      0|  0|  65|          58|          29|
    +------------------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +-------------------+----+-----------+-----+-----------+
    |        Name       | LUT| Input Size| Bits| Total Bits|
    +-------------------+----+-----------+-----+-----------+
    |ap_NS_fsm          |  15|          3|    1|          3|
    |leds_V             |   9|          2|    4|          8|
    |p_014_0_i_reg_106  |   9|          2|   27|         54|
    +-------------------+----+-----------+-----+-----------+
    |Total              |  33|          7|   32|         65|
    +-------------------+----+-----------+-----+-----------+

    * Register: 
    +-------------------+----+----+-----+-----------+
    |        Name       | FF | LUT| Bits| Const Bits|
    +-------------------+----+----+-----+-----------+
    |ap_CS_fsm          |   2|   0|    2|          0|
    |led_state_V        |   4|   0|    4|          0|
    |leds_V_preg        |   4|   0|    4|          0|
    |p_014_0_i_reg_106  |  27|   0|   27|          0|
    +-------------------+----+----+-----+-----------+
    |Total              |  37|   0|   37|          0|
    +-------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+----------------------+-----+-----+------------+--------------+--------------+
|       RTL Ports      | Dir | Bits|  Protocol  | Source Object|    C Type    |
+----------------------+-----+-----+------------+--------------+--------------+
|s_axi_CTRL_AWVALID    |  in |    1|    s_axi   |     CTRL     |     array    |
|s_axi_CTRL_AWREADY    | out |    1|    s_axi   |     CTRL     |     array    |
|s_axi_CTRL_AWADDR     |  in |   10|    s_axi   |     CTRL     |     array    |
|s_axi_CTRL_WVALID     |  in |    1|    s_axi   |     CTRL     |     array    |
|s_axi_CTRL_WREADY     | out |    1|    s_axi   |     CTRL     |     array    |
|s_axi_CTRL_WDATA      |  in |   32|    s_axi   |     CTRL     |     array    |
|s_axi_CTRL_WSTRB      |  in |    4|    s_axi   |     CTRL     |     array    |
|s_axi_CTRL_ARVALID    |  in |    1|    s_axi   |     CTRL     |     array    |
|s_axi_CTRL_ARREADY    | out |    1|    s_axi   |     CTRL     |     array    |
|s_axi_CTRL_ARADDR     |  in |   10|    s_axi   |     CTRL     |     array    |
|s_axi_CTRL_RVALID     | out |    1|    s_axi   |     CTRL     |     array    |
|s_axi_CTRL_RREADY     |  in |    1|    s_axi   |     CTRL     |     array    |
|s_axi_CTRL_RDATA      | out |   32|    s_axi   |     CTRL     |     array    |
|s_axi_CTRL_RRESP      | out |    2|    s_axi   |     CTRL     |     array    |
|s_axi_CTRL_BVALID     | out |    1|    s_axi   |     CTRL     |     array    |
|s_axi_CTRL_BREADY     |  in |    1|    s_axi   |     CTRL     |     array    |
|s_axi_CTRL_BRESP      | out |    2|    s_axi   |     CTRL     |     array    |
|ap_clk                |  in |    1| ap_ctrl_hs |   ctrlloop   | return value |
|ap_rst_n              |  in |    1| ap_ctrl_hs |   ctrlloop   | return value |
|interrupt             | out |    1| ap_ctrl_hs |   ctrlloop   | return value |
|m_axi_IOMEM_AWVALID   | out |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_AWREADY   |  in |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_AWADDR    | out |   32|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_AWID      | out |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_AWLEN     | out |    8|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_AWSIZE    | out |    3|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_AWBURST   | out |    2|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_AWLOCK    | out |    2|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_AWCACHE   | out |    4|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_AWPROT    | out |    3|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_AWQOS     | out |    4|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_AWREGION  | out |    4|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_AWUSER    | out |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_WVALID    | out |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_WREADY    |  in |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_WDATA     | out |   32|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_WSTRB     | out |    4|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_WLAST     | out |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_WID       | out |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_WUSER     | out |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_ARVALID   | out |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_ARREADY   |  in |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_ARADDR    | out |   32|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_ARID      | out |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_ARLEN     | out |    8|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_ARSIZE    | out |    3|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_ARBURST   | out |    2|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_ARLOCK    | out |    2|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_ARCACHE   | out |    4|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_ARPROT    | out |    3|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_ARQOS     | out |    4|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_ARREGION  | out |    4|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_ARUSER    | out |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_RVALID    |  in |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_RREADY    | out |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_RDATA     |  in |   32|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_RLAST     |  in |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_RID       |  in |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_RUSER     |  in |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_RRESP     |  in |    2|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_BVALID    |  in |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_BREADY    | out |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_BRESP     |  in |    2|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_BID       |  in |    1|    m_axi   |     IOMEM    |    pointer   |
|m_axi_IOMEM_BUSER     |  in |    1|    m_axi   |     IOMEM    |    pointer   |
|buttons_V             |  in |    4|   ap_none  |   buttons_V  |    scalar    |
|interrupt_V           |  in |    1|   ap_none  |  interrupt_V |    scalar    |
|leds_V                | out |    4|   ap_none  |    leds_V    |    pointer   |
+----------------------+-----+-----+------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	2  / (!tmp_1)

* FSM state operations: 

 <State 1> : 2.29ns
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %IOMEM), !map !54"
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([128 x i32]* %regs_V), !map !60"
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4 %buttons_V), !map !66"
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %interrupt_V), !map !72"
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %leds_V), !map !76"
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%buttons_V_read = call i4 @_ssdm_op_Read.ap_none.i4(i4 %buttons_V)"
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%dummy = alloca i8, align 1"
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @ctrlloop_str) nounwind"
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ctrlloop.cpp:62]
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecMemCore([128 x i32]* %regs_V, [1 x i8]* @p_str6, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str6, i32 -1, [1 x i8]* @p_str6, [1 x i8]* @p_str6, [1 x i8]* @p_str6, [1 x i8]* @p_str6, [1 x i8]* @p_str6)"
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([128 x i32]* %regs_V, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [5 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %IOMEM, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [6 x i8]* @p_str4, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i4* %leds_V, [8 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ctrlloop.cpp:73]
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i4 %buttons_V, [8 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [ctrlloop.cpp:76]
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i4* @led_state_V, i32 1, [1 x i8]* @p_str1) nounwind" [ctrlloop.cpp:82]
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%led_state_V_load = load i4* @led_state_V, align 1" [ctrlloop.cpp:83]
ST_1 : Operation 19 [1/1] (1.73ns)   --->   "%led_state_V_assign = add i4 %led_state_V_load, 1" [ctrlloop.cpp:83]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "store i4 %led_state_V_assign, i4* @led_state_V, align 1" [ctrlloop.cpp:83]
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i4P(i4* %leds_V, i4 %led_state_V_assign)" [ctrlloop.cpp:85]
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%p_s = zext i4 %buttons_V_read to i32" [ctrlloop.cpp:88]
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%regs_V_addr = getelementptr [128 x i32]* %regs_V, i64 0, i64 0"
ST_1 : Operation 24 [1/1] (2.28ns)   --->   "store i32 %p_s, i32* %regs_V_addr, align 4" [ctrlloop.cpp:88]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.28> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 128> <RAM>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([45 x i8]* @delay_until_ms_MD_10) nounwind"
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecProtocol(i32 0, [1 x i8]* @p_str1) nounwind" [./ctrlloop.hpp:53->ctrlloop.cpp:92]
ST_1 : Operation 27 [1/1] (1.76ns)   --->   "br label %0" [./ctrlloop.hpp:57->ctrlloop.cpp:92]

 <State 2> : 2.46ns
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%p_014_0_i = phi i27 [ 0, %codeRepl ], [ %ctr_V, %1 ]"
ST_2 : Operation 29 [1/1] (2.45ns)   --->   "%tmp_1 = icmp eq i27 %p_014_0_i, -34217728" [./ctrlloop.hpp:57->ctrlloop.cpp:92]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.45> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100000000, i64 100000000, i64 100000000)"
ST_2 : Operation 31 [1/1] (2.40ns)   --->   "%ctr_V = add i27 %p_014_0_i, 1" [./ctrlloop.hpp:57->ctrlloop.cpp:92]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "br i1 %tmp_1, label %"delay_until_ms<1000ull, 100000000ull>.exit", label %1" [./ctrlloop.hpp:57->ctrlloop.cpp:92]
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%dummy_1 = load volatile i8* %dummy, align 1" [./ctrlloop.hpp:58->ctrlloop.cpp:92]
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "store volatile i8 %dummy_1, i8* %dummy, align 1" [./ctrlloop.hpp:58->ctrlloop.cpp:92]
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "br label %0" [./ctrlloop.hpp:57->ctrlloop.cpp:92]
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([45 x i8]* @delay_until_ms_MD_10, i32 %rbegin) nounwind"
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "ret void" [ctrlloop.cpp:93]


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ IOMEM]:  wired=1; compound=1; hidden=0; nouse=1; global=0; static=0; extern=0; dir=0; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ regs_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=1; pingpong=0; private_global=0; MemPort=[0]; IO mode=ap_memory:ce=0
Port [ buttons_V]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ interrupt_V]:  wired=1; compound=0; hidden=0; nouse=1; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ leds_V]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ led_state_V]:  wired=0; compound=0; hidden=1; nouse=0; global=1; static=1; extern=0; dir=2; type=0; pingpong=0; private_global=1; linkage=7; visibility=0; IO mode=ap_ovld:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
StgValue_3         (specbitsmap      ) [ 000]
StgValue_4         (specbitsmap      ) [ 000]
StgValue_5         (specbitsmap      ) [ 000]
StgValue_6         (specbitsmap      ) [ 000]
StgValue_7         (specbitsmap      ) [ 000]
buttons_V_read     (read             ) [ 000]
dummy              (alloca           ) [ 001]
StgValue_10        (spectopmodule    ) [ 000]
StgValue_11        (specinterface    ) [ 000]
empty              (specmemcore      ) [ 000]
StgValue_13        (specinterface    ) [ 000]
StgValue_14        (specinterface    ) [ 000]
StgValue_15        (specinterface    ) [ 000]
StgValue_16        (specinterface    ) [ 000]
StgValue_17        (specreset        ) [ 000]
led_state_V_load   (load             ) [ 000]
led_state_V_assign (add              ) [ 000]
StgValue_20        (store            ) [ 000]
StgValue_21        (write            ) [ 000]
p_s                (zext             ) [ 000]
regs_V_addr        (getelementptr    ) [ 000]
StgValue_24        (store            ) [ 000]
rbegin             (specregionbegin  ) [ 001]
StgValue_26        (specprotocol     ) [ 000]
StgValue_27        (br               ) [ 011]
p_014_0_i          (phi              ) [ 001]
tmp_1              (icmp             ) [ 001]
empty_2            (speclooptripcount) [ 000]
ctr_V              (add              ) [ 011]
StgValue_32        (br               ) [ 000]
dummy_1            (load             ) [ 000]
StgValue_34        (store            ) [ 000]
StgValue_35        (br               ) [ 011]
rend               (specregionend    ) [ 000]
StgValue_37        (ret              ) [ 000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="IOMEM">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="IOMEM"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="regs_V">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="regs_V"/><MemPortTyVec>0 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="buttons_V">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="buttons_V"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="interrupt_V">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="interrupt_V"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="leds_V">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="leds_V"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="led_state_V">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="led_state_V"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_none.i4"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="ctrlloop_str"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecMemCore"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str6"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="RAM_1P_str"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str4"/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str5"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecReset"/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.ap_none.i4P"/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionBegin"/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="delay_until_ms_MD_10"/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecProtocol"/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopTripCount"/></StgValue>
</bind>
</comp>

<comp id="70" class="1001" name="const_70">
<pin_list>
<pin id="71" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="72" class="1001" name="const_72">
<pin_list>
<pin id="73" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="74" class="1001" name="const_74">
<pin_list>
<pin id="75" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionEnd"/></StgValue>
</bind>
</comp>

<comp id="76" class="1004" name="dummy_fu_76">
<pin_list>
<pin id="77" dir="0" index="0" bw="1" slack="0"/>
<pin id="78" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="dummy/1 "/>
</bind>
</comp>

<comp id="80" class="1004" name="buttons_V_read_read_fu_80">
<pin_list>
<pin id="81" dir="0" index="0" bw="4" slack="0"/>
<pin id="82" dir="0" index="1" bw="4" slack="0"/>
<pin id="83" dir="1" index="2" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="buttons_V_read/1 "/>
</bind>
</comp>

<comp id="86" class="1004" name="StgValue_21_write_fu_86">
<pin_list>
<pin id="87" dir="0" index="0" bw="0" slack="0"/>
<pin id="88" dir="0" index="1" bw="4" slack="0"/>
<pin id="89" dir="0" index="2" bw="4" slack="0"/>
<pin id="90" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_21/1 "/>
</bind>
</comp>

<comp id="93" class="1004" name="regs_V_addr_gep_fu_93">
<pin_list>
<pin id="94" dir="0" index="0" bw="32" slack="0"/>
<pin id="95" dir="0" index="1" bw="1" slack="0"/>
<pin id="96" dir="0" index="2" bw="1" slack="0"/>
<pin id="97" dir="1" index="3" bw="7" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="regs_V_addr/1 "/>
</bind>
</comp>

<comp id="101" class="1004" name="StgValue_24_access_fu_101">
<pin_list>
<pin id="102" dir="0" index="0" bw="7" slack="0"/>
<pin id="103" dir="0" index="1" bw="32" slack="0"/>
<pin id="104" dir="1" index="2" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_24/1 "/>
</bind>
</comp>

<comp id="106" class="1005" name="p_014_0_i_reg_106">
<pin_list>
<pin id="107" dir="0" index="0" bw="27" slack="1"/>
<pin id="108" dir="1" index="1" bw="27" slack="1"/>
</pin_list>
<bind>
<opset="p_014_0_i (phireg) "/>
</bind>
</comp>

<comp id="110" class="1004" name="p_014_0_i_phi_fu_110">
<pin_list>
<pin id="111" dir="0" index="0" bw="1" slack="1"/>
<pin id="112" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="113" dir="0" index="2" bw="27" slack="0"/>
<pin id="114" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="115" dir="1" index="4" bw="27" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="p_014_0_i/2 "/>
</bind>
</comp>

<comp id="117" class="1004" name="led_state_V_load_load_fu_117">
<pin_list>
<pin id="118" dir="0" index="0" bw="4" slack="0"/>
<pin id="119" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="led_state_V_load/1 "/>
</bind>
</comp>

<comp id="121" class="1004" name="led_state_V_assign_fu_121">
<pin_list>
<pin id="122" dir="0" index="0" bw="4" slack="0"/>
<pin id="123" dir="0" index="1" bw="1" slack="0"/>
<pin id="124" dir="1" index="2" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="led_state_V_assign/1 "/>
</bind>
</comp>

<comp id="128" class="1004" name="StgValue_20_store_fu_128">
<pin_list>
<pin id="129" dir="0" index="0" bw="4" slack="0"/>
<pin id="130" dir="0" index="1" bw="4" slack="0"/>
<pin id="131" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_20/1 "/>
</bind>
</comp>

<comp id="134" class="1004" name="p_s_fu_134">
<pin_list>
<pin id="135" dir="0" index="0" bw="4" slack="0"/>
<pin id="136" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="p_s/1 "/>
</bind>
</comp>

<comp id="139" class="1004" name="tmp_1_fu_139">
<pin_list>
<pin id="140" dir="0" index="0" bw="27" slack="0"/>
<pin id="141" dir="0" index="1" bw="27" slack="0"/>
<pin id="142" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp_1/2 "/>
</bind>
</comp>

<comp id="145" class="1004" name="ctr_V_fu_145">
<pin_list>
<pin id="146" dir="0" index="0" bw="27" slack="0"/>
<pin id="147" dir="0" index="1" bw="1" slack="0"/>
<pin id="148" dir="1" index="2" bw="27" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="ctr_V/2 "/>
</bind>
</comp>

<comp id="151" class="1004" name="dummy_1_load_fu_151">
<pin_list>
<pin id="152" dir="0" index="0" bw="8" slack="1"/>
<pin id="153" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="dummy_1/2 "/>
</bind>
</comp>

<comp id="154" class="1004" name="StgValue_34_store_fu_154">
<pin_list>
<pin id="155" dir="0" index="0" bw="8" slack="0"/>
<pin id="156" dir="0" index="1" bw="8" slack="1"/>
<pin id="157" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_34/2 "/>
</bind>
</comp>

<comp id="159" class="1005" name="dummy_reg_159">
<pin_list>
<pin id="160" dir="0" index="0" bw="8" slack="1"/>
<pin id="161" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="dummy "/>
</bind>
</comp>

<comp id="168" class="1005" name="ctr_V_reg_168">
<pin_list>
<pin id="169" dir="0" index="0" bw="27" slack="0"/>
<pin id="170" dir="1" index="1" bw="27" slack="0"/>
</pin_list>
<bind>
<opset="ctr_V "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="79"><net_src comp="16" pin="0"/><net_sink comp="76" pin=0"/></net>

<net id="84"><net_src comp="14" pin="0"/><net_sink comp="80" pin=0"/></net>

<net id="85"><net_src comp="4" pin="0"/><net_sink comp="80" pin=1"/></net>

<net id="91"><net_src comp="54" pin="0"/><net_sink comp="86" pin=0"/></net>

<net id="92"><net_src comp="8" pin="0"/><net_sink comp="86" pin=1"/></net>

<net id="98"><net_src comp="2" pin="0"/><net_sink comp="93" pin=0"/></net>

<net id="99"><net_src comp="56" pin="0"/><net_sink comp="93" pin=1"/></net>

<net id="100"><net_src comp="56" pin="0"/><net_sink comp="93" pin=2"/></net>

<net id="105"><net_src comp="93" pin="3"/><net_sink comp="101" pin=0"/></net>

<net id="109"><net_src comp="64" pin="0"/><net_sink comp="106" pin=0"/></net>

<net id="116"><net_src comp="106" pin="1"/><net_sink comp="110" pin=0"/></net>

<net id="120"><net_src comp="10" pin="0"/><net_sink comp="117" pin=0"/></net>

<net id="125"><net_src comp="117" pin="1"/><net_sink comp="121" pin=0"/></net>

<net id="126"><net_src comp="52" pin="0"/><net_sink comp="121" pin=1"/></net>

<net id="127"><net_src comp="121" pin="2"/><net_sink comp="86" pin=2"/></net>

<net id="132"><net_src comp="121" pin="2"/><net_sink comp="128" pin=0"/></net>

<net id="133"><net_src comp="10" pin="0"/><net_sink comp="128" pin=1"/></net>

<net id="137"><net_src comp="80" pin="2"/><net_sink comp="134" pin=0"/></net>

<net id="138"><net_src comp="134" pin="1"/><net_sink comp="101" pin=1"/></net>

<net id="143"><net_src comp="110" pin="4"/><net_sink comp="139" pin=0"/></net>

<net id="144"><net_src comp="66" pin="0"/><net_sink comp="139" pin=1"/></net>

<net id="149"><net_src comp="110" pin="4"/><net_sink comp="145" pin=0"/></net>

<net id="150"><net_src comp="72" pin="0"/><net_sink comp="145" pin=1"/></net>

<net id="158"><net_src comp="151" pin="1"/><net_sink comp="154" pin=0"/></net>

<net id="162"><net_src comp="76" pin="1"/><net_sink comp="159" pin=0"/></net>

<net id="163"><net_src comp="159" pin="1"/><net_sink comp="151" pin=0"/></net>

<net id="164"><net_src comp="159" pin="1"/><net_sink comp="154" pin=1"/></net>

<net id="171"><net_src comp="145" pin="2"/><net_sink comp="168" pin=0"/></net>

<net id="172"><net_src comp="168" pin="1"/><net_sink comp="110" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: regs_V | {1 }
	Port: leds_V | {1 }
	Port: led_state_V | {1 }
 - Input state : 
	Port: ctrlloop : buttons_V | {1 }
	Port: ctrlloop : led_state_V | {1 }
  - Chain level:
	State 1
		led_state_V_assign : 1
		StgValue_20 : 2
		StgValue_21 : 2
		StgValue_24 : 1
	State 2
		tmp_1 : 1
		ctr_V : 1
		StgValue_32 : 2
		StgValue_34 : 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|---------------------------|---------|---------|
| Operation|      Functional Unit      |    FF   |   LUT   |
|----------|---------------------------|---------|---------|
|    add   | led_state_V_assign_fu_121 |    0    |    13   |
|          |        ctr_V_fu_145       |    0    |    34   |
|----------|---------------------------|---------|---------|
|   icmp   |        tmp_1_fu_139       |    0    |    18   |
|----------|---------------------------|---------|---------|
|   read   | buttons_V_read_read_fu_80 |    0    |    0    |
|----------|---------------------------|---------|---------|
|   write  |  StgValue_21_write_fu_86  |    0    |    0    |
|----------|---------------------------|---------|---------|
|   zext   |         p_s_fu_134        |    0    |    0    |
|----------|---------------------------|---------|---------|
|   Total  |                           |    0    |    65   |
|----------|---------------------------|---------|---------|

Memories:
N/A

* Register list:
+-----------------+--------+
|                 |   FF   |
+-----------------+--------+
|  ctr_V_reg_168  |   27   |
|  dummy_reg_159  |    8   |
|p_014_0_i_reg_106|   27   |
+-----------------+--------+
|      Total      |   62   |
+-----------------+--------+

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+
|           |   FF   |   LUT  |
+-----------+--------+--------+
|  Function |    0   |   65   |
|   Memory  |    -   |    -   |
|Multiplexer|    -   |    -   |
|  Register |   62   |    -   |
+-----------+--------+--------+
|   Total   |   62   |   65   |
+-----------+--------+--------+
