// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "iiccomm2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic iiccomm2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic iiccomm2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> iiccomm2::ap_ST_fsm_state1 = "1";
const sc_lv<9> iiccomm2::ap_ST_fsm_state2 = "10";
const sc_lv<9> iiccomm2::ap_ST_fsm_state3 = "100";
const sc_lv<9> iiccomm2::ap_ST_fsm_state4 = "1000";
const sc_lv<9> iiccomm2::ap_ST_fsm_state5 = "10000";
const sc_lv<9> iiccomm2::ap_ST_fsm_state6 = "100000";
const sc_lv<9> iiccomm2::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> iiccomm2::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> iiccomm2::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> iiccomm2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> iiccomm2::ap_const_lv32_7 = "111";
const int iiccomm2::C_S_AXI_DATA_WIDTH = "100000";
const int iiccomm2::C_M_AXI_BUS_R_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int iiccomm2::C_M_AXI_BUS_R_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int iiccomm2::C_M_AXI_BUS_R_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int iiccomm2::C_M_AXI_BUS_R_CACHE_VALUE = "11";
const int iiccomm2::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<64> iiccomm2::ap_const_lv64_40003104 = "1000000000000000011000100000100";
const sc_lv<32> iiccomm2::ap_const_lv32_1 = "1";
const sc_lv<1> iiccomm2::ap_const_lv1_0 = "0";
const sc_lv<3> iiccomm2::ap_const_lv3_0 = "000";
const sc_lv<2> iiccomm2::ap_const_lv2_0 = "00";
const sc_lv<4> iiccomm2::ap_const_lv4_0 = "0000";
const sc_lv<32> iiccomm2::ap_const_lv32_8 = "1000";
const bool iiccomm2::ap_const_boolean_1 = true;

iiccomm2::iiccomm2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    iiccomm2_AXILiteS_s_axi_U = new iiccomm2_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("iiccomm2_AXILiteS_s_axi_U");
    iiccomm2_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    iiccomm2_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    iiccomm2_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    iiccomm2_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    iiccomm2_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    iiccomm2_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    iiccomm2_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    iiccomm2_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    iiccomm2_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    iiccomm2_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    iiccomm2_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    iiccomm2_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    iiccomm2_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    iiccomm2_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    iiccomm2_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    iiccomm2_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    iiccomm2_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    iiccomm2_AXILiteS_s_axi_U->ACLK(ap_clk);
    iiccomm2_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    iiccomm2_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    iiccomm2_AXILiteS_s_axi_U->ap_start(ap_start);
    iiccomm2_AXILiteS_s_axi_U->interrupt(interrupt);
    iiccomm2_AXILiteS_s_axi_U->ap_ready(ap_ready);
    iiccomm2_AXILiteS_s_axi_U->ap_done(ap_done);
    iiccomm2_AXILiteS_s_axi_U->ap_idle(ap_idle);
    iiccomm2_outValue_first_s_axi_U = new iiccomm2_outValue_first_s_axi<C_S_AXI_OUTVALUE_FIRST_ADDR_WIDTH,C_S_AXI_OUTVALUE_FIRST_DATA_WIDTH>("iiccomm2_outValue_first_s_axi_U");
    iiccomm2_outValue_first_s_axi_U->AWVALID(s_axi_outValue_first_AWVALID);
    iiccomm2_outValue_first_s_axi_U->AWREADY(s_axi_outValue_first_AWREADY);
    iiccomm2_outValue_first_s_axi_U->AWADDR(s_axi_outValue_first_AWADDR);
    iiccomm2_outValue_first_s_axi_U->WVALID(s_axi_outValue_first_WVALID);
    iiccomm2_outValue_first_s_axi_U->WREADY(s_axi_outValue_first_WREADY);
    iiccomm2_outValue_first_s_axi_U->WDATA(s_axi_outValue_first_WDATA);
    iiccomm2_outValue_first_s_axi_U->WSTRB(s_axi_outValue_first_WSTRB);
    iiccomm2_outValue_first_s_axi_U->ARVALID(s_axi_outValue_first_ARVALID);
    iiccomm2_outValue_first_s_axi_U->ARREADY(s_axi_outValue_first_ARREADY);
    iiccomm2_outValue_first_s_axi_U->ARADDR(s_axi_outValue_first_ARADDR);
    iiccomm2_outValue_first_s_axi_U->RVALID(s_axi_outValue_first_RVALID);
    iiccomm2_outValue_first_s_axi_U->RREADY(s_axi_outValue_first_RREADY);
    iiccomm2_outValue_first_s_axi_U->RDATA(s_axi_outValue_first_RDATA);
    iiccomm2_outValue_first_s_axi_U->RRESP(s_axi_outValue_first_RRESP);
    iiccomm2_outValue_first_s_axi_U->BVALID(s_axi_outValue_first_BVALID);
    iiccomm2_outValue_first_s_axi_U->BREADY(s_axi_outValue_first_BREADY);
    iiccomm2_outValue_first_s_axi_U->BRESP(s_axi_outValue_first_BRESP);
    iiccomm2_outValue_first_s_axi_U->ACLK(ap_clk);
    iiccomm2_outValue_first_s_axi_U->ARESET(ap_rst_n_inv);
    iiccomm2_outValue_first_s_axi_U->ACLK_EN(ap_var_for_const0);
    iiccomm2_outValue_first_s_axi_U->outValue(bus_addr_read_reg_68);
    iiccomm2_outValue_first_s_axi_U->outValue_ap_vld(outValue_ap_vld);
    iiccomm2_bus_r_m_axi_U = new iiccomm2_bus_r_m_axi<32,32,5,16,16,16,16,C_M_AXI_BUS_R_ID_WIDTH,C_M_AXI_BUS_R_ADDR_WIDTH,C_M_AXI_BUS_R_DATA_WIDTH,C_M_AXI_BUS_R_AWUSER_WIDTH,C_M_AXI_BUS_R_ARUSER_WIDTH,C_M_AXI_BUS_R_WUSER_WIDTH,C_M_AXI_BUS_R_RUSER_WIDTH,C_M_AXI_BUS_R_BUSER_WIDTH,C_M_AXI_BUS_R_TARGET_ADDR,C_M_AXI_BUS_R_USER_VALUE,C_M_AXI_BUS_R_PROT_VALUE,C_M_AXI_BUS_R_CACHE_VALUE>("iiccomm2_bus_r_m_axi_U");
    iiccomm2_bus_r_m_axi_U->AWVALID(m_axi_bus_r_AWVALID);
    iiccomm2_bus_r_m_axi_U->AWREADY(m_axi_bus_r_AWREADY);
    iiccomm2_bus_r_m_axi_U->AWADDR(m_axi_bus_r_AWADDR);
    iiccomm2_bus_r_m_axi_U->AWID(m_axi_bus_r_AWID);
    iiccomm2_bus_r_m_axi_U->AWLEN(m_axi_bus_r_AWLEN);
    iiccomm2_bus_r_m_axi_U->AWSIZE(m_axi_bus_r_AWSIZE);
    iiccomm2_bus_r_m_axi_U->AWBURST(m_axi_bus_r_AWBURST);
    iiccomm2_bus_r_m_axi_U->AWLOCK(m_axi_bus_r_AWLOCK);
    iiccomm2_bus_r_m_axi_U->AWCACHE(m_axi_bus_r_AWCACHE);
    iiccomm2_bus_r_m_axi_U->AWPROT(m_axi_bus_r_AWPROT);
    iiccomm2_bus_r_m_axi_U->AWQOS(m_axi_bus_r_AWQOS);
    iiccomm2_bus_r_m_axi_U->AWREGION(m_axi_bus_r_AWREGION);
    iiccomm2_bus_r_m_axi_U->AWUSER(m_axi_bus_r_AWUSER);
    iiccomm2_bus_r_m_axi_U->WVALID(m_axi_bus_r_WVALID);
    iiccomm2_bus_r_m_axi_U->WREADY(m_axi_bus_r_WREADY);
    iiccomm2_bus_r_m_axi_U->WDATA(m_axi_bus_r_WDATA);
    iiccomm2_bus_r_m_axi_U->WSTRB(m_axi_bus_r_WSTRB);
    iiccomm2_bus_r_m_axi_U->WLAST(m_axi_bus_r_WLAST);
    iiccomm2_bus_r_m_axi_U->WID(m_axi_bus_r_WID);
    iiccomm2_bus_r_m_axi_U->WUSER(m_axi_bus_r_WUSER);
    iiccomm2_bus_r_m_axi_U->ARVALID(m_axi_bus_r_ARVALID);
    iiccomm2_bus_r_m_axi_U->ARREADY(m_axi_bus_r_ARREADY);
    iiccomm2_bus_r_m_axi_U->ARADDR(m_axi_bus_r_ARADDR);
    iiccomm2_bus_r_m_axi_U->ARID(m_axi_bus_r_ARID);
    iiccomm2_bus_r_m_axi_U->ARLEN(m_axi_bus_r_ARLEN);
    iiccomm2_bus_r_m_axi_U->ARSIZE(m_axi_bus_r_ARSIZE);
    iiccomm2_bus_r_m_axi_U->ARBURST(m_axi_bus_r_ARBURST);
    iiccomm2_bus_r_m_axi_U->ARLOCK(m_axi_bus_r_ARLOCK);
    iiccomm2_bus_r_m_axi_U->ARCACHE(m_axi_bus_r_ARCACHE);
    iiccomm2_bus_r_m_axi_U->ARPROT(m_axi_bus_r_ARPROT);
    iiccomm2_bus_r_m_axi_U->ARQOS(m_axi_bus_r_ARQOS);
    iiccomm2_bus_r_m_axi_U->ARREGION(m_axi_bus_r_ARREGION);
    iiccomm2_bus_r_m_axi_U->ARUSER(m_axi_bus_r_ARUSER);
    iiccomm2_bus_r_m_axi_U->RVALID(m_axi_bus_r_RVALID);
    iiccomm2_bus_r_m_axi_U->RREADY(m_axi_bus_r_RREADY);
    iiccomm2_bus_r_m_axi_U->RDATA(m_axi_bus_r_RDATA);
    iiccomm2_bus_r_m_axi_U->RLAST(m_axi_bus_r_RLAST);
    iiccomm2_bus_r_m_axi_U->RID(m_axi_bus_r_RID);
    iiccomm2_bus_r_m_axi_U->RUSER(m_axi_bus_r_RUSER);
    iiccomm2_bus_r_m_axi_U->RRESP(m_axi_bus_r_RRESP);
    iiccomm2_bus_r_m_axi_U->BVALID(m_axi_bus_r_BVALID);
    iiccomm2_bus_r_m_axi_U->BREADY(m_axi_bus_r_BREADY);
    iiccomm2_bus_r_m_axi_U->BRESP(m_axi_bus_r_BRESP);
    iiccomm2_bus_r_m_axi_U->BID(m_axi_bus_r_BID);
    iiccomm2_bus_r_m_axi_U->BUSER(m_axi_bus_r_BUSER);
    iiccomm2_bus_r_m_axi_U->ACLK(ap_clk);
    iiccomm2_bus_r_m_axi_U->ARESET(ap_rst_n_inv);
    iiccomm2_bus_r_m_axi_U->ACLK_EN(ap_var_for_const0);
    iiccomm2_bus_r_m_axi_U->I_ARVALID(bus_r_ARVALID);
    iiccomm2_bus_r_m_axi_U->I_ARREADY(bus_r_ARREADY);
    iiccomm2_bus_r_m_axi_U->I_ARADDR(bus_r_ARADDR);
    iiccomm2_bus_r_m_axi_U->I_ARID(ap_var_for_const1);
    iiccomm2_bus_r_m_axi_U->I_ARLEN(ap_var_for_const2);
    iiccomm2_bus_r_m_axi_U->I_ARSIZE(ap_var_for_const3);
    iiccomm2_bus_r_m_axi_U->I_ARLOCK(ap_var_for_const4);
    iiccomm2_bus_r_m_axi_U->I_ARCACHE(ap_var_for_const5);
    iiccomm2_bus_r_m_axi_U->I_ARQOS(ap_var_for_const5);
    iiccomm2_bus_r_m_axi_U->I_ARPROT(ap_var_for_const3);
    iiccomm2_bus_r_m_axi_U->I_ARUSER(ap_var_for_const1);
    iiccomm2_bus_r_m_axi_U->I_ARBURST(ap_var_for_const4);
    iiccomm2_bus_r_m_axi_U->I_ARREGION(ap_var_for_const5);
    iiccomm2_bus_r_m_axi_U->I_RVALID(bus_r_RVALID);
    iiccomm2_bus_r_m_axi_U->I_RREADY(bus_r_RREADY);
    iiccomm2_bus_r_m_axi_U->I_RDATA(bus_r_RDATA);
    iiccomm2_bus_r_m_axi_U->I_RID(bus_r_RID);
    iiccomm2_bus_r_m_axi_U->I_RUSER(bus_r_RUSER);
    iiccomm2_bus_r_m_axi_U->I_RRESP(bus_r_RRESP);
    iiccomm2_bus_r_m_axi_U->I_RLAST(bus_r_RLAST);
    iiccomm2_bus_r_m_axi_U->I_AWVALID(ap_var_for_const6);
    iiccomm2_bus_r_m_axi_U->I_AWREADY(bus_r_AWREADY);
    iiccomm2_bus_r_m_axi_U->I_AWADDR(ap_var_for_const7);
    iiccomm2_bus_r_m_axi_U->I_AWID(ap_var_for_const1);
    iiccomm2_bus_r_m_axi_U->I_AWLEN(ap_var_for_const7);
    iiccomm2_bus_r_m_axi_U->I_AWSIZE(ap_var_for_const3);
    iiccomm2_bus_r_m_axi_U->I_AWLOCK(ap_var_for_const4);
    iiccomm2_bus_r_m_axi_U->I_AWCACHE(ap_var_for_const5);
    iiccomm2_bus_r_m_axi_U->I_AWQOS(ap_var_for_const5);
    iiccomm2_bus_r_m_axi_U->I_AWPROT(ap_var_for_const3);
    iiccomm2_bus_r_m_axi_U->I_AWUSER(ap_var_for_const1);
    iiccomm2_bus_r_m_axi_U->I_AWBURST(ap_var_for_const4);
    iiccomm2_bus_r_m_axi_U->I_AWREGION(ap_var_for_const5);
    iiccomm2_bus_r_m_axi_U->I_WVALID(ap_var_for_const6);
    iiccomm2_bus_r_m_axi_U->I_WREADY(bus_r_WREADY);
    iiccomm2_bus_r_m_axi_U->I_WDATA(ap_var_for_const7);
    iiccomm2_bus_r_m_axi_U->I_WID(ap_var_for_const1);
    iiccomm2_bus_r_m_axi_U->I_WUSER(ap_var_for_const1);
    iiccomm2_bus_r_m_axi_U->I_WLAST(ap_var_for_const6);
    iiccomm2_bus_r_m_axi_U->I_WSTRB(ap_var_for_const5);
    iiccomm2_bus_r_m_axi_U->I_BVALID(bus_r_BVALID);
    iiccomm2_bus_r_m_axi_U->I_BREADY(ap_var_for_const6);
    iiccomm2_bus_r_m_axi_U->I_BRESP(bus_r_BRESP);
    iiccomm2_bus_r_m_axi_U->I_BID(bus_r_BID);
    iiccomm2_bus_r_m_axi_U->I_BUSER(bus_r_BUSER);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_bus_r_ARREADY);
    sensitive << ( bus_r_ARREADY );
    sensitive << ( ap_reg_ioackin_bus_r_ARREADY );

    SC_METHOD(thread_bus_r_ARADDR);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_reg_ioackin_bus_r_ARREADY );

    SC_METHOD(thread_bus_r_ARVALID);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_reg_ioackin_bus_r_ARREADY );

    SC_METHOD(thread_bus_r_RREADY);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( bus_r_RVALID );

    SC_METHOD(thread_bus_r_blk_n_AR);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_bus_r_ARREADY );

    SC_METHOD(thread_bus_r_blk_n_R);
    sensitive << ( m_axi_bus_r_RVALID );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_outValue_ap_vld);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( bus_r_RVALID );
    sensitive << ( ap_sig_ioackin_bus_r_ARREADY );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    ap_CS_fsm = "000000001";
    ap_reg_ioackin_bus_r_ARREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "iiccomm2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_bus_r_AWVALID, "(port)m_axi_bus_r_AWVALID");
    sc_trace(mVcdFile, m_axi_bus_r_AWREADY, "(port)m_axi_bus_r_AWREADY");
    sc_trace(mVcdFile, m_axi_bus_r_AWADDR, "(port)m_axi_bus_r_AWADDR");
    sc_trace(mVcdFile, m_axi_bus_r_AWID, "(port)m_axi_bus_r_AWID");
    sc_trace(mVcdFile, m_axi_bus_r_AWLEN, "(port)m_axi_bus_r_AWLEN");
    sc_trace(mVcdFile, m_axi_bus_r_AWSIZE, "(port)m_axi_bus_r_AWSIZE");
    sc_trace(mVcdFile, m_axi_bus_r_AWBURST, "(port)m_axi_bus_r_AWBURST");
    sc_trace(mVcdFile, m_axi_bus_r_AWLOCK, "(port)m_axi_bus_r_AWLOCK");
    sc_trace(mVcdFile, m_axi_bus_r_AWCACHE, "(port)m_axi_bus_r_AWCACHE");
    sc_trace(mVcdFile, m_axi_bus_r_AWPROT, "(port)m_axi_bus_r_AWPROT");
    sc_trace(mVcdFile, m_axi_bus_r_AWQOS, "(port)m_axi_bus_r_AWQOS");
    sc_trace(mVcdFile, m_axi_bus_r_AWREGION, "(port)m_axi_bus_r_AWREGION");
    sc_trace(mVcdFile, m_axi_bus_r_AWUSER, "(port)m_axi_bus_r_AWUSER");
    sc_trace(mVcdFile, m_axi_bus_r_WVALID, "(port)m_axi_bus_r_WVALID");
    sc_trace(mVcdFile, m_axi_bus_r_WREADY, "(port)m_axi_bus_r_WREADY");
    sc_trace(mVcdFile, m_axi_bus_r_WDATA, "(port)m_axi_bus_r_WDATA");
    sc_trace(mVcdFile, m_axi_bus_r_WSTRB, "(port)m_axi_bus_r_WSTRB");
    sc_trace(mVcdFile, m_axi_bus_r_WLAST, "(port)m_axi_bus_r_WLAST");
    sc_trace(mVcdFile, m_axi_bus_r_WID, "(port)m_axi_bus_r_WID");
    sc_trace(mVcdFile, m_axi_bus_r_WUSER, "(port)m_axi_bus_r_WUSER");
    sc_trace(mVcdFile, m_axi_bus_r_ARVALID, "(port)m_axi_bus_r_ARVALID");
    sc_trace(mVcdFile, m_axi_bus_r_ARREADY, "(port)m_axi_bus_r_ARREADY");
    sc_trace(mVcdFile, m_axi_bus_r_ARADDR, "(port)m_axi_bus_r_ARADDR");
    sc_trace(mVcdFile, m_axi_bus_r_ARID, "(port)m_axi_bus_r_ARID");
    sc_trace(mVcdFile, m_axi_bus_r_ARLEN, "(port)m_axi_bus_r_ARLEN");
    sc_trace(mVcdFile, m_axi_bus_r_ARSIZE, "(port)m_axi_bus_r_ARSIZE");
    sc_trace(mVcdFile, m_axi_bus_r_ARBURST, "(port)m_axi_bus_r_ARBURST");
    sc_trace(mVcdFile, m_axi_bus_r_ARLOCK, "(port)m_axi_bus_r_ARLOCK");
    sc_trace(mVcdFile, m_axi_bus_r_ARCACHE, "(port)m_axi_bus_r_ARCACHE");
    sc_trace(mVcdFile, m_axi_bus_r_ARPROT, "(port)m_axi_bus_r_ARPROT");
    sc_trace(mVcdFile, m_axi_bus_r_ARQOS, "(port)m_axi_bus_r_ARQOS");
    sc_trace(mVcdFile, m_axi_bus_r_ARREGION, "(port)m_axi_bus_r_ARREGION");
    sc_trace(mVcdFile, m_axi_bus_r_ARUSER, "(port)m_axi_bus_r_ARUSER");
    sc_trace(mVcdFile, m_axi_bus_r_RVALID, "(port)m_axi_bus_r_RVALID");
    sc_trace(mVcdFile, m_axi_bus_r_RREADY, "(port)m_axi_bus_r_RREADY");
    sc_trace(mVcdFile, m_axi_bus_r_RDATA, "(port)m_axi_bus_r_RDATA");
    sc_trace(mVcdFile, m_axi_bus_r_RLAST, "(port)m_axi_bus_r_RLAST");
    sc_trace(mVcdFile, m_axi_bus_r_RID, "(port)m_axi_bus_r_RID");
    sc_trace(mVcdFile, m_axi_bus_r_RUSER, "(port)m_axi_bus_r_RUSER");
    sc_trace(mVcdFile, m_axi_bus_r_RRESP, "(port)m_axi_bus_r_RRESP");
    sc_trace(mVcdFile, m_axi_bus_r_BVALID, "(port)m_axi_bus_r_BVALID");
    sc_trace(mVcdFile, m_axi_bus_r_BREADY, "(port)m_axi_bus_r_BREADY");
    sc_trace(mVcdFile, m_axi_bus_r_BRESP, "(port)m_axi_bus_r_BRESP");
    sc_trace(mVcdFile, m_axi_bus_r_BID, "(port)m_axi_bus_r_BID");
    sc_trace(mVcdFile, m_axi_bus_r_BUSER, "(port)m_axi_bus_r_BUSER");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, s_axi_outValue_first_AWVALID, "(port)s_axi_outValue_first_AWVALID");
    sc_trace(mVcdFile, s_axi_outValue_first_AWREADY, "(port)s_axi_outValue_first_AWREADY");
    sc_trace(mVcdFile, s_axi_outValue_first_AWADDR, "(port)s_axi_outValue_first_AWADDR");
    sc_trace(mVcdFile, s_axi_outValue_first_WVALID, "(port)s_axi_outValue_first_WVALID");
    sc_trace(mVcdFile, s_axi_outValue_first_WREADY, "(port)s_axi_outValue_first_WREADY");
    sc_trace(mVcdFile, s_axi_outValue_first_WDATA, "(port)s_axi_outValue_first_WDATA");
    sc_trace(mVcdFile, s_axi_outValue_first_WSTRB, "(port)s_axi_outValue_first_WSTRB");
    sc_trace(mVcdFile, s_axi_outValue_first_ARVALID, "(port)s_axi_outValue_first_ARVALID");
    sc_trace(mVcdFile, s_axi_outValue_first_ARREADY, "(port)s_axi_outValue_first_ARREADY");
    sc_trace(mVcdFile, s_axi_outValue_first_ARADDR, "(port)s_axi_outValue_first_ARADDR");
    sc_trace(mVcdFile, s_axi_outValue_first_RVALID, "(port)s_axi_outValue_first_RVALID");
    sc_trace(mVcdFile, s_axi_outValue_first_RREADY, "(port)s_axi_outValue_first_RREADY");
    sc_trace(mVcdFile, s_axi_outValue_first_RDATA, "(port)s_axi_outValue_first_RDATA");
    sc_trace(mVcdFile, s_axi_outValue_first_RRESP, "(port)s_axi_outValue_first_RRESP");
    sc_trace(mVcdFile, s_axi_outValue_first_BVALID, "(port)s_axi_outValue_first_BVALID");
    sc_trace(mVcdFile, s_axi_outValue_first_BREADY, "(port)s_axi_outValue_first_BREADY");
    sc_trace(mVcdFile, s_axi_outValue_first_BRESP, "(port)s_axi_outValue_first_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, outValue_ap_vld, "outValue_ap_vld");
    sc_trace(mVcdFile, bus_r_blk_n_AR, "bus_r_blk_n_AR");
    sc_trace(mVcdFile, bus_r_blk_n_R, "bus_r_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, bus_r_AWREADY, "bus_r_AWREADY");
    sc_trace(mVcdFile, bus_r_WREADY, "bus_r_WREADY");
    sc_trace(mVcdFile, bus_r_ARVALID, "bus_r_ARVALID");
    sc_trace(mVcdFile, bus_r_ARREADY, "bus_r_ARREADY");
    sc_trace(mVcdFile, bus_r_ARADDR, "bus_r_ARADDR");
    sc_trace(mVcdFile, bus_r_RVALID, "bus_r_RVALID");
    sc_trace(mVcdFile, bus_r_RREADY, "bus_r_RREADY");
    sc_trace(mVcdFile, bus_r_RDATA, "bus_r_RDATA");
    sc_trace(mVcdFile, bus_r_RLAST, "bus_r_RLAST");
    sc_trace(mVcdFile, bus_r_RID, "bus_r_RID");
    sc_trace(mVcdFile, bus_r_RUSER, "bus_r_RUSER");
    sc_trace(mVcdFile, bus_r_RRESP, "bus_r_RRESP");
    sc_trace(mVcdFile, bus_r_BVALID, "bus_r_BVALID");
    sc_trace(mVcdFile, bus_r_BRESP, "bus_r_BRESP");
    sc_trace(mVcdFile, bus_r_BID, "bus_r_BID");
    sc_trace(mVcdFile, bus_r_BUSER, "bus_r_BUSER");
    sc_trace(mVcdFile, ap_sig_ioackin_bus_r_ARREADY, "ap_sig_ioackin_bus_r_ARREADY");
    sc_trace(mVcdFile, bus_addr_read_reg_68, "bus_addr_read_reg_68");
    sc_trace(mVcdFile, ap_reg_ioackin_bus_r_ARREADY, "ap_reg_ioackin_bus_r_ARREADY");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("iiccomm2.hdltvin.dat");
    mHdltvoutHandle.open("iiccomm2.hdltvout.dat");
}

iiccomm2::~iiccomm2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete iiccomm2_AXILiteS_s_axi_U;
    delete iiccomm2_outValue_first_s_axi_U;
    delete iiccomm2_bus_r_m_axi_U;
}

void iiccomm2::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void iiccomm2::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void iiccomm2::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv32_0;
}

void iiccomm2::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_1;
}

void iiccomm2::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void iiccomm2::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void iiccomm2::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void iiccomm2::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void iiccomm2::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_bus_r_ARREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
            if (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_bus_r_ARREADY.read()))) {
                ap_reg_ioackin_bus_r_ARREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, bus_r_ARREADY.read()))) {
                ap_reg_ioackin_bus_r_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(bus_r_RVALID.read(), ap_const_logic_1))) {
        bus_addr_read_reg_68 = bus_r_RDATA.read();
    }
}

void iiccomm2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void iiccomm2::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void iiccomm2::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void iiccomm2::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void iiccomm2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void iiccomm2::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void iiccomm2::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void iiccomm2::thread_ap_sig_ioackin_bus_r_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_bus_r_ARREADY.read())) {
        ap_sig_ioackin_bus_r_ARREADY = bus_r_ARREADY.read();
    } else {
        ap_sig_ioackin_bus_r_ARREADY = ap_const_logic_1;
    }
}

void iiccomm2::thread_bus_r_ARADDR() {
    bus_r_ARADDR =  (sc_lv<32>) (ap_const_lv64_40003104);
}

void iiccomm2::thread_bus_r_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_bus_r_ARREADY.read()))) {
        bus_r_ARVALID = ap_const_logic_1;
    } else {
        bus_r_ARVALID = ap_const_logic_0;
    }
}

void iiccomm2::thread_bus_r_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(bus_r_RVALID.read(), ap_const_logic_1))) {
        bus_r_RREADY = ap_const_logic_1;
    } else {
        bus_r_RREADY = ap_const_logic_0;
    }
}

void iiccomm2::thread_bus_r_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bus_r_blk_n_AR = m_axi_bus_r_ARREADY.read();
    } else {
        bus_r_blk_n_AR = ap_const_logic_1;
    }
}

void iiccomm2::thread_bus_r_blk_n_R() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        bus_r_blk_n_R = m_axi_bus_r_RVALID.read();
    } else {
        bus_r_blk_n_R = ap_const_logic_1;
    }
}

void iiccomm2::thread_outValue_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        outValue_ap_vld = ap_const_logic_1;
    } else {
        outValue_ap_vld = ap_const_logic_0;
    }
}

void iiccomm2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_bus_r_ARREADY.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(bus_r_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXX";
            break;
    }
}

void iiccomm2::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_bus_r_AWVALID\" :  \"" << m_axi_bus_r_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_bus_r_AWREADY\" :  \"" << m_axi_bus_r_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_AWADDR\" :  \"" << m_axi_bus_r_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_AWID\" :  \"" << m_axi_bus_r_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_AWLEN\" :  \"" << m_axi_bus_r_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_AWSIZE\" :  \"" << m_axi_bus_r_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_AWBURST\" :  \"" << m_axi_bus_r_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_AWLOCK\" :  \"" << m_axi_bus_r_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_AWCACHE\" :  \"" << m_axi_bus_r_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_AWPROT\" :  \"" << m_axi_bus_r_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_AWQOS\" :  \"" << m_axi_bus_r_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_AWREGION\" :  \"" << m_axi_bus_r_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_AWUSER\" :  \"" << m_axi_bus_r_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_WVALID\" :  \"" << m_axi_bus_r_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_bus_r_WREADY\" :  \"" << m_axi_bus_r_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_WDATA\" :  \"" << m_axi_bus_r_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_WSTRB\" :  \"" << m_axi_bus_r_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_WLAST\" :  \"" << m_axi_bus_r_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_WID\" :  \"" << m_axi_bus_r_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_WUSER\" :  \"" << m_axi_bus_r_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_ARVALID\" :  \"" << m_axi_bus_r_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_bus_r_ARREADY\" :  \"" << m_axi_bus_r_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_ARADDR\" :  \"" << m_axi_bus_r_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_ARID\" :  \"" << m_axi_bus_r_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_ARLEN\" :  \"" << m_axi_bus_r_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_ARSIZE\" :  \"" << m_axi_bus_r_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_ARBURST\" :  \"" << m_axi_bus_r_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_ARLOCK\" :  \"" << m_axi_bus_r_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_ARCACHE\" :  \"" << m_axi_bus_r_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_ARPROT\" :  \"" << m_axi_bus_r_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_ARQOS\" :  \"" << m_axi_bus_r_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_ARREGION\" :  \"" << m_axi_bus_r_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_ARUSER\" :  \"" << m_axi_bus_r_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_bus_r_RVALID\" :  \"" << m_axi_bus_r_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_RREADY\" :  \"" << m_axi_bus_r_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_bus_r_RDATA\" :  \"" << m_axi_bus_r_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_bus_r_RLAST\" :  \"" << m_axi_bus_r_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_bus_r_RID\" :  \"" << m_axi_bus_r_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_bus_r_RUSER\" :  \"" << m_axi_bus_r_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_bus_r_RRESP\" :  \"" << m_axi_bus_r_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_bus_r_BVALID\" :  \"" << m_axi_bus_r_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_bus_r_BREADY\" :  \"" << m_axi_bus_r_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_bus_r_BRESP\" :  \"" << m_axi_bus_r_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_bus_r_BID\" :  \"" << m_axi_bus_r_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_bus_r_BUSER\" :  \"" << m_axi_bus_r_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outValue_first_AWVALID\" :  \"" << s_axi_outValue_first_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outValue_first_AWREADY\" :  \"" << s_axi_outValue_first_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outValue_first_AWADDR\" :  \"" << s_axi_outValue_first_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outValue_first_WVALID\" :  \"" << s_axi_outValue_first_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outValue_first_WREADY\" :  \"" << s_axi_outValue_first_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outValue_first_WDATA\" :  \"" << s_axi_outValue_first_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outValue_first_WSTRB\" :  \"" << s_axi_outValue_first_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outValue_first_ARVALID\" :  \"" << s_axi_outValue_first_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outValue_first_ARREADY\" :  \"" << s_axi_outValue_first_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outValue_first_ARADDR\" :  \"" << s_axi_outValue_first_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outValue_first_RVALID\" :  \"" << s_axi_outValue_first_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outValue_first_RREADY\" :  \"" << s_axi_outValue_first_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outValue_first_RDATA\" :  \"" << s_axi_outValue_first_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outValue_first_RRESP\" :  \"" << s_axi_outValue_first_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outValue_first_BVALID\" :  \"" << s_axi_outValue_first_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_outValue_first_BREADY\" :  \"" << s_axi_outValue_first_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_outValue_first_BRESP\" :  \"" << s_axi_outValue_first_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

