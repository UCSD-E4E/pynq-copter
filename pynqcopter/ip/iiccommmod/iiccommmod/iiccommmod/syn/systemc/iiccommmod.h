// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _iiccommmod_HH_
#define _iiccommmod_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "readData.h"
#include "iiccommmod_AXILiteS_s_axi.h"
#include "iiccommmod_iic_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_IIC_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_IIC_ID_WIDTH = 1,
         unsigned int C_M_AXI_IIC_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_IIC_DATA_WIDTH = 32,
         unsigned int C_M_AXI_IIC_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_IIC_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_IIC_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_IIC_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 7,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct iiccommmod : public sc_module {
    // Port declarations 65
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_iic_AWVALID;
    sc_in< sc_logic > m_axi_iic_AWREADY;
    sc_out< sc_uint<C_M_AXI_IIC_ADDR_WIDTH> > m_axi_iic_AWADDR;
    sc_out< sc_uint<C_M_AXI_IIC_ID_WIDTH> > m_axi_iic_AWID;
    sc_out< sc_lv<8> > m_axi_iic_AWLEN;
    sc_out< sc_lv<3> > m_axi_iic_AWSIZE;
    sc_out< sc_lv<2> > m_axi_iic_AWBURST;
    sc_out< sc_lv<2> > m_axi_iic_AWLOCK;
    sc_out< sc_lv<4> > m_axi_iic_AWCACHE;
    sc_out< sc_lv<3> > m_axi_iic_AWPROT;
    sc_out< sc_lv<4> > m_axi_iic_AWQOS;
    sc_out< sc_lv<4> > m_axi_iic_AWREGION;
    sc_out< sc_uint<C_M_AXI_IIC_AWUSER_WIDTH> > m_axi_iic_AWUSER;
    sc_out< sc_logic > m_axi_iic_WVALID;
    sc_in< sc_logic > m_axi_iic_WREADY;
    sc_out< sc_uint<C_M_AXI_IIC_DATA_WIDTH> > m_axi_iic_WDATA;
    sc_out< sc_uint<C_M_AXI_IIC_DATA_WIDTH/8> > m_axi_iic_WSTRB;
    sc_out< sc_logic > m_axi_iic_WLAST;
    sc_out< sc_uint<C_M_AXI_IIC_ID_WIDTH> > m_axi_iic_WID;
    sc_out< sc_uint<C_M_AXI_IIC_WUSER_WIDTH> > m_axi_iic_WUSER;
    sc_out< sc_logic > m_axi_iic_ARVALID;
    sc_in< sc_logic > m_axi_iic_ARREADY;
    sc_out< sc_uint<C_M_AXI_IIC_ADDR_WIDTH> > m_axi_iic_ARADDR;
    sc_out< sc_uint<C_M_AXI_IIC_ID_WIDTH> > m_axi_iic_ARID;
    sc_out< sc_lv<8> > m_axi_iic_ARLEN;
    sc_out< sc_lv<3> > m_axi_iic_ARSIZE;
    sc_out< sc_lv<2> > m_axi_iic_ARBURST;
    sc_out< sc_lv<2> > m_axi_iic_ARLOCK;
    sc_out< sc_lv<4> > m_axi_iic_ARCACHE;
    sc_out< sc_lv<3> > m_axi_iic_ARPROT;
    sc_out< sc_lv<4> > m_axi_iic_ARQOS;
    sc_out< sc_lv<4> > m_axi_iic_ARREGION;
    sc_out< sc_uint<C_M_AXI_IIC_ARUSER_WIDTH> > m_axi_iic_ARUSER;
    sc_in< sc_logic > m_axi_iic_RVALID;
    sc_out< sc_logic > m_axi_iic_RREADY;
    sc_in< sc_uint<C_M_AXI_IIC_DATA_WIDTH> > m_axi_iic_RDATA;
    sc_in< sc_logic > m_axi_iic_RLAST;
    sc_in< sc_uint<C_M_AXI_IIC_ID_WIDTH> > m_axi_iic_RID;
    sc_in< sc_uint<C_M_AXI_IIC_RUSER_WIDTH> > m_axi_iic_RUSER;
    sc_in< sc_lv<2> > m_axi_iic_RRESP;
    sc_in< sc_logic > m_axi_iic_BVALID;
    sc_out< sc_logic > m_axi_iic_BREADY;
    sc_in< sc_lv<2> > m_axi_iic_BRESP;
    sc_in< sc_uint<C_M_AXI_IIC_ID_WIDTH> > m_axi_iic_BID;
    sc_in< sc_uint<C_M_AXI_IIC_BUSER_WIDTH> > m_axi_iic_BUSER;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const2;


    // Module declarations
    iiccommmod(sc_module_name name);
    SC_HAS_PROCESS(iiccommmod);

    ~iiccommmod();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    iiccommmod_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* iiccommmod_AXILiteS_s_axi_U;
    iiccommmod_iic_m_axi<32,32,5,16,16,16,16,C_M_AXI_IIC_ID_WIDTH,C_M_AXI_IIC_ADDR_WIDTH,C_M_AXI_IIC_DATA_WIDTH,C_M_AXI_IIC_AWUSER_WIDTH,C_M_AXI_IIC_ARUSER_WIDTH,C_M_AXI_IIC_WUSER_WIDTH,C_M_AXI_IIC_RUSER_WIDTH,C_M_AXI_IIC_BUSER_WIDTH,C_M_AXI_IIC_TARGET_ADDR,C_M_AXI_IIC_USER_VALUE,C_M_AXI_IIC_PROT_VALUE,C_M_AXI_IIC_CACHE_VALUE>* iiccommmod_iic_m_axi_U;
    readData* grp_readData_fu_188;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<41> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_logic > stat_reg_outValue1_ap_vld;
    sc_signal< sc_logic > empty_pirq_outValue_ap_vld;
    sc_signal< sc_logic > full_pirq_outValue_ap_vld;
    sc_signal< sc_lv<32> > stat_reg_outValue2;
    sc_signal< sc_lv<32> > stat_reg_outValue3;
    sc_signal< sc_lv<32> > stat_reg_outValue4;
    sc_signal< sc_lv<32> > tx_fifo_outValue;
    sc_signal< sc_logic > rx_fifo_outValue_ap_vld;
    sc_signal< sc_logic > ctrl_reg_outValue_ap_vld;
    sc_signal< sc_logic > iic_blk_n_AR;
    sc_signal< sc_logic > iic_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > iic_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > iic_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > iic_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_logic > ap_CS_fsm_state40;
    sc_signal< sc_logic > iic_AWVALID;
    sc_signal< sc_logic > iic_AWREADY;
    sc_signal< sc_lv<32> > iic_AWADDR;
    sc_signal< sc_lv<1> > iic_AWID;
    sc_signal< sc_lv<32> > iic_AWLEN;
    sc_signal< sc_lv<3> > iic_AWSIZE;
    sc_signal< sc_lv<2> > iic_AWBURST;
    sc_signal< sc_lv<2> > iic_AWLOCK;
    sc_signal< sc_lv<4> > iic_AWCACHE;
    sc_signal< sc_lv<3> > iic_AWPROT;
    sc_signal< sc_lv<4> > iic_AWQOS;
    sc_signal< sc_lv<4> > iic_AWREGION;
    sc_signal< sc_lv<1> > iic_AWUSER;
    sc_signal< sc_logic > iic_WVALID;
    sc_signal< sc_logic > iic_WREADY;
    sc_signal< sc_lv<32> > iic_WDATA;
    sc_signal< sc_lv<4> > iic_WSTRB;
    sc_signal< sc_logic > iic_WLAST;
    sc_signal< sc_lv<1> > iic_WID;
    sc_signal< sc_lv<1> > iic_WUSER;
    sc_signal< sc_logic > iic_ARVALID;
    sc_signal< sc_logic > iic_ARREADY;
    sc_signal< sc_lv<32> > iic_ARADDR;
    sc_signal< sc_lv<1> > iic_ARID;
    sc_signal< sc_lv<32> > iic_ARLEN;
    sc_signal< sc_lv<3> > iic_ARSIZE;
    sc_signal< sc_lv<2> > iic_ARBURST;
    sc_signal< sc_lv<2> > iic_ARLOCK;
    sc_signal< sc_lv<4> > iic_ARCACHE;
    sc_signal< sc_lv<3> > iic_ARPROT;
    sc_signal< sc_lv<4> > iic_ARQOS;
    sc_signal< sc_lv<4> > iic_ARREGION;
    sc_signal< sc_lv<1> > iic_ARUSER;
    sc_signal< sc_logic > iic_RVALID;
    sc_signal< sc_logic > iic_RREADY;
    sc_signal< sc_lv<32> > iic_RDATA;
    sc_signal< sc_logic > iic_RLAST;
    sc_signal< sc_lv<1> > iic_RID;
    sc_signal< sc_lv<1> > iic_RUSER;
    sc_signal< sc_lv<2> > iic_RRESP;
    sc_signal< sc_logic > iic_BVALID;
    sc_signal< sc_logic > iic_BREADY;
    sc_signal< sc_lv<2> > iic_BRESP;
    sc_signal< sc_lv<1> > iic_BID;
    sc_signal< sc_lv<1> > iic_BUSER;
    sc_signal< sc_logic > ap_sig_ioackin_iic_ARREADY;
    sc_signal< sc_lv<32> > iic_addr_read_reg_236;
    sc_signal< sc_logic > ap_sig_ioackin_iic_WREADY;
    sc_signal< sc_logic > ap_sig_ioackin_iic_AWREADY;
    sc_signal< bool > ap_block_state10_io;
    sc_signal< sc_lv<32> > iic_addr_2_read_reg_253;
    sc_signal< sc_lv<32> > iic_addr_4_read_reg_270;
    sc_signal< sc_logic > grp_readData_fu_188_ap_start;
    sc_signal< sc_logic > grp_readData_fu_188_ap_done;
    sc_signal< sc_logic > grp_readData_fu_188_ap_idle;
    sc_signal< sc_logic > grp_readData_fu_188_ap_ready;
    sc_signal< sc_logic > grp_readData_fu_188_m_axi_iic2_AWVALID;
    sc_signal< sc_lv<32> > grp_readData_fu_188_m_axi_iic2_AWADDR;
    sc_signal< sc_lv<1> > grp_readData_fu_188_m_axi_iic2_AWID;
    sc_signal< sc_lv<32> > grp_readData_fu_188_m_axi_iic2_AWLEN;
    sc_signal< sc_lv<3> > grp_readData_fu_188_m_axi_iic2_AWSIZE;
    sc_signal< sc_lv<2> > grp_readData_fu_188_m_axi_iic2_AWBURST;
    sc_signal< sc_lv<2> > grp_readData_fu_188_m_axi_iic2_AWLOCK;
    sc_signal< sc_lv<4> > grp_readData_fu_188_m_axi_iic2_AWCACHE;
    sc_signal< sc_lv<3> > grp_readData_fu_188_m_axi_iic2_AWPROT;
    sc_signal< sc_lv<4> > grp_readData_fu_188_m_axi_iic2_AWQOS;
    sc_signal< sc_lv<4> > grp_readData_fu_188_m_axi_iic2_AWREGION;
    sc_signal< sc_lv<1> > grp_readData_fu_188_m_axi_iic2_AWUSER;
    sc_signal< sc_logic > grp_readData_fu_188_m_axi_iic2_WVALID;
    sc_signal< sc_lv<32> > grp_readData_fu_188_m_axi_iic2_WDATA;
    sc_signal< sc_lv<4> > grp_readData_fu_188_m_axi_iic2_WSTRB;
    sc_signal< sc_logic > grp_readData_fu_188_m_axi_iic2_WLAST;
    sc_signal< sc_lv<1> > grp_readData_fu_188_m_axi_iic2_WID;
    sc_signal< sc_lv<1> > grp_readData_fu_188_m_axi_iic2_WUSER;
    sc_signal< sc_logic > grp_readData_fu_188_m_axi_iic2_ARVALID;
    sc_signal< sc_lv<32> > grp_readData_fu_188_m_axi_iic2_ARADDR;
    sc_signal< sc_lv<1> > grp_readData_fu_188_m_axi_iic2_ARID;
    sc_signal< sc_lv<32> > grp_readData_fu_188_m_axi_iic2_ARLEN;
    sc_signal< sc_lv<3> > grp_readData_fu_188_m_axi_iic2_ARSIZE;
    sc_signal< sc_lv<2> > grp_readData_fu_188_m_axi_iic2_ARBURST;
    sc_signal< sc_lv<2> > grp_readData_fu_188_m_axi_iic2_ARLOCK;
    sc_signal< sc_lv<4> > grp_readData_fu_188_m_axi_iic2_ARCACHE;
    sc_signal< sc_lv<3> > grp_readData_fu_188_m_axi_iic2_ARPROT;
    sc_signal< sc_lv<4> > grp_readData_fu_188_m_axi_iic2_ARQOS;
    sc_signal< sc_lv<4> > grp_readData_fu_188_m_axi_iic2_ARREGION;
    sc_signal< sc_lv<1> > grp_readData_fu_188_m_axi_iic2_ARUSER;
    sc_signal< sc_logic > grp_readData_fu_188_m_axi_iic2_RREADY;
    sc_signal< sc_logic > grp_readData_fu_188_m_axi_iic2_BREADY;
    sc_signal< sc_logic > ap_reg_grp_readData_fu_188_ap_start;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< sc_logic > ap_reg_ioackin_iic_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_iic_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_iic_WREADY;
    sc_signal< sc_logic > ap_reg_ioackin_empty_pirq_outValue_dummy_ack;
    sc_signal< sc_logic > ap_reg_ioackin_full_pirq_outValue_dummy_ack;
    sc_signal< sc_logic > ap_reg_ioackin_ctrl_reg_outValue_dummy_ack;
    sc_signal< sc_logic > ap_reg_ioackin_stat_reg_outValue1_dummy_ack;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_lv<41> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<41> ap_ST_fsm_state1;
    static const sc_lv<41> ap_ST_fsm_state2;
    static const sc_lv<41> ap_ST_fsm_state3;
    static const sc_lv<41> ap_ST_fsm_state4;
    static const sc_lv<41> ap_ST_fsm_state5;
    static const sc_lv<41> ap_ST_fsm_state6;
    static const sc_lv<41> ap_ST_fsm_state7;
    static const sc_lv<41> ap_ST_fsm_state8;
    static const sc_lv<41> ap_ST_fsm_state9;
    static const sc_lv<41> ap_ST_fsm_state10;
    static const sc_lv<41> ap_ST_fsm_state11;
    static const sc_lv<41> ap_ST_fsm_state12;
    static const sc_lv<41> ap_ST_fsm_state13;
    static const sc_lv<41> ap_ST_fsm_state14;
    static const sc_lv<41> ap_ST_fsm_state15;
    static const sc_lv<41> ap_ST_fsm_state16;
    static const sc_lv<41> ap_ST_fsm_state17;
    static const sc_lv<41> ap_ST_fsm_state18;
    static const sc_lv<41> ap_ST_fsm_state19;
    static const sc_lv<41> ap_ST_fsm_state20;
    static const sc_lv<41> ap_ST_fsm_state21;
    static const sc_lv<41> ap_ST_fsm_state22;
    static const sc_lv<41> ap_ST_fsm_state23;
    static const sc_lv<41> ap_ST_fsm_state24;
    static const sc_lv<41> ap_ST_fsm_state25;
    static const sc_lv<41> ap_ST_fsm_state26;
    static const sc_lv<41> ap_ST_fsm_state27;
    static const sc_lv<41> ap_ST_fsm_state28;
    static const sc_lv<41> ap_ST_fsm_state29;
    static const sc_lv<41> ap_ST_fsm_state30;
    static const sc_lv<41> ap_ST_fsm_state31;
    static const sc_lv<41> ap_ST_fsm_state32;
    static const sc_lv<41> ap_ST_fsm_state33;
    static const sc_lv<41> ap_ST_fsm_state34;
    static const sc_lv<41> ap_ST_fsm_state35;
    static const sc_lv<41> ap_ST_fsm_state36;
    static const sc_lv<41> ap_ST_fsm_state37;
    static const sc_lv<41> ap_ST_fsm_state38;
    static const sc_lv<41> ap_ST_fsm_state39;
    static const sc_lv<41> ap_ST_fsm_state40;
    static const sc_lv<41> ap_ST_fsm_state41;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_27;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_IIC_TARGET_ADDR;
    static const int C_M_AXI_IIC_USER_VALUE;
    static const int C_M_AXI_IIC_PROT_VALUE;
    static const int C_M_AXI_IIC_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<64> ap_const_lv64_10000448;
    static const sc_lv<64> ap_const_lv64_10000440;
    static const sc_lv<64> ap_const_lv64_10000441;
    static const sc_lv<64> ap_const_lv64_10000442;
    static const sc_lv<64> ap_const_lv64_10000443;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<32> ap_const_lv32_28;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state40();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state10_io();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_iic_ARREADY();
    void thread_ap_sig_ioackin_iic_AWREADY();
    void thread_ap_sig_ioackin_iic_WREADY();
    void thread_ctrl_reg_outValue_ap_vld();
    void thread_empty_pirq_outValue_ap_vld();
    void thread_full_pirq_outValue_ap_vld();
    void thread_grp_readData_fu_188_ap_start();
    void thread_iic_ARADDR();
    void thread_iic_ARBURST();
    void thread_iic_ARCACHE();
    void thread_iic_ARID();
    void thread_iic_ARLEN();
    void thread_iic_ARLOCK();
    void thread_iic_ARPROT();
    void thread_iic_ARQOS();
    void thread_iic_ARREGION();
    void thread_iic_ARSIZE();
    void thread_iic_ARUSER();
    void thread_iic_ARVALID();
    void thread_iic_AWADDR();
    void thread_iic_AWBURST();
    void thread_iic_AWCACHE();
    void thread_iic_AWID();
    void thread_iic_AWLEN();
    void thread_iic_AWLOCK();
    void thread_iic_AWPROT();
    void thread_iic_AWQOS();
    void thread_iic_AWREGION();
    void thread_iic_AWSIZE();
    void thread_iic_AWUSER();
    void thread_iic_AWVALID();
    void thread_iic_BREADY();
    void thread_iic_RREADY();
    void thread_iic_WDATA();
    void thread_iic_WID();
    void thread_iic_WLAST();
    void thread_iic_WSTRB();
    void thread_iic_WUSER();
    void thread_iic_WVALID();
    void thread_iic_blk_n_AR();
    void thread_iic_blk_n_AW();
    void thread_iic_blk_n_B();
    void thread_iic_blk_n_R();
    void thread_iic_blk_n_W();
    void thread_rx_fifo_outValue_ap_vld();
    void thread_stat_reg_outValue1_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
