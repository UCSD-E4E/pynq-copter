// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "iiccommmod.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic iiccommmod::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic iiccommmod::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<40> iiccommmod::ap_ST_fsm_state1 = "1";
const sc_lv<40> iiccommmod::ap_ST_fsm_state2 = "10";
const sc_lv<40> iiccommmod::ap_ST_fsm_state3 = "100";
const sc_lv<40> iiccommmod::ap_ST_fsm_state4 = "1000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state5 = "10000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state6 = "100000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state7 = "1000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state8 = "10000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state9 = "100000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state10 = "1000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state11 = "10000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state12 = "100000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<40> iiccommmod::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<32> iiccommmod::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> iiccommmod::ap_const_lv32_7 = "111";
const sc_lv<32> iiccommmod::ap_const_lv32_8 = "1000";
const sc_lv<32> iiccommmod::ap_const_lv32_D = "1101";
const sc_lv<32> iiccommmod::ap_const_lv32_9 = "1001";
const sc_lv<32> iiccommmod::ap_const_lv32_E = "1110";
const sc_lv<32> iiccommmod::ap_const_lv32_F = "1111";
const sc_lv<32> iiccommmod::ap_const_lv32_16 = "10110";
const sc_lv<32> iiccommmod::ap_const_lv32_17 = "10111";
const sc_lv<32> iiccommmod::ap_const_lv32_1C = "11100";
const sc_lv<32> iiccommmod::ap_const_lv32_1F = "11111";
const sc_lv<1> iiccommmod::ap_const_lv1_1 = "1";
const sc_lv<32> iiccommmod::ap_const_lv32_26 = "100110";
const int iiccommmod::C_S_AXI_DATA_WIDTH = "100000";
const int iiccommmod::C_M_AXI_IIC_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int iiccommmod::C_M_AXI_IIC_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int iiccommmod::C_M_AXI_IIC_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int iiccommmod::C_M_AXI_IIC_CACHE_VALUE = "11";
const int iiccommmod::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> iiccommmod::ap_const_lv32_1D = "11101";
const bool iiccommmod::ap_const_boolean_0 = false;
const sc_lv<29> iiccommmod::ap_const_lv29_0 = "00000000000000000000000000000";
const sc_lv<1> iiccommmod::ap_const_lv1_0 = "0";
const sc_lv<32> iiccommmod::ap_const_lv32_1E = "11110";
const sc_lv<64> iiccommmod::ap_const_lv64_10000448 = "10000000000000000010001001000";
const sc_lv<64> iiccommmod::ap_const_lv64_10000440 = "10000000000000000010001000000";
const sc_lv<64> iiccommmod::ap_const_lv64_10000441 = "10000000000000000010001000001";
const sc_lv<64> iiccommmod::ap_const_lv64_10000442 = "10000000000000000010001000010";
const sc_lv<64> iiccommmod::ap_const_lv64_10000443 = "10000000000000000010001000011";
const sc_lv<32> iiccommmod::ap_const_lv32_1 = "1";
const sc_lv<3> iiccommmod::ap_const_lv3_0 = "000";
const sc_lv<2> iiccommmod::ap_const_lv2_0 = "00";
const sc_lv<4> iiccommmod::ap_const_lv4_0 = "0000";
const sc_lv<4> iiccommmod::ap_const_lv4_F = "1111";
const sc_lv<32> iiccommmod::ap_const_lv32_24 = "100100";
const sc_lv<32> iiccommmod::ap_const_lv32_27 = "100111";
const sc_lv<29> iiccommmod::ap_const_lv29_1DCD6500 = "11101110011010110010100000000";
const sc_lv<29> iiccommmod::ap_const_lv29_1 = "1";
const bool iiccommmod::ap_const_boolean_1 = true;

iiccommmod::iiccommmod(sc_module_name name) : sc_module(name), mVcdFile(0) {
    iiccommmod_AXILiteS_s_axi_U = new iiccommmod_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("iiccommmod_AXILiteS_s_axi_U");
    iiccommmod_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    iiccommmod_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    iiccommmod_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    iiccommmod_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    iiccommmod_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    iiccommmod_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    iiccommmod_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    iiccommmod_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    iiccommmod_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    iiccommmod_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    iiccommmod_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    iiccommmod_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    iiccommmod_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    iiccommmod_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    iiccommmod_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    iiccommmod_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    iiccommmod_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    iiccommmod_AXILiteS_s_axi_U->ACLK(ap_clk);
    iiccommmod_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    iiccommmod_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    iiccommmod_AXILiteS_s_axi_U->ap_start(ap_start);
    iiccommmod_AXILiteS_s_axi_U->interrupt(interrupt);
    iiccommmod_AXILiteS_s_axi_U->ap_ready(ap_ready);
    iiccommmod_AXILiteS_s_axi_U->ap_done(ap_done);
    iiccommmod_AXILiteS_s_axi_U->ap_idle(ap_idle);
    iiccommmod_AXILiteS_s_axi_U->stat_reg_outValue1(iic_addr_9_read_reg_386);
    iiccommmod_AXILiteS_s_axi_U->stat_reg_outValue1_ap_vld(stat_reg_outValue1_ap_vld);
    iiccommmod_AXILiteS_s_axi_U->empty_pirq_outValue(iic_addr_1_read_reg_371);
    iiccommmod_AXILiteS_s_axi_U->empty_pirq_outValue_ap_vld(empty_pirq_outValue_ap_vld);
    iiccommmod_AXILiteS_s_axi_U->full_pirq_outValue(ap_var_for_const1);
    iiccommmod_AXILiteS_s_axi_U->full_pirq_outValue_ap_vld(full_pirq_outValue_ap_vld);
    iiccommmod_AXILiteS_s_axi_U->stat_reg_outValue2(stat_reg_outValue2);
    iiccommmod_AXILiteS_s_axi_U->stat_reg_outValue3(stat_reg_outValue3);
    iiccommmod_AXILiteS_s_axi_U->stat_reg_outValue4(stat_reg_outValue4);
    iiccommmod_AXILiteS_s_axi_U->tx_fifo_outValue(tx_fifo_outValue);
    iiccommmod_AXILiteS_s_axi_U->rx_fifo_outValue(iic_addr_14_read_reg_417);
    iiccommmod_AXILiteS_s_axi_U->rx_fifo_outValue_ap_vld(rx_fifo_outValue_ap_vld);
    iiccommmod_AXILiteS_s_axi_U->ctrl_reg_outValue(ap_var_for_const2);
    iiccommmod_AXILiteS_s_axi_U->ctrl_reg_outValue_ap_vld(ctrl_reg_outValue_ap_vld);
    iiccommmod_iic_m_axi_U = new iiccommmod_iic_m_axi<32,32,5,16,16,16,16,C_M_AXI_IIC_ID_WIDTH,C_M_AXI_IIC_ADDR_WIDTH,C_M_AXI_IIC_DATA_WIDTH,C_M_AXI_IIC_AWUSER_WIDTH,C_M_AXI_IIC_ARUSER_WIDTH,C_M_AXI_IIC_WUSER_WIDTH,C_M_AXI_IIC_RUSER_WIDTH,C_M_AXI_IIC_BUSER_WIDTH,C_M_AXI_IIC_TARGET_ADDR,C_M_AXI_IIC_USER_VALUE,C_M_AXI_IIC_PROT_VALUE,C_M_AXI_IIC_CACHE_VALUE>("iiccommmod_iic_m_axi_U");
    iiccommmod_iic_m_axi_U->AWVALID(m_axi_iic_AWVALID);
    iiccommmod_iic_m_axi_U->AWREADY(m_axi_iic_AWREADY);
    iiccommmod_iic_m_axi_U->AWADDR(m_axi_iic_AWADDR);
    iiccommmod_iic_m_axi_U->AWID(m_axi_iic_AWID);
    iiccommmod_iic_m_axi_U->AWLEN(m_axi_iic_AWLEN);
    iiccommmod_iic_m_axi_U->AWSIZE(m_axi_iic_AWSIZE);
    iiccommmod_iic_m_axi_U->AWBURST(m_axi_iic_AWBURST);
    iiccommmod_iic_m_axi_U->AWLOCK(m_axi_iic_AWLOCK);
    iiccommmod_iic_m_axi_U->AWCACHE(m_axi_iic_AWCACHE);
    iiccommmod_iic_m_axi_U->AWPROT(m_axi_iic_AWPROT);
    iiccommmod_iic_m_axi_U->AWQOS(m_axi_iic_AWQOS);
    iiccommmod_iic_m_axi_U->AWREGION(m_axi_iic_AWREGION);
    iiccommmod_iic_m_axi_U->AWUSER(m_axi_iic_AWUSER);
    iiccommmod_iic_m_axi_U->WVALID(m_axi_iic_WVALID);
    iiccommmod_iic_m_axi_U->WREADY(m_axi_iic_WREADY);
    iiccommmod_iic_m_axi_U->WDATA(m_axi_iic_WDATA);
    iiccommmod_iic_m_axi_U->WSTRB(m_axi_iic_WSTRB);
    iiccommmod_iic_m_axi_U->WLAST(m_axi_iic_WLAST);
    iiccommmod_iic_m_axi_U->WID(m_axi_iic_WID);
    iiccommmod_iic_m_axi_U->WUSER(m_axi_iic_WUSER);
    iiccommmod_iic_m_axi_U->ARVALID(m_axi_iic_ARVALID);
    iiccommmod_iic_m_axi_U->ARREADY(m_axi_iic_ARREADY);
    iiccommmod_iic_m_axi_U->ARADDR(m_axi_iic_ARADDR);
    iiccommmod_iic_m_axi_U->ARID(m_axi_iic_ARID);
    iiccommmod_iic_m_axi_U->ARLEN(m_axi_iic_ARLEN);
    iiccommmod_iic_m_axi_U->ARSIZE(m_axi_iic_ARSIZE);
    iiccommmod_iic_m_axi_U->ARBURST(m_axi_iic_ARBURST);
    iiccommmod_iic_m_axi_U->ARLOCK(m_axi_iic_ARLOCK);
    iiccommmod_iic_m_axi_U->ARCACHE(m_axi_iic_ARCACHE);
    iiccommmod_iic_m_axi_U->ARPROT(m_axi_iic_ARPROT);
    iiccommmod_iic_m_axi_U->ARQOS(m_axi_iic_ARQOS);
    iiccommmod_iic_m_axi_U->ARREGION(m_axi_iic_ARREGION);
    iiccommmod_iic_m_axi_U->ARUSER(m_axi_iic_ARUSER);
    iiccommmod_iic_m_axi_U->RVALID(m_axi_iic_RVALID);
    iiccommmod_iic_m_axi_U->RREADY(m_axi_iic_RREADY);
    iiccommmod_iic_m_axi_U->RDATA(m_axi_iic_RDATA);
    iiccommmod_iic_m_axi_U->RLAST(m_axi_iic_RLAST);
    iiccommmod_iic_m_axi_U->RID(m_axi_iic_RID);
    iiccommmod_iic_m_axi_U->RUSER(m_axi_iic_RUSER);
    iiccommmod_iic_m_axi_U->RRESP(m_axi_iic_RRESP);
    iiccommmod_iic_m_axi_U->BVALID(m_axi_iic_BVALID);
    iiccommmod_iic_m_axi_U->BREADY(m_axi_iic_BREADY);
    iiccommmod_iic_m_axi_U->BRESP(m_axi_iic_BRESP);
    iiccommmod_iic_m_axi_U->BID(m_axi_iic_BID);
    iiccommmod_iic_m_axi_U->BUSER(m_axi_iic_BUSER);
    iiccommmod_iic_m_axi_U->ACLK(ap_clk);
    iiccommmod_iic_m_axi_U->ARESET(ap_rst_n_inv);
    iiccommmod_iic_m_axi_U->ACLK_EN(ap_var_for_const0);
    iiccommmod_iic_m_axi_U->I_ARVALID(iic_ARVALID);
    iiccommmod_iic_m_axi_U->I_ARREADY(iic_ARREADY);
    iiccommmod_iic_m_axi_U->I_ARADDR(iic_ARADDR);
    iiccommmod_iic_m_axi_U->I_ARID(iic_ARID);
    iiccommmod_iic_m_axi_U->I_ARLEN(iic_ARLEN);
    iiccommmod_iic_m_axi_U->I_ARSIZE(iic_ARSIZE);
    iiccommmod_iic_m_axi_U->I_ARLOCK(iic_ARLOCK);
    iiccommmod_iic_m_axi_U->I_ARCACHE(iic_ARCACHE);
    iiccommmod_iic_m_axi_U->I_ARQOS(iic_ARQOS);
    iiccommmod_iic_m_axi_U->I_ARPROT(iic_ARPROT);
    iiccommmod_iic_m_axi_U->I_ARUSER(iic_ARUSER);
    iiccommmod_iic_m_axi_U->I_ARBURST(iic_ARBURST);
    iiccommmod_iic_m_axi_U->I_ARREGION(iic_ARREGION);
    iiccommmod_iic_m_axi_U->I_RVALID(iic_RVALID);
    iiccommmod_iic_m_axi_U->I_RREADY(iic_RREADY);
    iiccommmod_iic_m_axi_U->I_RDATA(iic_RDATA);
    iiccommmod_iic_m_axi_U->I_RID(iic_RID);
    iiccommmod_iic_m_axi_U->I_RUSER(iic_RUSER);
    iiccommmod_iic_m_axi_U->I_RRESP(iic_RRESP);
    iiccommmod_iic_m_axi_U->I_RLAST(iic_RLAST);
    iiccommmod_iic_m_axi_U->I_AWVALID(iic_AWVALID);
    iiccommmod_iic_m_axi_U->I_AWREADY(iic_AWREADY);
    iiccommmod_iic_m_axi_U->I_AWADDR(iic_AWADDR);
    iiccommmod_iic_m_axi_U->I_AWID(iic_AWID);
    iiccommmod_iic_m_axi_U->I_AWLEN(iic_AWLEN);
    iiccommmod_iic_m_axi_U->I_AWSIZE(iic_AWSIZE);
    iiccommmod_iic_m_axi_U->I_AWLOCK(iic_AWLOCK);
    iiccommmod_iic_m_axi_U->I_AWCACHE(iic_AWCACHE);
    iiccommmod_iic_m_axi_U->I_AWQOS(iic_AWQOS);
    iiccommmod_iic_m_axi_U->I_AWPROT(iic_AWPROT);
    iiccommmod_iic_m_axi_U->I_AWUSER(iic_AWUSER);
    iiccommmod_iic_m_axi_U->I_AWBURST(iic_AWBURST);
    iiccommmod_iic_m_axi_U->I_AWREGION(iic_AWREGION);
    iiccommmod_iic_m_axi_U->I_WVALID(iic_WVALID);
    iiccommmod_iic_m_axi_U->I_WREADY(iic_WREADY);
    iiccommmod_iic_m_axi_U->I_WDATA(iic_WDATA);
    iiccommmod_iic_m_axi_U->I_WID(iic_WID);
    iiccommmod_iic_m_axi_U->I_WUSER(iic_WUSER);
    iiccommmod_iic_m_axi_U->I_WLAST(iic_WLAST);
    iiccommmod_iic_m_axi_U->I_WSTRB(iic_WSTRB);
    iiccommmod_iic_m_axi_U->I_BVALID(iic_BVALID);
    iiccommmod_iic_m_axi_U->I_BREADY(iic_BREADY);
    iiccommmod_iic_m_axi_U->I_BRESP(iic_BRESP);
    iiccommmod_iic_m_axi_U->I_BID(iic_BID);
    iiccommmod_iic_m_axi_U->I_BUSER(iic_BUSER);
    grp_readData_fu_256 = new readData("grp_readData_fu_256");
    grp_readData_fu_256->ap_clk(ap_clk);
    grp_readData_fu_256->ap_rst(ap_rst_n_inv);
    grp_readData_fu_256->ap_start(grp_readData_fu_256_ap_start);
    grp_readData_fu_256->ap_done(grp_readData_fu_256_ap_done);
    grp_readData_fu_256->ap_idle(grp_readData_fu_256_ap_idle);
    grp_readData_fu_256->ap_ready(grp_readData_fu_256_ap_ready);
    grp_readData_fu_256->m_axi_iic2_AWVALID(grp_readData_fu_256_m_axi_iic2_AWVALID);
    grp_readData_fu_256->m_axi_iic2_AWREADY(iic_AWREADY);
    grp_readData_fu_256->m_axi_iic2_AWADDR(grp_readData_fu_256_m_axi_iic2_AWADDR);
    grp_readData_fu_256->m_axi_iic2_AWID(grp_readData_fu_256_m_axi_iic2_AWID);
    grp_readData_fu_256->m_axi_iic2_AWLEN(grp_readData_fu_256_m_axi_iic2_AWLEN);
    grp_readData_fu_256->m_axi_iic2_AWSIZE(grp_readData_fu_256_m_axi_iic2_AWSIZE);
    grp_readData_fu_256->m_axi_iic2_AWBURST(grp_readData_fu_256_m_axi_iic2_AWBURST);
    grp_readData_fu_256->m_axi_iic2_AWLOCK(grp_readData_fu_256_m_axi_iic2_AWLOCK);
    grp_readData_fu_256->m_axi_iic2_AWCACHE(grp_readData_fu_256_m_axi_iic2_AWCACHE);
    grp_readData_fu_256->m_axi_iic2_AWPROT(grp_readData_fu_256_m_axi_iic2_AWPROT);
    grp_readData_fu_256->m_axi_iic2_AWQOS(grp_readData_fu_256_m_axi_iic2_AWQOS);
    grp_readData_fu_256->m_axi_iic2_AWREGION(grp_readData_fu_256_m_axi_iic2_AWREGION);
    grp_readData_fu_256->m_axi_iic2_AWUSER(grp_readData_fu_256_m_axi_iic2_AWUSER);
    grp_readData_fu_256->m_axi_iic2_WVALID(grp_readData_fu_256_m_axi_iic2_WVALID);
    grp_readData_fu_256->m_axi_iic2_WREADY(iic_WREADY);
    grp_readData_fu_256->m_axi_iic2_WDATA(grp_readData_fu_256_m_axi_iic2_WDATA);
    grp_readData_fu_256->m_axi_iic2_WSTRB(grp_readData_fu_256_m_axi_iic2_WSTRB);
    grp_readData_fu_256->m_axi_iic2_WLAST(grp_readData_fu_256_m_axi_iic2_WLAST);
    grp_readData_fu_256->m_axi_iic2_WID(grp_readData_fu_256_m_axi_iic2_WID);
    grp_readData_fu_256->m_axi_iic2_WUSER(grp_readData_fu_256_m_axi_iic2_WUSER);
    grp_readData_fu_256->m_axi_iic2_ARVALID(grp_readData_fu_256_m_axi_iic2_ARVALID);
    grp_readData_fu_256->m_axi_iic2_ARREADY(iic_ARREADY);
    grp_readData_fu_256->m_axi_iic2_ARADDR(grp_readData_fu_256_m_axi_iic2_ARADDR);
    grp_readData_fu_256->m_axi_iic2_ARID(grp_readData_fu_256_m_axi_iic2_ARID);
    grp_readData_fu_256->m_axi_iic2_ARLEN(grp_readData_fu_256_m_axi_iic2_ARLEN);
    grp_readData_fu_256->m_axi_iic2_ARSIZE(grp_readData_fu_256_m_axi_iic2_ARSIZE);
    grp_readData_fu_256->m_axi_iic2_ARBURST(grp_readData_fu_256_m_axi_iic2_ARBURST);
    grp_readData_fu_256->m_axi_iic2_ARLOCK(grp_readData_fu_256_m_axi_iic2_ARLOCK);
    grp_readData_fu_256->m_axi_iic2_ARCACHE(grp_readData_fu_256_m_axi_iic2_ARCACHE);
    grp_readData_fu_256->m_axi_iic2_ARPROT(grp_readData_fu_256_m_axi_iic2_ARPROT);
    grp_readData_fu_256->m_axi_iic2_ARQOS(grp_readData_fu_256_m_axi_iic2_ARQOS);
    grp_readData_fu_256->m_axi_iic2_ARREGION(grp_readData_fu_256_m_axi_iic2_ARREGION);
    grp_readData_fu_256->m_axi_iic2_ARUSER(grp_readData_fu_256_m_axi_iic2_ARUSER);
    grp_readData_fu_256->m_axi_iic2_RVALID(iic_RVALID);
    grp_readData_fu_256->m_axi_iic2_RREADY(grp_readData_fu_256_m_axi_iic2_RREADY);
    grp_readData_fu_256->m_axi_iic2_RDATA(iic_RDATA);
    grp_readData_fu_256->m_axi_iic2_RLAST(iic_RLAST);
    grp_readData_fu_256->m_axi_iic2_RID(iic_RID);
    grp_readData_fu_256->m_axi_iic2_RUSER(iic_RUSER);
    grp_readData_fu_256->m_axi_iic2_RRESP(iic_RRESP);
    grp_readData_fu_256->m_axi_iic2_BVALID(iic_BVALID);
    grp_readData_fu_256->m_axi_iic2_BREADY(grp_readData_fu_256_m_axi_iic2_BREADY);
    grp_readData_fu_256->m_axi_iic2_BRESP(iic_BRESP);
    grp_readData_fu_256->m_axi_iic2_BID(iic_BID);
    grp_readData_fu_256->m_axi_iic2_BUSER(iic_BUSER);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state32_io);
    sensitive << ( tmp_5_fu_339_p2 );
    sensitive << ( ap_sig_ioackin_iic_ARREADY );

    SC_METHOD(thread_ap_block_state9_io);
    sensitive << ( ap_sig_ioackin_iic_WREADY );
    sensitive << ( ap_sig_ioackin_iic_AWREADY );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_iic_ARREADY);
    sensitive << ( iic_ARREADY );
    sensitive << ( ap_reg_ioackin_iic_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_iic_AWREADY);
    sensitive << ( iic_AWREADY );
    sensitive << ( ap_reg_ioackin_iic_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_iic_WREADY);
    sensitive << ( iic_WREADY );
    sensitive << ( ap_reg_ioackin_iic_WREADY );

    SC_METHOD(thread_ctr_V_1_fu_345_p2);
    sensitive << ( p_014_0_i_reg_245 );

    SC_METHOD(thread_ctr_V_fu_325_p2);
    sensitive << ( p_014_0_i4_reg_234 );

    SC_METHOD(thread_ctrl_reg_outValue_ap_vld);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_reg_ioackin_ctrl_reg_outValue_dummy_ack );

    SC_METHOD(thread_empty_pirq_outValue_ap_vld);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_reg_ioackin_empty_pirq_outValue_dummy_ack );

    SC_METHOD(thread_full_pirq_outValue_ap_vld);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_reg_ioackin_full_pirq_outValue_dummy_ack );

    SC_METHOD(thread_grp_readData_fu_256_ap_start);
    sensitive << ( ap_reg_grp_readData_fu_256_ap_start );

    SC_METHOD(thread_iic_ARADDR);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( tmp_5_fu_339_p2 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_ARADDR );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_reg_ioackin_iic_ARREADY );

    SC_METHOD(thread_iic_ARBURST);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_ARBURST );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_ARCACHE);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_ARCACHE );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_ARID);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_ARID );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_ARLEN);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( tmp_5_fu_339_p2 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_ARLEN );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_reg_ioackin_iic_ARREADY );

    SC_METHOD(thread_iic_ARLOCK);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_ARLOCK );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_ARPROT);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_ARPROT );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_ARQOS);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_ARQOS );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_ARREGION);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_ARREGION );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_ARSIZE);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_ARSIZE );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_ARUSER);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_ARUSER );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_ARVALID);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( tmp_5_fu_339_p2 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_ARVALID );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_reg_ioackin_iic_ARREADY );

    SC_METHOD(thread_iic_AWADDR);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( iic_RVALID );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_AWADDR );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_reg_ioackin_iic_AWREADY );

    SC_METHOD(thread_iic_AWBURST);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_AWBURST );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_AWCACHE);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_AWCACHE );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_AWID);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_AWID );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_AWLEN);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( iic_RVALID );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_AWLEN );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_reg_ioackin_iic_AWREADY );

    SC_METHOD(thread_iic_AWLOCK);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_AWLOCK );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_AWPROT);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_AWPROT );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_AWQOS);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_AWQOS );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_AWREGION);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_AWREGION );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_AWSIZE);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_AWSIZE );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_AWUSER);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_AWUSER );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_AWVALID);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( iic_RVALID );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_AWVALID );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_reg_ioackin_iic_AWREADY );

    SC_METHOD(thread_iic_BREADY);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( iic_BVALID );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_BREADY );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_RREADY);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( iic_RVALID );
    sensitive << ( ap_sig_ioackin_iic_AWREADY );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_RREADY );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_WDATA);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_WDATA );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_reg_ioackin_iic_WREADY );

    SC_METHOD(thread_iic_WID);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_WID );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_WLAST);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_WLAST );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_WSTRB);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_WSTRB );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_reg_ioackin_iic_WREADY );

    SC_METHOD(thread_iic_WUSER);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_WUSER );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_WVALID);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( grp_readData_fu_256_m_axi_iic2_WVALID );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_reg_ioackin_iic_WREADY );

    SC_METHOD(thread_iic_blk_n_AR);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_iic_ARREADY );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( tmp_5_fu_339_p2 );

    SC_METHOD(thread_iic_blk_n_AW);
    sensitive << ( m_axi_iic_AWREADY );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_iic_blk_n_B);
    sensitive << ( m_axi_iic_BVALID );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_iic_blk_n_R);
    sensitive << ( m_axi_iic_RVALID );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_iic_blk_n_W);
    sensitive << ( m_axi_iic_WREADY );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_rx_fifo_outValue_ap_vld);
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_stat_reg_outValue1_ap_vld);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_reg_ioackin_stat_reg_outValue1_dummy_ack );

    SC_METHOD(thread_tmp_5_fu_339_p2);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_state32_io );
    sensitive << ( p_014_0_i_reg_245 );

    SC_METHOD(thread_tmp_fu_319_p2);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( p_014_0_i4_reg_234 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( tmp_5_fu_339_p2 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( iic_RVALID );
    sensitive << ( iic_BVALID );
    sensitive << ( ap_sig_ioackin_iic_ARREADY );
    sensitive << ( ap_sig_ioackin_iic_WREADY );
    sensitive << ( ap_sig_ioackin_iic_AWREADY );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_block_state32_io );
    sensitive << ( grp_readData_fu_256_ap_done );
    sensitive << ( tmp_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_block_state9_io );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "0000000000000000000000000000000000000001";
    ap_reg_grp_readData_fu_256_ap_start = SC_LOGIC_0;
    ap_reg_ioackin_iic_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_iic_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_iic_WREADY = SC_LOGIC_0;
    ap_reg_ioackin_empty_pirq_outValue_dummy_ack = SC_LOGIC_0;
    ap_reg_ioackin_full_pirq_outValue_dummy_ack = SC_LOGIC_0;
    ap_reg_ioackin_ctrl_reg_outValue_dummy_ack = SC_LOGIC_0;
    ap_reg_ioackin_stat_reg_outValue1_dummy_ack = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "iiccommmod_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_iic_AWVALID, "(port)m_axi_iic_AWVALID");
    sc_trace(mVcdFile, m_axi_iic_AWREADY, "(port)m_axi_iic_AWREADY");
    sc_trace(mVcdFile, m_axi_iic_AWADDR, "(port)m_axi_iic_AWADDR");
    sc_trace(mVcdFile, m_axi_iic_AWID, "(port)m_axi_iic_AWID");
    sc_trace(mVcdFile, m_axi_iic_AWLEN, "(port)m_axi_iic_AWLEN");
    sc_trace(mVcdFile, m_axi_iic_AWSIZE, "(port)m_axi_iic_AWSIZE");
    sc_trace(mVcdFile, m_axi_iic_AWBURST, "(port)m_axi_iic_AWBURST");
    sc_trace(mVcdFile, m_axi_iic_AWLOCK, "(port)m_axi_iic_AWLOCK");
    sc_trace(mVcdFile, m_axi_iic_AWCACHE, "(port)m_axi_iic_AWCACHE");
    sc_trace(mVcdFile, m_axi_iic_AWPROT, "(port)m_axi_iic_AWPROT");
    sc_trace(mVcdFile, m_axi_iic_AWQOS, "(port)m_axi_iic_AWQOS");
    sc_trace(mVcdFile, m_axi_iic_AWREGION, "(port)m_axi_iic_AWREGION");
    sc_trace(mVcdFile, m_axi_iic_AWUSER, "(port)m_axi_iic_AWUSER");
    sc_trace(mVcdFile, m_axi_iic_WVALID, "(port)m_axi_iic_WVALID");
    sc_trace(mVcdFile, m_axi_iic_WREADY, "(port)m_axi_iic_WREADY");
    sc_trace(mVcdFile, m_axi_iic_WDATA, "(port)m_axi_iic_WDATA");
    sc_trace(mVcdFile, m_axi_iic_WSTRB, "(port)m_axi_iic_WSTRB");
    sc_trace(mVcdFile, m_axi_iic_WLAST, "(port)m_axi_iic_WLAST");
    sc_trace(mVcdFile, m_axi_iic_WID, "(port)m_axi_iic_WID");
    sc_trace(mVcdFile, m_axi_iic_WUSER, "(port)m_axi_iic_WUSER");
    sc_trace(mVcdFile, m_axi_iic_ARVALID, "(port)m_axi_iic_ARVALID");
    sc_trace(mVcdFile, m_axi_iic_ARREADY, "(port)m_axi_iic_ARREADY");
    sc_trace(mVcdFile, m_axi_iic_ARADDR, "(port)m_axi_iic_ARADDR");
    sc_trace(mVcdFile, m_axi_iic_ARID, "(port)m_axi_iic_ARID");
    sc_trace(mVcdFile, m_axi_iic_ARLEN, "(port)m_axi_iic_ARLEN");
    sc_trace(mVcdFile, m_axi_iic_ARSIZE, "(port)m_axi_iic_ARSIZE");
    sc_trace(mVcdFile, m_axi_iic_ARBURST, "(port)m_axi_iic_ARBURST");
    sc_trace(mVcdFile, m_axi_iic_ARLOCK, "(port)m_axi_iic_ARLOCK");
    sc_trace(mVcdFile, m_axi_iic_ARCACHE, "(port)m_axi_iic_ARCACHE");
    sc_trace(mVcdFile, m_axi_iic_ARPROT, "(port)m_axi_iic_ARPROT");
    sc_trace(mVcdFile, m_axi_iic_ARQOS, "(port)m_axi_iic_ARQOS");
    sc_trace(mVcdFile, m_axi_iic_ARREGION, "(port)m_axi_iic_ARREGION");
    sc_trace(mVcdFile, m_axi_iic_ARUSER, "(port)m_axi_iic_ARUSER");
    sc_trace(mVcdFile, m_axi_iic_RVALID, "(port)m_axi_iic_RVALID");
    sc_trace(mVcdFile, m_axi_iic_RREADY, "(port)m_axi_iic_RREADY");
    sc_trace(mVcdFile, m_axi_iic_RDATA, "(port)m_axi_iic_RDATA");
    sc_trace(mVcdFile, m_axi_iic_RLAST, "(port)m_axi_iic_RLAST");
    sc_trace(mVcdFile, m_axi_iic_RID, "(port)m_axi_iic_RID");
    sc_trace(mVcdFile, m_axi_iic_RUSER, "(port)m_axi_iic_RUSER");
    sc_trace(mVcdFile, m_axi_iic_RRESP, "(port)m_axi_iic_RRESP");
    sc_trace(mVcdFile, m_axi_iic_BVALID, "(port)m_axi_iic_BVALID");
    sc_trace(mVcdFile, m_axi_iic_BREADY, "(port)m_axi_iic_BREADY");
    sc_trace(mVcdFile, m_axi_iic_BRESP, "(port)m_axi_iic_BRESP");
    sc_trace(mVcdFile, m_axi_iic_BID, "(port)m_axi_iic_BID");
    sc_trace(mVcdFile, m_axi_iic_BUSER, "(port)m_axi_iic_BUSER");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, stat_reg_outValue1_ap_vld, "stat_reg_outValue1_ap_vld");
    sc_trace(mVcdFile, empty_pirq_outValue_ap_vld, "empty_pirq_outValue_ap_vld");
    sc_trace(mVcdFile, full_pirq_outValue_ap_vld, "full_pirq_outValue_ap_vld");
    sc_trace(mVcdFile, stat_reg_outValue2, "stat_reg_outValue2");
    sc_trace(mVcdFile, stat_reg_outValue3, "stat_reg_outValue3");
    sc_trace(mVcdFile, stat_reg_outValue4, "stat_reg_outValue4");
    sc_trace(mVcdFile, tx_fifo_outValue, "tx_fifo_outValue");
    sc_trace(mVcdFile, rx_fifo_outValue_ap_vld, "rx_fifo_outValue_ap_vld");
    sc_trace(mVcdFile, ctrl_reg_outValue_ap_vld, "ctrl_reg_outValue_ap_vld");
    sc_trace(mVcdFile, iic_blk_n_AR, "iic_blk_n_AR");
    sc_trace(mVcdFile, iic_blk_n_R, "iic_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, iic_blk_n_AW, "iic_blk_n_AW");
    sc_trace(mVcdFile, iic_blk_n_W, "iic_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, iic_blk_n_B, "iic_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, tmp_5_fu_339_p2, "tmp_5_fu_339_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, iic_AWVALID, "iic_AWVALID");
    sc_trace(mVcdFile, iic_AWREADY, "iic_AWREADY");
    sc_trace(mVcdFile, iic_AWADDR, "iic_AWADDR");
    sc_trace(mVcdFile, iic_AWID, "iic_AWID");
    sc_trace(mVcdFile, iic_AWLEN, "iic_AWLEN");
    sc_trace(mVcdFile, iic_AWSIZE, "iic_AWSIZE");
    sc_trace(mVcdFile, iic_AWBURST, "iic_AWBURST");
    sc_trace(mVcdFile, iic_AWLOCK, "iic_AWLOCK");
    sc_trace(mVcdFile, iic_AWCACHE, "iic_AWCACHE");
    sc_trace(mVcdFile, iic_AWPROT, "iic_AWPROT");
    sc_trace(mVcdFile, iic_AWQOS, "iic_AWQOS");
    sc_trace(mVcdFile, iic_AWREGION, "iic_AWREGION");
    sc_trace(mVcdFile, iic_AWUSER, "iic_AWUSER");
    sc_trace(mVcdFile, iic_WVALID, "iic_WVALID");
    sc_trace(mVcdFile, iic_WREADY, "iic_WREADY");
    sc_trace(mVcdFile, iic_WDATA, "iic_WDATA");
    sc_trace(mVcdFile, iic_WSTRB, "iic_WSTRB");
    sc_trace(mVcdFile, iic_WLAST, "iic_WLAST");
    sc_trace(mVcdFile, iic_WID, "iic_WID");
    sc_trace(mVcdFile, iic_WUSER, "iic_WUSER");
    sc_trace(mVcdFile, iic_ARVALID, "iic_ARVALID");
    sc_trace(mVcdFile, iic_ARREADY, "iic_ARREADY");
    sc_trace(mVcdFile, iic_ARADDR, "iic_ARADDR");
    sc_trace(mVcdFile, iic_ARID, "iic_ARID");
    sc_trace(mVcdFile, iic_ARLEN, "iic_ARLEN");
    sc_trace(mVcdFile, iic_ARSIZE, "iic_ARSIZE");
    sc_trace(mVcdFile, iic_ARBURST, "iic_ARBURST");
    sc_trace(mVcdFile, iic_ARLOCK, "iic_ARLOCK");
    sc_trace(mVcdFile, iic_ARCACHE, "iic_ARCACHE");
    sc_trace(mVcdFile, iic_ARPROT, "iic_ARPROT");
    sc_trace(mVcdFile, iic_ARQOS, "iic_ARQOS");
    sc_trace(mVcdFile, iic_ARREGION, "iic_ARREGION");
    sc_trace(mVcdFile, iic_ARUSER, "iic_ARUSER");
    sc_trace(mVcdFile, iic_RVALID, "iic_RVALID");
    sc_trace(mVcdFile, iic_RREADY, "iic_RREADY");
    sc_trace(mVcdFile, iic_RDATA, "iic_RDATA");
    sc_trace(mVcdFile, iic_RLAST, "iic_RLAST");
    sc_trace(mVcdFile, iic_RID, "iic_RID");
    sc_trace(mVcdFile, iic_RUSER, "iic_RUSER");
    sc_trace(mVcdFile, iic_RRESP, "iic_RRESP");
    sc_trace(mVcdFile, iic_BVALID, "iic_BVALID");
    sc_trace(mVcdFile, iic_BREADY, "iic_BREADY");
    sc_trace(mVcdFile, iic_BRESP, "iic_BRESP");
    sc_trace(mVcdFile, iic_BID, "iic_BID");
    sc_trace(mVcdFile, iic_BUSER, "iic_BUSER");
    sc_trace(mVcdFile, ap_sig_ioackin_iic_ARREADY, "ap_sig_ioackin_iic_ARREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_iic_WREADY, "ap_sig_ioackin_iic_WREADY");
    sc_trace(mVcdFile, iic_addr_1_read_reg_371, "iic_addr_1_read_reg_371");
    sc_trace(mVcdFile, ap_sig_ioackin_iic_AWREADY, "ap_sig_ioackin_iic_AWREADY");
    sc_trace(mVcdFile, iic_addr_9_read_reg_386, "iic_addr_9_read_reg_386");
    sc_trace(mVcdFile, ctr_V_fu_325_p2, "ctr_V_fu_325_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ctr_V_1_fu_345_p2, "ctr_V_1_fu_345_p2");
    sc_trace(mVcdFile, ap_block_state32_io, "ap_block_state32_io");
    sc_trace(mVcdFile, iic_addr_14_read_reg_417, "iic_addr_14_read_reg_417");
    sc_trace(mVcdFile, grp_readData_fu_256_ap_start, "grp_readData_fu_256_ap_start");
    sc_trace(mVcdFile, grp_readData_fu_256_ap_done, "grp_readData_fu_256_ap_done");
    sc_trace(mVcdFile, grp_readData_fu_256_ap_idle, "grp_readData_fu_256_ap_idle");
    sc_trace(mVcdFile, grp_readData_fu_256_ap_ready, "grp_readData_fu_256_ap_ready");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_AWVALID, "grp_readData_fu_256_m_axi_iic2_AWVALID");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_AWADDR, "grp_readData_fu_256_m_axi_iic2_AWADDR");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_AWID, "grp_readData_fu_256_m_axi_iic2_AWID");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_AWLEN, "grp_readData_fu_256_m_axi_iic2_AWLEN");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_AWSIZE, "grp_readData_fu_256_m_axi_iic2_AWSIZE");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_AWBURST, "grp_readData_fu_256_m_axi_iic2_AWBURST");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_AWLOCK, "grp_readData_fu_256_m_axi_iic2_AWLOCK");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_AWCACHE, "grp_readData_fu_256_m_axi_iic2_AWCACHE");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_AWPROT, "grp_readData_fu_256_m_axi_iic2_AWPROT");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_AWQOS, "grp_readData_fu_256_m_axi_iic2_AWQOS");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_AWREGION, "grp_readData_fu_256_m_axi_iic2_AWREGION");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_AWUSER, "grp_readData_fu_256_m_axi_iic2_AWUSER");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_WVALID, "grp_readData_fu_256_m_axi_iic2_WVALID");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_WDATA, "grp_readData_fu_256_m_axi_iic2_WDATA");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_WSTRB, "grp_readData_fu_256_m_axi_iic2_WSTRB");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_WLAST, "grp_readData_fu_256_m_axi_iic2_WLAST");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_WID, "grp_readData_fu_256_m_axi_iic2_WID");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_WUSER, "grp_readData_fu_256_m_axi_iic2_WUSER");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_ARVALID, "grp_readData_fu_256_m_axi_iic2_ARVALID");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_ARADDR, "grp_readData_fu_256_m_axi_iic2_ARADDR");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_ARID, "grp_readData_fu_256_m_axi_iic2_ARID");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_ARLEN, "grp_readData_fu_256_m_axi_iic2_ARLEN");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_ARSIZE, "grp_readData_fu_256_m_axi_iic2_ARSIZE");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_ARBURST, "grp_readData_fu_256_m_axi_iic2_ARBURST");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_ARLOCK, "grp_readData_fu_256_m_axi_iic2_ARLOCK");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_ARCACHE, "grp_readData_fu_256_m_axi_iic2_ARCACHE");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_ARPROT, "grp_readData_fu_256_m_axi_iic2_ARPROT");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_ARQOS, "grp_readData_fu_256_m_axi_iic2_ARQOS");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_ARREGION, "grp_readData_fu_256_m_axi_iic2_ARREGION");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_ARUSER, "grp_readData_fu_256_m_axi_iic2_ARUSER");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_RREADY, "grp_readData_fu_256_m_axi_iic2_RREADY");
    sc_trace(mVcdFile, grp_readData_fu_256_m_axi_iic2_BREADY, "grp_readData_fu_256_m_axi_iic2_BREADY");
    sc_trace(mVcdFile, p_014_0_i4_reg_234, "p_014_0_i4_reg_234");
    sc_trace(mVcdFile, tmp_fu_319_p2, "tmp_fu_319_p2");
    sc_trace(mVcdFile, p_014_0_i_reg_245, "p_014_0_i_reg_245");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_reg_grp_readData_fu_256_ap_start, "ap_reg_grp_readData_fu_256_ap_start");
    sc_trace(mVcdFile, ap_reg_ioackin_iic_ARREADY, "ap_reg_ioackin_iic_ARREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_iic_AWREADY, "ap_reg_ioackin_iic_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_iic_WREADY, "ap_reg_ioackin_iic_WREADY");
    sc_trace(mVcdFile, ap_block_state9_io, "ap_block_state9_io");
    sc_trace(mVcdFile, ap_reg_ioackin_empty_pirq_outValue_dummy_ack, "ap_reg_ioackin_empty_pirq_outValue_dummy_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_full_pirq_outValue_dummy_ack, "ap_reg_ioackin_full_pirq_outValue_dummy_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_ctrl_reg_outValue_dummy_ack, "ap_reg_ioackin_ctrl_reg_outValue_dummy_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_stat_reg_outValue1_dummy_ack, "ap_reg_ioackin_stat_reg_outValue1_dummy_ack");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("iiccommmod.hdltvin.dat");
    mHdltvoutHandle.open("iiccommmod.hdltvout.dat");
}

iiccommmod::~iiccommmod() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete iiccommmod_AXILiteS_s_axi_U;
    delete iiccommmod_iic_m_axi_U;
    delete grp_readData_fu_256;
}

void iiccommmod::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void iiccommmod::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_F;
}

void iiccommmod::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_1;
}

void iiccommmod::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_readData_fu_256_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read()))) {
            ap_reg_grp_readData_fu_256_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_readData_fu_256_ap_ready.read())) {
            ap_reg_grp_readData_fu_256_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_ctrl_reg_outValue_dummy_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            if (esl_seteq<1,1,1>(ap_block_state9_io.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_ctrl_reg_outValue_dummy_ack = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) {
                ap_reg_ioackin_ctrl_reg_outValue_dummy_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_empty_pirq_outValue_dummy_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            if (esl_seteq<1,1,1>(ap_block_state9_io.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_empty_pirq_outValue_dummy_ack = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) {
                ap_reg_ioackin_empty_pirq_outValue_dummy_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_full_pirq_outValue_dummy_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            if (esl_seteq<1,1,1>(ap_block_state9_io.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_full_pirq_outValue_dummy_ack = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) {
                ap_reg_ioackin_full_pirq_outValue_dummy_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_iic_ARREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
              !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_ARREADY.read()))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_iic_ARREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
              esl_seteq<1,1,1>(tmp_5_fu_339_p2.read(), ap_const_lv1_1) && 
              esl_seteq<1,1,1>(ap_block_state32_io.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_iic_ARREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                     esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
                     esl_seteq<1,1,1>(tmp_5_fu_339_p2.read(), ap_const_lv1_1) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_ARREADY.read())))) {
            ap_reg_ioackin_iic_ARREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_iic_AWREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
              !(esl_seteq<1,1,1>(ap_const_logic_0, iic_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_AWREADY.read()))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
              !(esl_seteq<1,1,1>(ap_const_logic_0, iic_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_AWREADY.read()))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
              esl_seteq<1,1,1>(ap_block_state9_io.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_iic_AWREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                     esl_seteq<1,1,1>(iic_RVALID.read(), ap_const_logic_1) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_AWREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_AWREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
                     esl_seteq<1,1,1>(iic_RVALID.read(), ap_const_logic_1) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_AWREADY.read())))) {
            ap_reg_ioackin_iic_AWREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_iic_WREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_iic_WREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
              esl_seteq<1,1,1>(ap_block_state9_io.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_iic_WREADY.read(), ap_const_logic_1)))) {
            ap_reg_ioackin_iic_WREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_WREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_WREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_WREADY.read())))) {
            ap_reg_ioackin_iic_WREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_stat_reg_outValue1_dummy_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_iic_WREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_stat_reg_outValue1_dummy_ack = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) {
                ap_reg_ioackin_stat_reg_outValue1_dummy_ack = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
         esl_seteq<1,1,1>(tmp_fu_319_p2.read(), ap_const_lv1_0))) {
        p_014_0_i4_reg_234 = ctr_V_fu_325_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
                esl_seteq<1,1,1>(iic_BVALID.read(), ap_const_logic_1))) {
        p_014_0_i4_reg_234 = ap_const_lv29_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
         esl_seteq<1,1,1>(ap_block_state32_io.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_5_fu_339_p2.read(), ap_const_lv1_0))) {
        p_014_0_i_reg_245 = ctr_V_1_fu_345_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
                esl_seteq<1,1,1>(grp_readData_fu_256_ap_done.read(), ap_const_logic_1))) {
        p_014_0_i_reg_245 = ap_const_lv29_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && esl_seteq<1,1,1>(iic_RVALID.read(), ap_const_logic_1))) {
        iic_addr_14_read_reg_417 = iic_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, iic_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_AWREADY.read())))) {
        iic_addr_1_read_reg_371 = iic_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, iic_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_AWREADY.read())))) {
        iic_addr_9_read_reg_386 = iic_RDATA.read();
    }
}

void iiccommmod::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void iiccommmod::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void iiccommmod::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void iiccommmod::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void iiccommmod::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void iiccommmod::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void iiccommmod::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void iiccommmod::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void iiccommmod::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void iiccommmod::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void iiccommmod::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void iiccommmod::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void iiccommmod::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void iiccommmod::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void iiccommmod::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void iiccommmod::thread_ap_block_state32_io() {
    ap_block_state32_io = (esl_seteq<1,1,1>(tmp_5_fu_339_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_ARREADY.read()));
}

void iiccommmod::thread_ap_block_state9_io() {
    ap_block_state9_io = (esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_WREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_AWREADY.read()));
}

void iiccommmod::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void iiccommmod::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void iiccommmod::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void iiccommmod::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void iiccommmod::thread_ap_sig_ioackin_iic_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_ARREADY.read())) {
        ap_sig_ioackin_iic_ARREADY = iic_ARREADY.read();
    } else {
        ap_sig_ioackin_iic_ARREADY = ap_const_logic_1;
    }
}

void iiccommmod::thread_ap_sig_ioackin_iic_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_AWREADY.read())) {
        ap_sig_ioackin_iic_AWREADY = iic_AWREADY.read();
    } else {
        ap_sig_ioackin_iic_AWREADY = ap_const_logic_1;
    }
}

void iiccommmod::thread_ap_sig_ioackin_iic_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_WREADY.read())) {
        ap_sig_ioackin_iic_WREADY = iic_WREADY.read();
    } else {
        ap_sig_ioackin_iic_WREADY = ap_const_logic_1;
    }
}

void iiccommmod::thread_ctr_V_1_fu_345_p2() {
    ctr_V_1_fu_345_p2 = (!p_014_0_i_reg_245.read().is_01() || !ap_const_lv29_1.is_01())? sc_lv<29>(): (sc_biguint<29>(p_014_0_i_reg_245.read()) + sc_biguint<29>(ap_const_lv29_1));
}

void iiccommmod::thread_ctr_V_fu_325_p2() {
    ctr_V_fu_325_p2 = (!p_014_0_i4_reg_234.read().is_01() || !ap_const_lv29_1.is_01())? sc_lv<29>(): (sc_biguint<29>(p_014_0_i4_reg_234.read()) + sc_biguint<29>(ap_const_lv29_1));
}

void iiccommmod::thread_ctrl_reg_outValue_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_ctrl_reg_outValue_dummy_ack.read()))) {
        ctrl_reg_outValue_ap_vld = ap_const_logic_1;
    } else {
        ctrl_reg_outValue_ap_vld = ap_const_logic_0;
    }
}

void iiccommmod::thread_empty_pirq_outValue_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_empty_pirq_outValue_dummy_ack.read()))) {
        empty_pirq_outValue_ap_vld = ap_const_logic_1;
    } else {
        empty_pirq_outValue_ap_vld = ap_const_logic_0;
    }
}

void iiccommmod::thread_full_pirq_outValue_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_full_pirq_outValue_dummy_ack.read()))) {
        full_pirq_outValue_ap_vld = ap_const_logic_1;
    } else {
        full_pirq_outValue_ap_vld = ap_const_logic_0;
    }
}

void iiccommmod::thread_grp_readData_fu_256_ap_start() {
    grp_readData_fu_256_ap_start = ap_reg_grp_readData_fu_256_ap_start.read();
}

void iiccommmod::thread_iic_ARADDR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
         esl_seteq<1,1,1>(tmp_5_fu_339_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_ARREADY.read()))) {
        iic_ARADDR =  (sc_lv<32>) (ap_const_lv64_10000443);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_ARREADY.read()))) {
        iic_ARADDR =  (sc_lv<32>) (ap_const_lv64_10000441);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_ARREADY.read()))) {
        iic_ARADDR =  (sc_lv<32>) (ap_const_lv64_10000448);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_ARADDR = grp_readData_fu_256_m_axi_iic2_ARADDR.read();
    } else {
        iic_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void iiccommmod::thread_iic_ARBURST() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_ARBURST = grp_readData_fu_256_m_axi_iic2_ARBURST.read();
    } else {
        iic_ARBURST = ap_const_lv2_0;
    }
}

void iiccommmod::thread_iic_ARCACHE() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_ARCACHE = grp_readData_fu_256_m_axi_iic2_ARCACHE.read();
    } else {
        iic_ARCACHE = ap_const_lv4_0;
    }
}

void iiccommmod::thread_iic_ARID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_ARID = grp_readData_fu_256_m_axi_iic2_ARID.read();
    } else {
        iic_ARID = ap_const_lv1_0;
    }
}

void iiccommmod::thread_iic_ARLEN() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          esl_seteq<1,1,1>(tmp_5_fu_339_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_ARREADY.read())))) {
        iic_ARLEN = ap_const_lv32_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_ARLEN = grp_readData_fu_256_m_axi_iic2_ARLEN.read();
    } else {
        iic_ARLEN = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void iiccommmod::thread_iic_ARLOCK() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_ARLOCK = grp_readData_fu_256_m_axi_iic2_ARLOCK.read();
    } else {
        iic_ARLOCK = ap_const_lv2_0;
    }
}

void iiccommmod::thread_iic_ARPROT() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_ARPROT = grp_readData_fu_256_m_axi_iic2_ARPROT.read();
    } else {
        iic_ARPROT = ap_const_lv3_0;
    }
}

void iiccommmod::thread_iic_ARQOS() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_ARQOS = grp_readData_fu_256_m_axi_iic2_ARQOS.read();
    } else {
        iic_ARQOS = ap_const_lv4_0;
    }
}

void iiccommmod::thread_iic_ARREGION() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_ARREGION = grp_readData_fu_256_m_axi_iic2_ARREGION.read();
    } else {
        iic_ARREGION = ap_const_lv4_0;
    }
}

void iiccommmod::thread_iic_ARSIZE() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_ARSIZE = grp_readData_fu_256_m_axi_iic2_ARSIZE.read();
    } else {
        iic_ARSIZE = ap_const_lv3_0;
    }
}

void iiccommmod::thread_iic_ARUSER() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_ARUSER = grp_readData_fu_256_m_axi_iic2_ARUSER.read();
    } else {
        iic_ARUSER = ap_const_lv1_0;
    }
}

void iiccommmod::thread_iic_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          esl_seteq<1,1,1>(tmp_5_fu_339_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_ARREADY.read())))) {
        iic_ARVALID = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_ARVALID = grp_readData_fu_256_m_axi_iic2_ARVALID.read();
    } else {
        iic_ARVALID = ap_const_logic_0;
    }
}

void iiccommmod::thread_iic_AWADDR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,1,1>(iic_RVALID.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_AWREADY.read()))) {
        iic_AWADDR =  (sc_lv<32>) (ap_const_lv64_10000442);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_AWREADY.read()))) {
        iic_AWADDR =  (sc_lv<32>) (ap_const_lv64_10000440);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(iic_RVALID.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_AWREADY.read()))) {
        iic_AWADDR =  (sc_lv<32>) (ap_const_lv64_10000448);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_AWADDR = grp_readData_fu_256_m_axi_iic2_AWADDR.read();
    } else {
        iic_AWADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void iiccommmod::thread_iic_AWBURST() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_AWBURST = grp_readData_fu_256_m_axi_iic2_AWBURST.read();
    } else {
        iic_AWBURST = ap_const_lv2_0;
    }
}

void iiccommmod::thread_iic_AWCACHE() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_AWCACHE = grp_readData_fu_256_m_axi_iic2_AWCACHE.read();
    } else {
        iic_AWCACHE = ap_const_lv4_0;
    }
}

void iiccommmod::thread_iic_AWID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_AWID = grp_readData_fu_256_m_axi_iic2_AWID.read();
    } else {
        iic_AWID = ap_const_lv1_0;
    }
}

void iiccommmod::thread_iic_AWLEN() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(iic_RVALID.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_AWREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_AWREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          esl_seteq<1,1,1>(iic_RVALID.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_AWREADY.read())))) {
        iic_AWLEN = ap_const_lv32_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_AWLEN = grp_readData_fu_256_m_axi_iic2_AWLEN.read();
    } else {
        iic_AWLEN = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void iiccommmod::thread_iic_AWLOCK() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_AWLOCK = grp_readData_fu_256_m_axi_iic2_AWLOCK.read();
    } else {
        iic_AWLOCK = ap_const_lv2_0;
    }
}

void iiccommmod::thread_iic_AWPROT() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_AWPROT = grp_readData_fu_256_m_axi_iic2_AWPROT.read();
    } else {
        iic_AWPROT = ap_const_lv3_0;
    }
}

void iiccommmod::thread_iic_AWQOS() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_AWQOS = grp_readData_fu_256_m_axi_iic2_AWQOS.read();
    } else {
        iic_AWQOS = ap_const_lv4_0;
    }
}

void iiccommmod::thread_iic_AWREGION() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_AWREGION = grp_readData_fu_256_m_axi_iic2_AWREGION.read();
    } else {
        iic_AWREGION = ap_const_lv4_0;
    }
}

void iiccommmod::thread_iic_AWSIZE() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_AWSIZE = grp_readData_fu_256_m_axi_iic2_AWSIZE.read();
    } else {
        iic_AWSIZE = ap_const_lv3_0;
    }
}

void iiccommmod::thread_iic_AWUSER() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_AWUSER = grp_readData_fu_256_m_axi_iic2_AWUSER.read();
    } else {
        iic_AWUSER = ap_const_lv1_0;
    }
}

void iiccommmod::thread_iic_AWVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(iic_RVALID.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_AWREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_AWREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          esl_seteq<1,1,1>(iic_RVALID.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_AWREADY.read())))) {
        iic_AWVALID = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_AWVALID = grp_readData_fu_256_m_axi_iic2_AWVALID.read();
    } else {
        iic_AWVALID = ap_const_logic_0;
    }
}

void iiccommmod::thread_iic_BREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
          esl_seteq<1,1,1>(iic_BVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(iic_BVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(iic_BVALID.read(), ap_const_logic_1)))) {
        iic_BREADY = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_BREADY = grp_readData_fu_256_m_axi_iic2_BREADY.read();
    } else {
        iic_BREADY = ap_const_logic_0;
    }
}

void iiccommmod::thread_iic_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, iic_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_AWREADY.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, iic_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_AWREADY.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
          esl_seteq<1,1,1>(iic_RVALID.read(), ap_const_logic_1)))) {
        iic_RREADY = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_RREADY = grp_readData_fu_256_m_axi_iic2_RREADY.read();
    } else {
        iic_RREADY = ap_const_logic_0;
    }
}

void iiccommmod::thread_iic_WDATA() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_WREADY.read()))) {
        iic_WDATA = ap_const_lv32_24;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_WREADY.read()))) {
        iic_WDATA = ap_const_lv32_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_WREADY.read()))) {
        iic_WDATA = ap_const_lv32_F;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_WDATA = grp_readData_fu_256_m_axi_iic2_WDATA.read();
    } else {
        iic_WDATA = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void iiccommmod::thread_iic_WID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_WID = grp_readData_fu_256_m_axi_iic2_WID.read();
    } else {
        iic_WID = ap_const_lv1_0;
    }
}

void iiccommmod::thread_iic_WLAST() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_WLAST = grp_readData_fu_256_m_axi_iic2_WLAST.read();
    } else {
        iic_WLAST = ap_const_logic_0;
    }
}

void iiccommmod::thread_iic_WSTRB() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_WREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_WREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_WREADY.read())))) {
        iic_WSTRB = ap_const_lv4_F;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_WSTRB = grp_readData_fu_256_m_axi_iic2_WSTRB.read();
    } else {
        iic_WSTRB =  (sc_lv<4>) ("XXXX");
    }
}

void iiccommmod::thread_iic_WUSER() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_WUSER = grp_readData_fu_256_m_axi_iic2_WUSER.read();
    } else {
        iic_WUSER = ap_const_lv1_0;
    }
}

void iiccommmod::thread_iic_WVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_WREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_WREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_WREADY.read())))) {
        iic_WVALID = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_319_p2.read())))) {
        iic_WVALID = grp_readData_fu_256_m_axi_iic2_WVALID.read();
    } else {
        iic_WVALID = ap_const_logic_0;
    }
}

void iiccommmod::thread_iic_blk_n_AR() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          esl_seteq<1,1,1>(tmp_5_fu_339_p2.read(), ap_const_lv1_1)))) {
        iic_blk_n_AR = m_axi_iic_ARREADY.read();
    } else {
        iic_blk_n_AR = ap_const_logic_1;
    }
}

void iiccommmod::thread_iic_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        iic_blk_n_AW = m_axi_iic_AWREADY.read();
    } else {
        iic_blk_n_AW = ap_const_logic_1;
    }
}

void iiccommmod::thread_iic_blk_n_B() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
        iic_blk_n_B = m_axi_iic_BVALID.read();
    } else {
        iic_blk_n_B = ap_const_logic_1;
    }
}

void iiccommmod::thread_iic_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
        iic_blk_n_R = m_axi_iic_RVALID.read();
    } else {
        iic_blk_n_R = ap_const_logic_1;
    }
}

void iiccommmod::thread_iic_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        iic_blk_n_W = m_axi_iic_WREADY.read();
    } else {
        iic_blk_n_W = ap_const_logic_1;
    }
}

void iiccommmod::thread_rx_fifo_outValue_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        rx_fifo_outValue_ap_vld = ap_const_logic_1;
    } else {
        rx_fifo_outValue_ap_vld = ap_const_logic_0;
    }
}

void iiccommmod::thread_stat_reg_outValue1_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_stat_reg_outValue1_dummy_ack.read()))) {
        stat_reg_outValue1_ap_vld = ap_const_logic_1;
    } else {
        stat_reg_outValue1_ap_vld = ap_const_logic_0;
    }
}

void iiccommmod::thread_tmp_5_fu_339_p2() {
    tmp_5_fu_339_p2 = (!p_014_0_i_reg_245.read().is_01() || !ap_const_lv29_1DCD6500.is_01())? sc_lv<1>(): sc_lv<1>(p_014_0_i_reg_245.read() == ap_const_lv29_1DCD6500);
}

void iiccommmod::thread_tmp_fu_319_p2() {
    tmp_fu_319_p2 = (!p_014_0_i4_reg_234.read().is_01() || !ap_const_lv29_1DCD6500.is_01())? sc_lv<1>(): sc_lv<1>(p_014_0_i4_reg_234.read() == ap_const_lv29_1DCD6500);
}

void iiccommmod::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_ARREADY.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, iic_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_AWREADY.read())))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_block_state9_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_iic_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(iic_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(iic_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_iic_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, iic_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_AWREADY.read())))) {
                ap_NS_fsm = ap_ST_fsm_state24;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_iic_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && esl_seteq<1,1,1>(iic_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_state29;
            }
            break;
        case 536870912 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && esl_seteq<1,1,1>(tmp_fu_319_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_state31;
            }
            break;
        case 1073741824 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(grp_readData_fu_256_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state32;
            } else {
                ap_NS_fsm = ap_ST_fsm_state31;
            }
            break;
        case 2147483648 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && esl_seteq<1,1,1>(ap_block_state32_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_5_fu_339_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state32;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && esl_seteq<1,1,1>(tmp_5_fu_339_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_state32_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && esl_seteq<1,1,1>(iic_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state40;
            } else {
                ap_NS_fsm = ap_ST_fsm_state39;
            }
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<40>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void iiccommmod::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_iic_AWVALID\" :  \"" << m_axi_iic_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_AWREADY\" :  \"" << m_axi_iic_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_AWADDR\" :  \"" << m_axi_iic_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_AWID\" :  \"" << m_axi_iic_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_AWLEN\" :  \"" << m_axi_iic_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_AWSIZE\" :  \"" << m_axi_iic_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_AWBURST\" :  \"" << m_axi_iic_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_AWLOCK\" :  \"" << m_axi_iic_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_AWCACHE\" :  \"" << m_axi_iic_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_AWPROT\" :  \"" << m_axi_iic_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_AWQOS\" :  \"" << m_axi_iic_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_AWREGION\" :  \"" << m_axi_iic_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_AWUSER\" :  \"" << m_axi_iic_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_WVALID\" :  \"" << m_axi_iic_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_WREADY\" :  \"" << m_axi_iic_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_WDATA\" :  \"" << m_axi_iic_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_WSTRB\" :  \"" << m_axi_iic_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_WLAST\" :  \"" << m_axi_iic_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_WID\" :  \"" << m_axi_iic_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_WUSER\" :  \"" << m_axi_iic_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_ARVALID\" :  \"" << m_axi_iic_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_ARREADY\" :  \"" << m_axi_iic_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_ARADDR\" :  \"" << m_axi_iic_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_ARID\" :  \"" << m_axi_iic_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_ARLEN\" :  \"" << m_axi_iic_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_ARSIZE\" :  \"" << m_axi_iic_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_ARBURST\" :  \"" << m_axi_iic_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_ARLOCK\" :  \"" << m_axi_iic_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_ARCACHE\" :  \"" << m_axi_iic_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_ARPROT\" :  \"" << m_axi_iic_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_ARQOS\" :  \"" << m_axi_iic_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_ARREGION\" :  \"" << m_axi_iic_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_ARUSER\" :  \"" << m_axi_iic_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_RVALID\" :  \"" << m_axi_iic_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_RREADY\" :  \"" << m_axi_iic_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_RDATA\" :  \"" << m_axi_iic_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_RLAST\" :  \"" << m_axi_iic_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_RID\" :  \"" << m_axi_iic_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_RUSER\" :  \"" << m_axi_iic_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_RRESP\" :  \"" << m_axi_iic_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_BVALID\" :  \"" << m_axi_iic_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_BREADY\" :  \"" << m_axi_iic_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_BRESP\" :  \"" << m_axi_iic_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_BID\" :  \"" << m_axi_iic_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_BUSER\" :  \"" << m_axi_iic_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

