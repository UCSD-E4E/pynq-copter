// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "iiccomm3.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic iiccomm3::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic iiccomm3::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<39> iiccomm3::ap_ST_fsm_state1 = "1";
const sc_lv<39> iiccomm3::ap_ST_fsm_state2 = "10";
const sc_lv<39> iiccomm3::ap_ST_fsm_state3 = "100";
const sc_lv<39> iiccomm3::ap_ST_fsm_state4 = "1000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state5 = "10000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state6 = "100000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state7 = "1000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state8 = "10000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state9 = "100000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state10 = "1000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state11 = "10000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state12 = "100000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<39> iiccomm3::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<32> iiccomm3::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> iiccomm3::ap_const_lv32_7 = "111";
const sc_lv<32> iiccomm3::ap_const_lv32_8 = "1000";
const sc_lv<32> iiccomm3::ap_const_lv32_9 = "1001";
const sc_lv<32> iiccomm3::ap_const_lv32_E = "1110";
const sc_lv<32> iiccomm3::ap_const_lv32_A = "1010";
const sc_lv<32> iiccomm3::ap_const_lv32_F = "1111";
const sc_lv<32> iiccomm3::ap_const_lv32_10 = "10000";
const sc_lv<32> iiccomm3::ap_const_lv32_17 = "10111";
const sc_lv<32> iiccomm3::ap_const_lv32_18 = "11000";
const sc_lv<32> iiccomm3::ap_const_lv32_1D = "11101";
const sc_lv<32> iiccomm3::ap_const_lv32_1E = "11110";
const sc_lv<32> iiccomm3::ap_const_lv32_25 = "100101";
const int iiccomm3::C_S_AXI_DATA_WIDTH = "100000";
const int iiccomm3::C_M_AXI_IIC_V_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int iiccomm3::C_M_AXI_IIC_V_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int iiccomm3::C_M_AXI_IIC_V_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int iiccomm3::C_M_AXI_IIC_V_CACHE_VALUE = "11";
const int iiccomm3::C_M_AXI_DATA_WIDTH = "100000";
const bool iiccomm3::ap_const_boolean_0 = false;
const sc_lv<64> iiccomm3::ap_const_lv64_10000448 = "10000000000000000010001001000";
const sc_lv<64> iiccomm3::ap_const_lv64_10000440 = "10000000000000000010001000000";
const sc_lv<64> iiccomm3::ap_const_lv64_10000441 = "10000000000000000010001000001";
const sc_lv<64> iiccomm3::ap_const_lv64_10000442 = "10000000000000000010001000010";
const sc_lv<64> iiccomm3::ap_const_lv64_10000443 = "10000000000000000010001000011";
const sc_lv<32> iiccomm3::ap_const_lv32_1 = "1";
const sc_lv<1> iiccomm3::ap_const_lv1_0 = "0";
const sc_lv<3> iiccomm3::ap_const_lv3_0 = "000";
const sc_lv<2> iiccomm3::ap_const_lv2_0 = "00";
const sc_lv<4> iiccomm3::ap_const_lv4_0 = "0000";
const sc_lv<4> iiccomm3::ap_const_lv4_F = "1111";
const sc_lv<32> iiccomm3::ap_const_lv32_201 = "1000000001";
const sc_lv<32> iiccomm3::ap_const_lv32_20 = "100000";
const sc_lv<32> iiccomm3::ap_const_lv32_1EC = "111101100";
const sc_lv<32> iiccomm3::ap_const_lv32_D0 = "11010000";
const sc_lv<32> iiccomm3::ap_const_lv32_1ED = "111101101";
const sc_lv<32> iiccomm3::ap_const_lv32_26 = "100110";
const bool iiccomm3::ap_const_boolean_1 = true;

iiccomm3::iiccomm3(sc_module_name name) : sc_module(name), mVcdFile(0) {
    iiccomm3_AXILiteS_s_axi_U = new iiccomm3_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("iiccomm3_AXILiteS_s_axi_U");
    iiccomm3_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    iiccomm3_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    iiccomm3_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    iiccomm3_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    iiccomm3_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    iiccomm3_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    iiccomm3_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    iiccomm3_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    iiccomm3_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    iiccomm3_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    iiccomm3_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    iiccomm3_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    iiccomm3_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    iiccomm3_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    iiccomm3_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    iiccomm3_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    iiccomm3_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    iiccomm3_AXILiteS_s_axi_U->ACLK(ap_clk);
    iiccomm3_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    iiccomm3_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    iiccomm3_AXILiteS_s_axi_U->ap_start(ap_start);
    iiccomm3_AXILiteS_s_axi_U->interrupt(interrupt);
    iiccomm3_AXILiteS_s_axi_U->ap_ready(ap_ready);
    iiccomm3_AXILiteS_s_axi_U->ap_done(ap_done);
    iiccomm3_AXILiteS_s_axi_U->ap_idle(ap_idle);
    iiccomm3_AXILiteS_s_axi_U->stat_reg_outValue1_V(iic_V_addr_2_read_reg_312);
    iiccomm3_AXILiteS_s_axi_U->stat_reg_outValue1_V_ap_vld(stat_reg_outValue1_V_ap_vld);
    iiccomm3_AXILiteS_s_axi_U->stat_reg_outValue2_V(iic_V_addr_2_read_reg_312);
    iiccomm3_AXILiteS_s_axi_U->stat_reg_outValue2_V_ap_vld(stat_reg_outValue2_V_ap_vld);
    iiccomm3_AXILiteS_s_axi_U->stat_reg_outValue3_V(iic_V_addr_2_read_reg_312);
    iiccomm3_AXILiteS_s_axi_U->stat_reg_outValue3_V_ap_vld(stat_reg_outValue3_V_ap_vld);
    iiccomm3_AXILiteS_s_axi_U->stat_reg_outValue4_V(iic_V_addr_2_read_reg_312);
    iiccomm3_AXILiteS_s_axi_U->stat_reg_outValue4_V_ap_vld(stat_reg_outValue4_V_ap_vld);
    iiccomm3_AXILiteS_s_axi_U->ctrl_reg_outValue_V(ap_var_for_const1);
    iiccomm3_AXILiteS_s_axi_U->ctrl_reg_outValue_V_ap_vld(ctrl_reg_outValue_V_ap_vld);
    iiccomm3_AXILiteS_s_axi_U->empty_pirq_outValue_V(iic_V_addr_read_reg_295);
    iiccomm3_AXILiteS_s_axi_U->empty_pirq_outValue_V_ap_vld(empty_pirq_outValue_V_ap_vld);
    iiccomm3_AXILiteS_s_axi_U->full_pirq_outValue_V(ap_var_for_const2);
    iiccomm3_AXILiteS_s_axi_U->full_pirq_outValue_V_ap_vld(full_pirq_outValue_V_ap_vld);
    iiccomm3_AXILiteS_s_axi_U->tx_fifo_outValue1_V(ap_var_for_const3);
    iiccomm3_AXILiteS_s_axi_U->tx_fifo_outValue1_V_ap_vld(tx_fifo_outValue1_V_ap_vld);
    iiccomm3_AXILiteS_s_axi_U->tx_fifo_outValue2_V(ap_var_for_const4);
    iiccomm3_AXILiteS_s_axi_U->tx_fifo_outValue2_V_ap_vld(tx_fifo_outValue2_V_ap_vld);
    iiccomm3_AXILiteS_s_axi_U->tx_fifo_outValue3_V(ap_var_for_const5);
    iiccomm3_AXILiteS_s_axi_U->tx_fifo_outValue3_V_ap_vld(tx_fifo_outValue3_V_ap_vld);
    iiccomm3_AXILiteS_s_axi_U->rx_fifo_outValue_V(iic_V_addr_4_read_reg_332);
    iiccomm3_AXILiteS_s_axi_U->rx_fifo_outValue_V_ap_vld(rx_fifo_outValue_V_ap_vld);
    iiccomm3_AXILiteS_s_axi_U->length1_V(ap_var_for_const6);
    iiccomm3_AXILiteS_s_axi_U->length1_V_ap_vld(length1_V_ap_vld);
    iiccomm3_iic_V_m_axi_U = new iiccomm3_iic_V_m_axi<32,32,5,16,16,16,16,C_M_AXI_IIC_V_ID_WIDTH,C_M_AXI_IIC_V_ADDR_WIDTH,C_M_AXI_IIC_V_DATA_WIDTH,C_M_AXI_IIC_V_AWUSER_WIDTH,C_M_AXI_IIC_V_ARUSER_WIDTH,C_M_AXI_IIC_V_WUSER_WIDTH,C_M_AXI_IIC_V_RUSER_WIDTH,C_M_AXI_IIC_V_BUSER_WIDTH,C_M_AXI_IIC_V_TARGET_ADDR,C_M_AXI_IIC_V_USER_VALUE,C_M_AXI_IIC_V_PROT_VALUE,C_M_AXI_IIC_V_CACHE_VALUE>("iiccomm3_iic_V_m_axi_U");
    iiccomm3_iic_V_m_axi_U->AWVALID(m_axi_iic_V_AWVALID);
    iiccomm3_iic_V_m_axi_U->AWREADY(m_axi_iic_V_AWREADY);
    iiccomm3_iic_V_m_axi_U->AWADDR(m_axi_iic_V_AWADDR);
    iiccomm3_iic_V_m_axi_U->AWID(m_axi_iic_V_AWID);
    iiccomm3_iic_V_m_axi_U->AWLEN(m_axi_iic_V_AWLEN);
    iiccomm3_iic_V_m_axi_U->AWSIZE(m_axi_iic_V_AWSIZE);
    iiccomm3_iic_V_m_axi_U->AWBURST(m_axi_iic_V_AWBURST);
    iiccomm3_iic_V_m_axi_U->AWLOCK(m_axi_iic_V_AWLOCK);
    iiccomm3_iic_V_m_axi_U->AWCACHE(m_axi_iic_V_AWCACHE);
    iiccomm3_iic_V_m_axi_U->AWPROT(m_axi_iic_V_AWPROT);
    iiccomm3_iic_V_m_axi_U->AWQOS(m_axi_iic_V_AWQOS);
    iiccomm3_iic_V_m_axi_U->AWREGION(m_axi_iic_V_AWREGION);
    iiccomm3_iic_V_m_axi_U->AWUSER(m_axi_iic_V_AWUSER);
    iiccomm3_iic_V_m_axi_U->WVALID(m_axi_iic_V_WVALID);
    iiccomm3_iic_V_m_axi_U->WREADY(m_axi_iic_V_WREADY);
    iiccomm3_iic_V_m_axi_U->WDATA(m_axi_iic_V_WDATA);
    iiccomm3_iic_V_m_axi_U->WSTRB(m_axi_iic_V_WSTRB);
    iiccomm3_iic_V_m_axi_U->WLAST(m_axi_iic_V_WLAST);
    iiccomm3_iic_V_m_axi_U->WID(m_axi_iic_V_WID);
    iiccomm3_iic_V_m_axi_U->WUSER(m_axi_iic_V_WUSER);
    iiccomm3_iic_V_m_axi_U->ARVALID(m_axi_iic_V_ARVALID);
    iiccomm3_iic_V_m_axi_U->ARREADY(m_axi_iic_V_ARREADY);
    iiccomm3_iic_V_m_axi_U->ARADDR(m_axi_iic_V_ARADDR);
    iiccomm3_iic_V_m_axi_U->ARID(m_axi_iic_V_ARID);
    iiccomm3_iic_V_m_axi_U->ARLEN(m_axi_iic_V_ARLEN);
    iiccomm3_iic_V_m_axi_U->ARSIZE(m_axi_iic_V_ARSIZE);
    iiccomm3_iic_V_m_axi_U->ARBURST(m_axi_iic_V_ARBURST);
    iiccomm3_iic_V_m_axi_U->ARLOCK(m_axi_iic_V_ARLOCK);
    iiccomm3_iic_V_m_axi_U->ARCACHE(m_axi_iic_V_ARCACHE);
    iiccomm3_iic_V_m_axi_U->ARPROT(m_axi_iic_V_ARPROT);
    iiccomm3_iic_V_m_axi_U->ARQOS(m_axi_iic_V_ARQOS);
    iiccomm3_iic_V_m_axi_U->ARREGION(m_axi_iic_V_ARREGION);
    iiccomm3_iic_V_m_axi_U->ARUSER(m_axi_iic_V_ARUSER);
    iiccomm3_iic_V_m_axi_U->RVALID(m_axi_iic_V_RVALID);
    iiccomm3_iic_V_m_axi_U->RREADY(m_axi_iic_V_RREADY);
    iiccomm3_iic_V_m_axi_U->RDATA(m_axi_iic_V_RDATA);
    iiccomm3_iic_V_m_axi_U->RLAST(m_axi_iic_V_RLAST);
    iiccomm3_iic_V_m_axi_U->RID(m_axi_iic_V_RID);
    iiccomm3_iic_V_m_axi_U->RUSER(m_axi_iic_V_RUSER);
    iiccomm3_iic_V_m_axi_U->RRESP(m_axi_iic_V_RRESP);
    iiccomm3_iic_V_m_axi_U->BVALID(m_axi_iic_V_BVALID);
    iiccomm3_iic_V_m_axi_U->BREADY(m_axi_iic_V_BREADY);
    iiccomm3_iic_V_m_axi_U->BRESP(m_axi_iic_V_BRESP);
    iiccomm3_iic_V_m_axi_U->BID(m_axi_iic_V_BID);
    iiccomm3_iic_V_m_axi_U->BUSER(m_axi_iic_V_BUSER);
    iiccomm3_iic_V_m_axi_U->ACLK(ap_clk);
    iiccomm3_iic_V_m_axi_U->ARESET(ap_rst_n_inv);
    iiccomm3_iic_V_m_axi_U->ACLK_EN(ap_var_for_const0);
    iiccomm3_iic_V_m_axi_U->I_ARVALID(iic_V_ARVALID);
    iiccomm3_iic_V_m_axi_U->I_ARREADY(iic_V_ARREADY);
    iiccomm3_iic_V_m_axi_U->I_ARADDR(iic_V_ARADDR);
    iiccomm3_iic_V_m_axi_U->I_ARID(ap_var_for_const7);
    iiccomm3_iic_V_m_axi_U->I_ARLEN(ap_var_for_const1);
    iiccomm3_iic_V_m_axi_U->I_ARSIZE(ap_var_for_const8);
    iiccomm3_iic_V_m_axi_U->I_ARLOCK(ap_var_for_const9);
    iiccomm3_iic_V_m_axi_U->I_ARCACHE(ap_var_for_const10);
    iiccomm3_iic_V_m_axi_U->I_ARQOS(ap_var_for_const10);
    iiccomm3_iic_V_m_axi_U->I_ARPROT(ap_var_for_const8);
    iiccomm3_iic_V_m_axi_U->I_ARUSER(ap_var_for_const7);
    iiccomm3_iic_V_m_axi_U->I_ARBURST(ap_var_for_const9);
    iiccomm3_iic_V_m_axi_U->I_ARREGION(ap_var_for_const10);
    iiccomm3_iic_V_m_axi_U->I_RVALID(iic_V_RVALID);
    iiccomm3_iic_V_m_axi_U->I_RREADY(iic_V_RREADY);
    iiccomm3_iic_V_m_axi_U->I_RDATA(iic_V_RDATA);
    iiccomm3_iic_V_m_axi_U->I_RID(iic_V_RID);
    iiccomm3_iic_V_m_axi_U->I_RUSER(iic_V_RUSER);
    iiccomm3_iic_V_m_axi_U->I_RRESP(iic_V_RRESP);
    iiccomm3_iic_V_m_axi_U->I_RLAST(iic_V_RLAST);
    iiccomm3_iic_V_m_axi_U->I_AWVALID(iic_V_AWVALID);
    iiccomm3_iic_V_m_axi_U->I_AWREADY(iic_V_AWREADY);
    iiccomm3_iic_V_m_axi_U->I_AWADDR(iic_V_AWADDR);
    iiccomm3_iic_V_m_axi_U->I_AWID(ap_var_for_const7);
    iiccomm3_iic_V_m_axi_U->I_AWLEN(ap_var_for_const1);
    iiccomm3_iic_V_m_axi_U->I_AWSIZE(ap_var_for_const8);
    iiccomm3_iic_V_m_axi_U->I_AWLOCK(ap_var_for_const9);
    iiccomm3_iic_V_m_axi_U->I_AWCACHE(ap_var_for_const10);
    iiccomm3_iic_V_m_axi_U->I_AWQOS(ap_var_for_const10);
    iiccomm3_iic_V_m_axi_U->I_AWPROT(ap_var_for_const8);
    iiccomm3_iic_V_m_axi_U->I_AWUSER(ap_var_for_const7);
    iiccomm3_iic_V_m_axi_U->I_AWBURST(ap_var_for_const9);
    iiccomm3_iic_V_m_axi_U->I_AWREGION(ap_var_for_const10);
    iiccomm3_iic_V_m_axi_U->I_WVALID(iic_V_WVALID);
    iiccomm3_iic_V_m_axi_U->I_WREADY(iic_V_WREADY);
    iiccomm3_iic_V_m_axi_U->I_WDATA(iic_V_WDATA);
    iiccomm3_iic_V_m_axi_U->I_WID(ap_var_for_const7);
    iiccomm3_iic_V_m_axi_U->I_WUSER(ap_var_for_const7);
    iiccomm3_iic_V_m_axi_U->I_WLAST(ap_var_for_const11);
    iiccomm3_iic_V_m_axi_U->I_WSTRB(ap_var_for_const12);
    iiccomm3_iic_V_m_axi_U->I_BVALID(iic_V_BVALID);
    iiccomm3_iic_V_m_axi_U->I_BREADY(iic_V_BREADY);
    iiccomm3_iic_V_m_axi_U->I_BRESP(iic_V_BRESP);
    iiccomm3_iic_V_m_axi_U->I_BID(iic_V_BID);
    iiccomm3_iic_V_m_axi_U->I_BUSER(iic_V_BUSER);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state10_io);
    sensitive << ( ap_sig_ioackin_iic_V_WREADY );
    sensitive << ( ap_sig_ioackin_iic_V_AWREADY );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_iic_V_ARREADY);
    sensitive << ( iic_V_ARREADY );
    sensitive << ( ap_reg_ioackin_iic_V_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_iic_V_AWREADY);
    sensitive << ( iic_V_AWREADY );
    sensitive << ( ap_reg_ioackin_iic_V_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_iic_V_WREADY);
    sensitive << ( iic_V_WREADY );
    sensitive << ( ap_reg_ioackin_iic_V_WREADY );

    SC_METHOD(thread_ctrl_reg_outValue_V_ap_vld);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_reg_ioackin_ctrl_reg_outValue_V_dummy_ack );

    SC_METHOD(thread_empty_pirq_outValue_V_ap_vld);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_reg_ioackin_empty_pirq_outValue_V_dummy_ack );

    SC_METHOD(thread_full_pirq_outValue_V_ap_vld);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_reg_ioackin_full_pirq_outValue_V_dummy_ack );

    SC_METHOD(thread_iic_V_ARADDR);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_reg_ioackin_iic_V_ARREADY );

    SC_METHOD(thread_iic_V_ARVALID);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_reg_ioackin_iic_V_ARREADY );

    SC_METHOD(thread_iic_V_AWADDR);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( iic_V_RVALID );
    sensitive << ( ap_reg_ioackin_iic_V_AWREADY );

    SC_METHOD(thread_iic_V_AWVALID);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( iic_V_RVALID );
    sensitive << ( ap_reg_ioackin_iic_V_AWREADY );

    SC_METHOD(thread_iic_V_BREADY);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( iic_V_BVALID );

    SC_METHOD(thread_iic_V_RREADY);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( iic_V_RVALID );
    sensitive << ( ap_sig_ioackin_iic_V_AWREADY );

    SC_METHOD(thread_iic_V_WDATA);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_reg_ioackin_iic_V_WREADY );

    SC_METHOD(thread_iic_V_WVALID);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_reg_ioackin_iic_V_WREADY );

    SC_METHOD(thread_iic_V_blk_n_AR);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_iic_V_ARREADY );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_iic_V_blk_n_AW);
    sensitive << ( m_axi_iic_V_AWREADY );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_iic_V_blk_n_B);
    sensitive << ( m_axi_iic_V_BVALID );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_iic_V_blk_n_R);
    sensitive << ( m_axi_iic_V_RVALID );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_iic_V_blk_n_W);
    sensitive << ( m_axi_iic_V_WREADY );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_length1_V_ap_vld);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_reg_ioackin_length1_V_dummy_ack );

    SC_METHOD(thread_rx_fifo_outValue_V_ap_vld);
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_stat_reg_outValue1_V_ap_vld);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_reg_ioackin_stat_reg_outValue1_V_dummy_ack );

    SC_METHOD(thread_stat_reg_outValue2_V_ap_vld);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_reg_ioackin_stat_reg_outValue2_V_dummy_ack );

    SC_METHOD(thread_stat_reg_outValue3_V_ap_vld);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_reg_ioackin_stat_reg_outValue3_V_dummy_ack );

    SC_METHOD(thread_stat_reg_outValue4_V_ap_vld);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_reg_ioackin_stat_reg_outValue4_V_dummy_ack );

    SC_METHOD(thread_tx_fifo_outValue1_V_ap_vld);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_reg_ioackin_tx_fifo_outValue1_V_dummy_ack );

    SC_METHOD(thread_tx_fifo_outValue2_V_ap_vld);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_reg_ioackin_tx_fifo_outValue2_V_dummy_ack );

    SC_METHOD(thread_tx_fifo_outValue3_V_ap_vld);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_reg_ioackin_tx_fifo_outValue3_V_dummy_ack );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( iic_V_RVALID );
    sensitive << ( iic_V_BVALID );
    sensitive << ( ap_sig_ioackin_iic_V_ARREADY );
    sensitive << ( ap_sig_ioackin_iic_V_WREADY );
    sensitive << ( ap_sig_ioackin_iic_V_AWREADY );
    sensitive << ( ap_block_state10_io );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const11);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const8);

    SC_THREAD(thread_ap_var_for_const9);

    SC_THREAD(thread_ap_var_for_const10);

    SC_THREAD(thread_ap_var_for_const12);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    ap_CS_fsm = "000000000000000000000000000000000000001";
    ap_reg_ioackin_iic_V_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_iic_V_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_iic_V_WREADY = SC_LOGIC_0;
    ap_reg_ioackin_empty_pirq_outValue_V_dummy_ack = SC_LOGIC_0;
    ap_reg_ioackin_length1_V_dummy_ack = SC_LOGIC_0;
    ap_reg_ioackin_full_pirq_outValue_V_dummy_ack = SC_LOGIC_0;
    ap_reg_ioackin_ctrl_reg_outValue_V_dummy_ack = SC_LOGIC_0;
    ap_reg_ioackin_tx_fifo_outValue1_V_dummy_ack = SC_LOGIC_0;
    ap_reg_ioackin_tx_fifo_outValue2_V_dummy_ack = SC_LOGIC_0;
    ap_reg_ioackin_tx_fifo_outValue3_V_dummy_ack = SC_LOGIC_0;
    ap_reg_ioackin_stat_reg_outValue1_V_dummy_ack = SC_LOGIC_0;
    ap_reg_ioackin_stat_reg_outValue2_V_dummy_ack = SC_LOGIC_0;
    ap_reg_ioackin_stat_reg_outValue3_V_dummy_ack = SC_LOGIC_0;
    ap_reg_ioackin_stat_reg_outValue4_V_dummy_ack = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "iiccomm3_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_iic_V_AWVALID, "(port)m_axi_iic_V_AWVALID");
    sc_trace(mVcdFile, m_axi_iic_V_AWREADY, "(port)m_axi_iic_V_AWREADY");
    sc_trace(mVcdFile, m_axi_iic_V_AWADDR, "(port)m_axi_iic_V_AWADDR");
    sc_trace(mVcdFile, m_axi_iic_V_AWID, "(port)m_axi_iic_V_AWID");
    sc_trace(mVcdFile, m_axi_iic_V_AWLEN, "(port)m_axi_iic_V_AWLEN");
    sc_trace(mVcdFile, m_axi_iic_V_AWSIZE, "(port)m_axi_iic_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_iic_V_AWBURST, "(port)m_axi_iic_V_AWBURST");
    sc_trace(mVcdFile, m_axi_iic_V_AWLOCK, "(port)m_axi_iic_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_iic_V_AWCACHE, "(port)m_axi_iic_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_iic_V_AWPROT, "(port)m_axi_iic_V_AWPROT");
    sc_trace(mVcdFile, m_axi_iic_V_AWQOS, "(port)m_axi_iic_V_AWQOS");
    sc_trace(mVcdFile, m_axi_iic_V_AWREGION, "(port)m_axi_iic_V_AWREGION");
    sc_trace(mVcdFile, m_axi_iic_V_AWUSER, "(port)m_axi_iic_V_AWUSER");
    sc_trace(mVcdFile, m_axi_iic_V_WVALID, "(port)m_axi_iic_V_WVALID");
    sc_trace(mVcdFile, m_axi_iic_V_WREADY, "(port)m_axi_iic_V_WREADY");
    sc_trace(mVcdFile, m_axi_iic_V_WDATA, "(port)m_axi_iic_V_WDATA");
    sc_trace(mVcdFile, m_axi_iic_V_WSTRB, "(port)m_axi_iic_V_WSTRB");
    sc_trace(mVcdFile, m_axi_iic_V_WLAST, "(port)m_axi_iic_V_WLAST");
    sc_trace(mVcdFile, m_axi_iic_V_WID, "(port)m_axi_iic_V_WID");
    sc_trace(mVcdFile, m_axi_iic_V_WUSER, "(port)m_axi_iic_V_WUSER");
    sc_trace(mVcdFile, m_axi_iic_V_ARVALID, "(port)m_axi_iic_V_ARVALID");
    sc_trace(mVcdFile, m_axi_iic_V_ARREADY, "(port)m_axi_iic_V_ARREADY");
    sc_trace(mVcdFile, m_axi_iic_V_ARADDR, "(port)m_axi_iic_V_ARADDR");
    sc_trace(mVcdFile, m_axi_iic_V_ARID, "(port)m_axi_iic_V_ARID");
    sc_trace(mVcdFile, m_axi_iic_V_ARLEN, "(port)m_axi_iic_V_ARLEN");
    sc_trace(mVcdFile, m_axi_iic_V_ARSIZE, "(port)m_axi_iic_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_iic_V_ARBURST, "(port)m_axi_iic_V_ARBURST");
    sc_trace(mVcdFile, m_axi_iic_V_ARLOCK, "(port)m_axi_iic_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_iic_V_ARCACHE, "(port)m_axi_iic_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_iic_V_ARPROT, "(port)m_axi_iic_V_ARPROT");
    sc_trace(mVcdFile, m_axi_iic_V_ARQOS, "(port)m_axi_iic_V_ARQOS");
    sc_trace(mVcdFile, m_axi_iic_V_ARREGION, "(port)m_axi_iic_V_ARREGION");
    sc_trace(mVcdFile, m_axi_iic_V_ARUSER, "(port)m_axi_iic_V_ARUSER");
    sc_trace(mVcdFile, m_axi_iic_V_RVALID, "(port)m_axi_iic_V_RVALID");
    sc_trace(mVcdFile, m_axi_iic_V_RREADY, "(port)m_axi_iic_V_RREADY");
    sc_trace(mVcdFile, m_axi_iic_V_RDATA, "(port)m_axi_iic_V_RDATA");
    sc_trace(mVcdFile, m_axi_iic_V_RLAST, "(port)m_axi_iic_V_RLAST");
    sc_trace(mVcdFile, m_axi_iic_V_RID, "(port)m_axi_iic_V_RID");
    sc_trace(mVcdFile, m_axi_iic_V_RUSER, "(port)m_axi_iic_V_RUSER");
    sc_trace(mVcdFile, m_axi_iic_V_RRESP, "(port)m_axi_iic_V_RRESP");
    sc_trace(mVcdFile, m_axi_iic_V_BVALID, "(port)m_axi_iic_V_BVALID");
    sc_trace(mVcdFile, m_axi_iic_V_BREADY, "(port)m_axi_iic_V_BREADY");
    sc_trace(mVcdFile, m_axi_iic_V_BRESP, "(port)m_axi_iic_V_BRESP");
    sc_trace(mVcdFile, m_axi_iic_V_BID, "(port)m_axi_iic_V_BID");
    sc_trace(mVcdFile, m_axi_iic_V_BUSER, "(port)m_axi_iic_V_BUSER");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, stat_reg_outValue1_V_ap_vld, "stat_reg_outValue1_V_ap_vld");
    sc_trace(mVcdFile, stat_reg_outValue2_V_ap_vld, "stat_reg_outValue2_V_ap_vld");
    sc_trace(mVcdFile, stat_reg_outValue3_V_ap_vld, "stat_reg_outValue3_V_ap_vld");
    sc_trace(mVcdFile, stat_reg_outValue4_V_ap_vld, "stat_reg_outValue4_V_ap_vld");
    sc_trace(mVcdFile, ctrl_reg_outValue_V_ap_vld, "ctrl_reg_outValue_V_ap_vld");
    sc_trace(mVcdFile, empty_pirq_outValue_V_ap_vld, "empty_pirq_outValue_V_ap_vld");
    sc_trace(mVcdFile, full_pirq_outValue_V_ap_vld, "full_pirq_outValue_V_ap_vld");
    sc_trace(mVcdFile, tx_fifo_outValue1_V_ap_vld, "tx_fifo_outValue1_V_ap_vld");
    sc_trace(mVcdFile, tx_fifo_outValue2_V_ap_vld, "tx_fifo_outValue2_V_ap_vld");
    sc_trace(mVcdFile, tx_fifo_outValue3_V_ap_vld, "tx_fifo_outValue3_V_ap_vld");
    sc_trace(mVcdFile, rx_fifo_outValue_V_ap_vld, "rx_fifo_outValue_V_ap_vld");
    sc_trace(mVcdFile, length1_V_ap_vld, "length1_V_ap_vld");
    sc_trace(mVcdFile, iic_V_blk_n_AR, "iic_V_blk_n_AR");
    sc_trace(mVcdFile, iic_V_blk_n_R, "iic_V_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, iic_V_blk_n_AW, "iic_V_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, iic_V_blk_n_W, "iic_V_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, iic_V_blk_n_B, "iic_V_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, iic_V_AWVALID, "iic_V_AWVALID");
    sc_trace(mVcdFile, iic_V_AWREADY, "iic_V_AWREADY");
    sc_trace(mVcdFile, iic_V_AWADDR, "iic_V_AWADDR");
    sc_trace(mVcdFile, iic_V_WVALID, "iic_V_WVALID");
    sc_trace(mVcdFile, iic_V_WREADY, "iic_V_WREADY");
    sc_trace(mVcdFile, iic_V_WDATA, "iic_V_WDATA");
    sc_trace(mVcdFile, iic_V_ARVALID, "iic_V_ARVALID");
    sc_trace(mVcdFile, iic_V_ARREADY, "iic_V_ARREADY");
    sc_trace(mVcdFile, iic_V_ARADDR, "iic_V_ARADDR");
    sc_trace(mVcdFile, iic_V_RVALID, "iic_V_RVALID");
    sc_trace(mVcdFile, iic_V_RREADY, "iic_V_RREADY");
    sc_trace(mVcdFile, iic_V_RDATA, "iic_V_RDATA");
    sc_trace(mVcdFile, iic_V_RLAST, "iic_V_RLAST");
    sc_trace(mVcdFile, iic_V_RID, "iic_V_RID");
    sc_trace(mVcdFile, iic_V_RUSER, "iic_V_RUSER");
    sc_trace(mVcdFile, iic_V_RRESP, "iic_V_RRESP");
    sc_trace(mVcdFile, iic_V_BVALID, "iic_V_BVALID");
    sc_trace(mVcdFile, iic_V_BREADY, "iic_V_BREADY");
    sc_trace(mVcdFile, iic_V_BRESP, "iic_V_BRESP");
    sc_trace(mVcdFile, iic_V_BID, "iic_V_BID");
    sc_trace(mVcdFile, iic_V_BUSER, "iic_V_BUSER");
    sc_trace(mVcdFile, ap_sig_ioackin_iic_V_ARREADY, "ap_sig_ioackin_iic_V_ARREADY");
    sc_trace(mVcdFile, iic_V_addr_read_reg_295, "iic_V_addr_read_reg_295");
    sc_trace(mVcdFile, ap_sig_ioackin_iic_V_WREADY, "ap_sig_ioackin_iic_V_WREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_iic_V_AWREADY, "ap_sig_ioackin_iic_V_AWREADY");
    sc_trace(mVcdFile, ap_block_state10_io, "ap_block_state10_io");
    sc_trace(mVcdFile, iic_V_addr_2_read_reg_312, "iic_V_addr_2_read_reg_312");
    sc_trace(mVcdFile, iic_V_addr_4_read_reg_332, "iic_V_addr_4_read_reg_332");
    sc_trace(mVcdFile, ap_reg_ioackin_iic_V_ARREADY, "ap_reg_ioackin_iic_V_ARREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_iic_V_AWREADY, "ap_reg_ioackin_iic_V_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_iic_V_WREADY, "ap_reg_ioackin_iic_V_WREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_empty_pirq_outValue_V_dummy_ack, "ap_reg_ioackin_empty_pirq_outValue_V_dummy_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_length1_V_dummy_ack, "ap_reg_ioackin_length1_V_dummy_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_full_pirq_outValue_V_dummy_ack, "ap_reg_ioackin_full_pirq_outValue_V_dummy_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_ctrl_reg_outValue_V_dummy_ack, "ap_reg_ioackin_ctrl_reg_outValue_V_dummy_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_tx_fifo_outValue1_V_dummy_ack, "ap_reg_ioackin_tx_fifo_outValue1_V_dummy_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_tx_fifo_outValue2_V_dummy_ack, "ap_reg_ioackin_tx_fifo_outValue2_V_dummy_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_tx_fifo_outValue3_V_dummy_ack, "ap_reg_ioackin_tx_fifo_outValue3_V_dummy_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_stat_reg_outValue1_V_dummy_ack, "ap_reg_ioackin_stat_reg_outValue1_V_dummy_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_stat_reg_outValue2_V_dummy_ack, "ap_reg_ioackin_stat_reg_outValue2_V_dummy_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_stat_reg_outValue3_V_dummy_ack, "ap_reg_ioackin_stat_reg_outValue3_V_dummy_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_stat_reg_outValue4_V_dummy_ack, "ap_reg_ioackin_stat_reg_outValue4_V_dummy_ack");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("iiccomm3.hdltvin.dat");
    mHdltvoutHandle.open("iiccomm3.hdltvout.dat");
}

iiccomm3::~iiccomm3() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete iiccomm3_AXILiteS_s_axi_U;
    delete iiccomm3_iic_V_m_axi_U;
}

void iiccomm3::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void iiccomm3::thread_ap_var_for_const11() {
    ap_var_for_const11 = ap_const_logic_0;
}

void iiccomm3::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_F;
}

void iiccomm3::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_1;
}

void iiccomm3::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv1_0;
}

void iiccomm3::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv3_0;
}

void iiccomm3::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv2_0;
}

void iiccomm3::thread_ap_var_for_const10() {
    ap_var_for_const10 = ap_const_lv4_0;
}

void iiccomm3::thread_ap_var_for_const12() {
    ap_var_for_const12 = ap_const_lv4_F;
}

void iiccomm3::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv32_20;
}

void iiccomm3::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv32_1EC;
}

void iiccomm3::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv32_D0;
}

void iiccomm3::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv32_1ED;
}

void iiccomm3::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_ctrl_reg_outValue_V_dummy_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            if (esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_ctrl_reg_outValue_V_dummy_ack = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) {
                ap_reg_ioackin_ctrl_reg_outValue_V_dummy_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_empty_pirq_outValue_V_dummy_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            if (esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_empty_pirq_outValue_V_dummy_ack = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) {
                ap_reg_ioackin_empty_pirq_outValue_V_dummy_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_full_pirq_outValue_V_dummy_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            if (esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_full_pirq_outValue_V_dummy_ack = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) {
                ap_reg_ioackin_full_pirq_outValue_V_dummy_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_iic_V_ARREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
              !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_V_ARREADY.read()))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_iic_V_ARREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_iic_V_ARREADY.read(), ap_const_logic_1)))) {
            ap_reg_ioackin_iic_V_ARREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                     esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_V_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_V_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_V_ARREADY.read())))) {
            ap_reg_ioackin_iic_V_ARREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_iic_V_AWREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
              esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
              !(esl_seteq<1,1,1>(ap_const_logic_0, iic_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_V_AWREADY.read()))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_iic_V_AWREADY.read(), ap_const_logic_1)))) {
            ap_reg_ioackin_iic_V_AWREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_V_AWREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_V_AWREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
                     esl_seteq<1,1,1>(iic_V_RVALID.read(), ap_const_logic_1) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_V_AWREADY.read())))) {
            ap_reg_ioackin_iic_V_AWREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_iic_V_WREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
              esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_iic_V_WREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_iic_V_WREADY.read(), ap_const_logic_1)))) {
            ap_reg_ioackin_iic_V_WREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_V_WREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_V_WREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, iic_V_WREADY.read())))) {
            ap_reg_ioackin_iic_V_WREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_length1_V_dummy_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            if (esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_length1_V_dummy_ack = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) {
                ap_reg_ioackin_length1_V_dummy_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_stat_reg_outValue1_V_dummy_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_iic_V_WREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_stat_reg_outValue1_V_dummy_ack = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) {
                ap_reg_ioackin_stat_reg_outValue1_V_dummy_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_stat_reg_outValue2_V_dummy_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_iic_V_WREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_stat_reg_outValue2_V_dummy_ack = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) {
                ap_reg_ioackin_stat_reg_outValue2_V_dummy_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_stat_reg_outValue3_V_dummy_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_iic_V_WREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_stat_reg_outValue3_V_dummy_ack = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) {
                ap_reg_ioackin_stat_reg_outValue3_V_dummy_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_stat_reg_outValue4_V_dummy_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_iic_V_WREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_stat_reg_outValue4_V_dummy_ack = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) {
                ap_reg_ioackin_stat_reg_outValue4_V_dummy_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_tx_fifo_outValue1_V_dummy_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            if (esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_tx_fifo_outValue1_V_dummy_ack = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) {
                ap_reg_ioackin_tx_fifo_outValue1_V_dummy_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_tx_fifo_outValue2_V_dummy_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            if (esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_tx_fifo_outValue2_V_dummy_ack = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) {
                ap_reg_ioackin_tx_fifo_outValue2_V_dummy_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_tx_fifo_outValue3_V_dummy_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            if (esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_tx_fifo_outValue3_V_dummy_ack = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) {
                ap_reg_ioackin_tx_fifo_outValue3_V_dummy_ack = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, iic_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_V_AWREADY.read())))) {
        iic_V_addr_2_read_reg_312 = iic_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && esl_seteq<1,1,1>(iic_V_RVALID.read(), ap_const_logic_1))) {
        iic_V_addr_4_read_reg_332 = iic_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(iic_V_RVALID.read(), ap_const_logic_1))) {
        iic_V_addr_read_reg_295 = iic_V_RDATA.read();
    }
}

void iiccomm3::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void iiccomm3::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void iiccomm3::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void iiccomm3::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void iiccomm3::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void iiccomm3::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void iiccomm3::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void iiccomm3::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void iiccomm3::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void iiccomm3::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void iiccomm3::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void iiccomm3::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void iiccomm3::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void iiccomm3::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void iiccomm3::thread_ap_block_state10_io() {
    ap_block_state10_io = (esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_V_WREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_V_AWREADY.read()));
}

void iiccomm3::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void iiccomm3::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void iiccomm3::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void iiccomm3::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void iiccomm3::thread_ap_sig_ioackin_iic_V_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_V_ARREADY.read())) {
        ap_sig_ioackin_iic_V_ARREADY = iic_V_ARREADY.read();
    } else {
        ap_sig_ioackin_iic_V_ARREADY = ap_const_logic_1;
    }
}

void iiccomm3::thread_ap_sig_ioackin_iic_V_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_V_AWREADY.read())) {
        ap_sig_ioackin_iic_V_AWREADY = iic_V_AWREADY.read();
    } else {
        ap_sig_ioackin_iic_V_AWREADY = ap_const_logic_1;
    }
}

void iiccomm3::thread_ap_sig_ioackin_iic_V_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_V_WREADY.read())) {
        ap_sig_ioackin_iic_V_WREADY = iic_V_WREADY.read();
    } else {
        ap_sig_ioackin_iic_V_WREADY = ap_const_logic_1;
    }
}

void iiccomm3::thread_ctrl_reg_outValue_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_ctrl_reg_outValue_V_dummy_ack.read()))) {
        ctrl_reg_outValue_V_ap_vld = ap_const_logic_1;
    } else {
        ctrl_reg_outValue_V_ap_vld = ap_const_logic_0;
    }
}

void iiccomm3::thread_empty_pirq_outValue_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_empty_pirq_outValue_V_dummy_ack.read()))) {
        empty_pirq_outValue_V_ap_vld = ap_const_logic_1;
    } else {
        empty_pirq_outValue_V_ap_vld = ap_const_logic_0;
    }
}

void iiccomm3::thread_full_pirq_outValue_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_full_pirq_outValue_V_dummy_ack.read()))) {
        full_pirq_outValue_V_ap_vld = ap_const_logic_1;
    } else {
        full_pirq_outValue_V_ap_vld = ap_const_logic_0;
    }
}

void iiccomm3::thread_iic_V_ARADDR() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_V_ARREADY.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
            iic_V_ARADDR =  (sc_lv<32>) (ap_const_lv64_10000443);
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
            iic_V_ARADDR =  (sc_lv<32>) (ap_const_lv64_10000441);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            iic_V_ARADDR =  (sc_lv<32>) (ap_const_lv64_10000448);
        } else {
            iic_V_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        iic_V_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void iiccomm3::thread_iic_V_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_V_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_V_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_V_ARREADY.read())))) {
        iic_V_ARVALID = ap_const_logic_1;
    } else {
        iic_V_ARVALID = ap_const_logic_0;
    }
}

void iiccomm3::thread_iic_V_AWADDR() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_V_AWREADY.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
             esl_seteq<1,1,1>(iic_V_RVALID.read(), ap_const_logic_1))) {
            iic_V_AWADDR =  (sc_lv<32>) (ap_const_lv64_10000442);
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            iic_V_AWADDR =  (sc_lv<32>) (ap_const_lv64_10000440);
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            iic_V_AWADDR =  (sc_lv<32>) (ap_const_lv64_10000448);
        } else {
            iic_V_AWADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        iic_V_AWADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void iiccomm3::thread_iic_V_AWVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_V_AWREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_V_AWREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          esl_seteq<1,1,1>(iic_V_RVALID.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_V_AWREADY.read())))) {
        iic_V_AWVALID = ap_const_logic_1;
    } else {
        iic_V_AWVALID = ap_const_logic_0;
    }
}

void iiccomm3::thread_iic_V_BREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(iic_V_BVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(iic_V_BVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(iic_V_BVALID.read(), ap_const_logic_1)))) {
        iic_V_BREADY = ap_const_logic_1;
    } else {
        iic_V_BREADY = ap_const_logic_0;
    }
}

void iiccomm3::thread_iic_V_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(iic_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, iic_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_V_AWREADY.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
          esl_seteq<1,1,1>(iic_V_RVALID.read(), ap_const_logic_1)))) {
        iic_V_RREADY = ap_const_logic_1;
    } else {
        iic_V_RREADY = ap_const_logic_0;
    }
}

void iiccomm3::thread_iic_V_WDATA() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_V_WREADY.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
            iic_V_WDATA = ap_const_lv32_201;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
            iic_V_WDATA = ap_const_lv32_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            iic_V_WDATA = ap_const_lv32_F;
        } else {
            iic_V_WDATA = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        iic_V_WDATA = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void iiccomm3::thread_iic_V_WVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_V_WREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_V_WREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_iic_V_WREADY.read())))) {
        iic_V_WVALID = ap_const_logic_1;
    } else {
        iic_V_WVALID = ap_const_logic_0;
    }
}

void iiccomm3::thread_iic_V_blk_n_AR() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        iic_V_blk_n_AR = m_axi_iic_V_ARREADY.read();
    } else {
        iic_V_blk_n_AR = ap_const_logic_1;
    }
}

void iiccomm3::thread_iic_V_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        iic_V_blk_n_AW = m_axi_iic_V_AWREADY.read();
    } else {
        iic_V_blk_n_AW = ap_const_logic_1;
    }
}

void iiccomm3::thread_iic_V_blk_n_B() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        iic_V_blk_n_B = m_axi_iic_V_BVALID.read();
    } else {
        iic_V_blk_n_B = ap_const_logic_1;
    }
}

void iiccomm3::thread_iic_V_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        iic_V_blk_n_R = m_axi_iic_V_RVALID.read();
    } else {
        iic_V_blk_n_R = ap_const_logic_1;
    }
}

void iiccomm3::thread_iic_V_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        iic_V_blk_n_W = m_axi_iic_V_WREADY.read();
    } else {
        iic_V_blk_n_W = ap_const_logic_1;
    }
}

void iiccomm3::thread_length1_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_length1_V_dummy_ack.read()))) {
        length1_V_ap_vld = ap_const_logic_1;
    } else {
        length1_V_ap_vld = ap_const_logic_0;
    }
}

void iiccomm3::thread_rx_fifo_outValue_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        rx_fifo_outValue_V_ap_vld = ap_const_logic_1;
    } else {
        rx_fifo_outValue_V_ap_vld = ap_const_logic_0;
    }
}

void iiccomm3::thread_stat_reg_outValue1_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_stat_reg_outValue1_V_dummy_ack.read()))) {
        stat_reg_outValue1_V_ap_vld = ap_const_logic_1;
    } else {
        stat_reg_outValue1_V_ap_vld = ap_const_logic_0;
    }
}

void iiccomm3::thread_stat_reg_outValue2_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_stat_reg_outValue2_V_dummy_ack.read()))) {
        stat_reg_outValue2_V_ap_vld = ap_const_logic_1;
    } else {
        stat_reg_outValue2_V_ap_vld = ap_const_logic_0;
    }
}

void iiccomm3::thread_stat_reg_outValue3_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_stat_reg_outValue3_V_dummy_ack.read()))) {
        stat_reg_outValue3_V_ap_vld = ap_const_logic_1;
    } else {
        stat_reg_outValue3_V_ap_vld = ap_const_logic_0;
    }
}

void iiccomm3::thread_stat_reg_outValue4_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_stat_reg_outValue4_V_dummy_ack.read()))) {
        stat_reg_outValue4_V_ap_vld = ap_const_logic_1;
    } else {
        stat_reg_outValue4_V_ap_vld = ap_const_logic_0;
    }
}

void iiccomm3::thread_tx_fifo_outValue1_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_tx_fifo_outValue1_V_dummy_ack.read()))) {
        tx_fifo_outValue1_V_ap_vld = ap_const_logic_1;
    } else {
        tx_fifo_outValue1_V_ap_vld = ap_const_logic_0;
    }
}

void iiccomm3::thread_tx_fifo_outValue2_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_tx_fifo_outValue2_V_dummy_ack.read()))) {
        tx_fifo_outValue2_V_ap_vld = ap_const_logic_1;
    } else {
        tx_fifo_outValue2_V_ap_vld = ap_const_logic_0;
    }
}

void iiccomm3::thread_tx_fifo_outValue3_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_tx_fifo_outValue3_V_dummy_ack.read()))) {
        tx_fifo_outValue3_V_ap_vld = ap_const_logic_1;
    } else {
        tx_fifo_outValue3_V_ap_vld = ap_const_logic_0;
    }
}

void iiccomm3::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_V_ARREADY.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(iic_V_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_iic_V_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_iic_V_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(iic_V_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(iic_V_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_iic_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, iic_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_iic_V_AWREADY.read())))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_iic_V_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state25;
            }
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && esl_seteq<1,1,1>(iic_V_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state31;
            } else {
                ap_NS_fsm = ap_ST_fsm_state30;
            }
            break;
        case 1073741824 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_iic_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state32;
            } else {
                ap_NS_fsm = ap_ST_fsm_state31;
            }
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && esl_seteq<1,1,1>(iic_V_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state39;
            } else {
                ap_NS_fsm = ap_ST_fsm_state38;
            }
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<39>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void iiccomm3::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_iic_V_AWVALID\" :  \"" << m_axi_iic_V_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_V_AWREADY\" :  \"" << m_axi_iic_V_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_AWADDR\" :  \"" << m_axi_iic_V_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_AWID\" :  \"" << m_axi_iic_V_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_AWLEN\" :  \"" << m_axi_iic_V_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_AWSIZE\" :  \"" << m_axi_iic_V_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_AWBURST\" :  \"" << m_axi_iic_V_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_AWLOCK\" :  \"" << m_axi_iic_V_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_AWCACHE\" :  \"" << m_axi_iic_V_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_AWPROT\" :  \"" << m_axi_iic_V_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_AWQOS\" :  \"" << m_axi_iic_V_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_AWREGION\" :  \"" << m_axi_iic_V_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_AWUSER\" :  \"" << m_axi_iic_V_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_WVALID\" :  \"" << m_axi_iic_V_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_V_WREADY\" :  \"" << m_axi_iic_V_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_WDATA\" :  \"" << m_axi_iic_V_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_WSTRB\" :  \"" << m_axi_iic_V_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_WLAST\" :  \"" << m_axi_iic_V_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_WID\" :  \"" << m_axi_iic_V_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_WUSER\" :  \"" << m_axi_iic_V_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_ARVALID\" :  \"" << m_axi_iic_V_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_V_ARREADY\" :  \"" << m_axi_iic_V_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_ARADDR\" :  \"" << m_axi_iic_V_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_ARID\" :  \"" << m_axi_iic_V_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_ARLEN\" :  \"" << m_axi_iic_V_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_ARSIZE\" :  \"" << m_axi_iic_V_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_ARBURST\" :  \"" << m_axi_iic_V_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_ARLOCK\" :  \"" << m_axi_iic_V_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_ARCACHE\" :  \"" << m_axi_iic_V_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_ARPROT\" :  \"" << m_axi_iic_V_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_ARQOS\" :  \"" << m_axi_iic_V_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_ARREGION\" :  \"" << m_axi_iic_V_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_ARUSER\" :  \"" << m_axi_iic_V_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_V_RVALID\" :  \"" << m_axi_iic_V_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_RREADY\" :  \"" << m_axi_iic_V_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_V_RDATA\" :  \"" << m_axi_iic_V_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_V_RLAST\" :  \"" << m_axi_iic_V_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_V_RID\" :  \"" << m_axi_iic_V_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_V_RUSER\" :  \"" << m_axi_iic_V_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_V_RRESP\" :  \"" << m_axi_iic_V_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_V_BVALID\" :  \"" << m_axi_iic_V_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_iic_V_BREADY\" :  \"" << m_axi_iic_V_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_V_BRESP\" :  \"" << m_axi_iic_V_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_V_BID\" :  \"" << m_axi_iic_V_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_iic_V_BUSER\" :  \"" << m_axi_iic_V_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

