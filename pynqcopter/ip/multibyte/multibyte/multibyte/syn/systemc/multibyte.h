// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _multibyte_HH_
#define _multibyte_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "multibyte_sensorDbkb.h"
#include "multibyte_CTRL_s_axi.h"
#include "multibyte_CTRL_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_CTRL_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_CTRL_ID_WIDTH = 1,
         unsigned int C_M_AXI_CTRL_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_CTRL_DATA_WIDTH = 32,
         unsigned int C_M_AXI_CTRL_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_CTRL_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_CTRL_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_CTRL_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CTRL_ADDR_WIDTH = 8,
         unsigned int C_S_AXI_CTRL_DATA_WIDTH = 32>
struct multibyte : public sc_module {
    // Port declarations 65
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_CTRL_AWVALID;
    sc_in< sc_logic > m_axi_CTRL_AWREADY;
    sc_out< sc_uint<C_M_AXI_CTRL_ADDR_WIDTH> > m_axi_CTRL_AWADDR;
    sc_out< sc_uint<C_M_AXI_CTRL_ID_WIDTH> > m_axi_CTRL_AWID;
    sc_out< sc_lv<8> > m_axi_CTRL_AWLEN;
    sc_out< sc_lv<3> > m_axi_CTRL_AWSIZE;
    sc_out< sc_lv<2> > m_axi_CTRL_AWBURST;
    sc_out< sc_lv<2> > m_axi_CTRL_AWLOCK;
    sc_out< sc_lv<4> > m_axi_CTRL_AWCACHE;
    sc_out< sc_lv<3> > m_axi_CTRL_AWPROT;
    sc_out< sc_lv<4> > m_axi_CTRL_AWQOS;
    sc_out< sc_lv<4> > m_axi_CTRL_AWREGION;
    sc_out< sc_uint<C_M_AXI_CTRL_AWUSER_WIDTH> > m_axi_CTRL_AWUSER;
    sc_out< sc_logic > m_axi_CTRL_WVALID;
    sc_in< sc_logic > m_axi_CTRL_WREADY;
    sc_out< sc_uint<C_M_AXI_CTRL_DATA_WIDTH> > m_axi_CTRL_WDATA;
    sc_out< sc_uint<C_M_AXI_CTRL_DATA_WIDTH/8> > m_axi_CTRL_WSTRB;
    sc_out< sc_logic > m_axi_CTRL_WLAST;
    sc_out< sc_uint<C_M_AXI_CTRL_ID_WIDTH> > m_axi_CTRL_WID;
    sc_out< sc_uint<C_M_AXI_CTRL_WUSER_WIDTH> > m_axi_CTRL_WUSER;
    sc_out< sc_logic > m_axi_CTRL_ARVALID;
    sc_in< sc_logic > m_axi_CTRL_ARREADY;
    sc_out< sc_uint<C_M_AXI_CTRL_ADDR_WIDTH> > m_axi_CTRL_ARADDR;
    sc_out< sc_uint<C_M_AXI_CTRL_ID_WIDTH> > m_axi_CTRL_ARID;
    sc_out< sc_lv<8> > m_axi_CTRL_ARLEN;
    sc_out< sc_lv<3> > m_axi_CTRL_ARSIZE;
    sc_out< sc_lv<2> > m_axi_CTRL_ARBURST;
    sc_out< sc_lv<2> > m_axi_CTRL_ARLOCK;
    sc_out< sc_lv<4> > m_axi_CTRL_ARCACHE;
    sc_out< sc_lv<3> > m_axi_CTRL_ARPROT;
    sc_out< sc_lv<4> > m_axi_CTRL_ARQOS;
    sc_out< sc_lv<4> > m_axi_CTRL_ARREGION;
    sc_out< sc_uint<C_M_AXI_CTRL_ARUSER_WIDTH> > m_axi_CTRL_ARUSER;
    sc_in< sc_logic > m_axi_CTRL_RVALID;
    sc_out< sc_logic > m_axi_CTRL_RREADY;
    sc_in< sc_uint<C_M_AXI_CTRL_DATA_WIDTH> > m_axi_CTRL_RDATA;
    sc_in< sc_logic > m_axi_CTRL_RLAST;
    sc_in< sc_uint<C_M_AXI_CTRL_ID_WIDTH> > m_axi_CTRL_RID;
    sc_in< sc_uint<C_M_AXI_CTRL_RUSER_WIDTH> > m_axi_CTRL_RUSER;
    sc_in< sc_lv<2> > m_axi_CTRL_RRESP;
    sc_in< sc_logic > m_axi_CTRL_BVALID;
    sc_out< sc_logic > m_axi_CTRL_BREADY;
    sc_in< sc_lv<2> > m_axi_CTRL_BRESP;
    sc_in< sc_uint<C_M_AXI_CTRL_ID_WIDTH> > m_axi_CTRL_BID;
    sc_in< sc_uint<C_M_AXI_CTRL_BUSER_WIDTH> > m_axi_CTRL_BUSER;
    sc_in< sc_logic > s_axi_CTRL_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_WVALID;
    sc_out< sc_logic > s_axi_CTRL_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH/8> > s_axi_CTRL_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_RVALID;
    sc_in< sc_logic > s_axi_CTRL_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const8;
    sc_signal< sc_lv<32> > ap_var_for_const10;
    sc_signal< sc_lv<32> > ap_var_for_const4;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<1> > ap_var_for_const3;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<3> > ap_var_for_const5;
    sc_signal< sc_lv<2> > ap_var_for_const6;
    sc_signal< sc_lv<4> > ap_var_for_const7;
    sc_signal< sc_lv<4> > ap_var_for_const9;


    // Module declarations
    multibyte(sc_module_name name);
    SC_HAS_PROCESS(multibyte);

    ~multibyte();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    multibyte_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>* multibyte_CTRL_s_axi_U;
    multibyte_CTRL_m_axi<32,32,5,16,16,16,16,C_M_AXI_CTRL_ID_WIDTH,C_M_AXI_CTRL_ADDR_WIDTH,C_M_AXI_CTRL_DATA_WIDTH,C_M_AXI_CTRL_AWUSER_WIDTH,C_M_AXI_CTRL_ARUSER_WIDTH,C_M_AXI_CTRL_WUSER_WIDTH,C_M_AXI_CTRL_RUSER_WIDTH,C_M_AXI_CTRL_BUSER_WIDTH,C_M_AXI_CTRL_TARGET_ADDR,C_M_AXI_CTRL_USER_VALUE,C_M_AXI_CTRL_PROT_VALUE,C_M_AXI_CTRL_CACHE_VALUE>* multibyte_CTRL_m_axi_U;
    multibyte_sensorDbkb* sensorData_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<106> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_logic > pressure_msb_ap_vld;
    sc_signal< sc_logic > pressure_lsb_ap_vld;
    sc_signal< sc_logic > pressure_xlsb_ap_vld;
    sc_signal< sc_logic > temperature_msb_ap_vld;
    sc_signal< sc_logic > temperature_lsb_ap_vld;
    sc_signal< sc_logic > temperature_xlsb_ap_vld;
    sc_signal< sc_logic > stateSetUp_ap_vld;
    sc_signal< sc_logic > state_ap_vld;
    sc_signal< sc_logic > stateDataReads_ap_vld;
    sc_signal< sc_lv<32> > dig_T1;
    sc_signal< sc_lv<32> > dig_P9;
    sc_signal< sc_logic > pressureRaw_ap_vld;
    sc_signal< sc_logic > temperatureRaw_ap_vld;
    sc_signal< sc_lv<32> > trimVal1;
    sc_signal< sc_lv<32> > trimVal2;
    sc_signal< sc_lv<32> > trimVal3;
    sc_signal< sc_lv<32> > trimVal4;
    sc_signal< sc_lv<32> > trimVal5;
    sc_signal< sc_lv<32> > trimVal6;
    sc_signal< sc_lv<32> > trimVal23;
    sc_signal< sc_lv<32> > trimVal24;
    sc_signal< sc_lv<1> > firstSample;
    sc_signal< sc_logic > CTRL_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_1_fu_1158_p2;
    sc_signal< sc_lv<1> > firstSample_load_load_fu_1164_p1;
    sc_signal< sc_logic > CTRL_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > CTRL_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<1> > tmp_3_fu_1168_p2;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<1> > tmp_5_fu_1188_p2;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< sc_lv<1> > tmp_7_fu_1208_p2;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_logic > ap_CS_fsm_state38;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_logic > ap_CS_fsm_state39;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_logic > ap_CS_fsm_state40;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_lv<1> > tmp_9_fu_1228_p2;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_logic > ap_CS_fsm_state47;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_logic > ap_CS_fsm_state48;
    sc_signal< sc_logic > ap_CS_fsm_state44;
    sc_signal< sc_logic > ap_CS_fsm_state49;
    sc_signal< sc_logic > ap_CS_fsm_state50;
    sc_signal< sc_lv<1> > tmp_s_fu_1248_p2;
    sc_signal< sc_logic > ap_CS_fsm_state51;
    sc_signal< sc_logic > ap_CS_fsm_state56;
    sc_signal< sc_logic > CTRL_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state57;
    sc_signal< sc_logic > CTRL_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state64;
    sc_signal< sc_logic > ap_CS_fsm_state65;
    sc_signal< sc_lv<1> > firstSample_load_reg_1492;
    sc_signal< sc_lv<1> > tmp_2_fu_1268_p2;
    sc_signal< sc_logic > ap_CS_fsm_state66;
    sc_signal< sc_logic > ap_CS_fsm_state71;
    sc_signal< sc_logic > ap_CS_fsm_state67;
    sc_signal< sc_logic > ap_CS_fsm_state72;
    sc_signal< sc_logic > ap_CS_fsm_state68;
    sc_signal< sc_logic > ap_CS_fsm_state73;
    sc_signal< sc_logic > ap_CS_fsm_state69;
    sc_signal< sc_logic > ap_CS_fsm_state74;
    sc_signal< sc_logic > ap_CS_fsm_state83;
    sc_signal< sc_lv<1> > tmp_4_fu_1306_p2;
    sc_signal< sc_logic > ap_CS_fsm_state84;
    sc_signal< sc_logic > ap_CS_fsm_state89;
    sc_signal< sc_logic > ap_CS_fsm_state85;
    sc_signal< sc_logic > ap_CS_fsm_state90;
    sc_signal< sc_logic > ap_CS_fsm_state86;
    sc_signal< sc_logic > ap_CS_fsm_state91;
    sc_signal< sc_logic > ap_CS_fsm_state87;
    sc_signal< sc_logic > ap_CS_fsm_state92;
    sc_signal< sc_logic > ap_CS_fsm_state75;
    sc_signal< sc_lv<1> > exitcond2_fu_1294_p2;
    sc_signal< sc_logic > ap_CS_fsm_state82;
    sc_signal< sc_logic > ap_CS_fsm_state94;
    sc_signal< sc_lv<1> > exitcond1_fu_1346_p2;
    sc_signal< sc_logic > ap_CS_fsm_state101;
    sc_signal< sc_logic > CTRL_AWVALID;
    sc_signal< sc_logic > CTRL_AWREADY;
    sc_signal< sc_lv<32> > CTRL_AWADDR;
    sc_signal< sc_logic > CTRL_WVALID;
    sc_signal< sc_logic > CTRL_WREADY;
    sc_signal< sc_lv<32> > CTRL_WDATA;
    sc_signal< sc_logic > CTRL_ARVALID;
    sc_signal< sc_logic > CTRL_ARREADY;
    sc_signal< sc_lv<32> > CTRL_ARADDR;
    sc_signal< sc_logic > CTRL_RVALID;
    sc_signal< sc_logic > CTRL_RREADY;
    sc_signal< sc_lv<32> > CTRL_RDATA;
    sc_signal< sc_logic > CTRL_RLAST;
    sc_signal< sc_lv<1> > CTRL_RID;
    sc_signal< sc_lv<1> > CTRL_RUSER;
    sc_signal< sc_lv<2> > CTRL_RRESP;
    sc_signal< sc_logic > CTRL_BVALID;
    sc_signal< sc_logic > CTRL_BREADY;
    sc_signal< sc_lv<2> > CTRL_BRESP;
    sc_signal< sc_lv<1> > CTRL_BID;
    sc_signal< sc_lv<1> > CTRL_BUSER;
    sc_signal< sc_lv<32> > reg_1105;
    sc_signal< sc_logic > ap_sig_ioackin_CTRL_WREADY;
    sc_signal< sc_logic > ap_sig_ioackin_CTRL_AWREADY;
    sc_signal< bool > ap_block_state7_io;
    sc_signal< bool > ap_block_state16_io;
    sc_signal< bool > ap_block_state25_io;
    sc_signal< bool > ap_block_state34_io;
    sc_signal< bool > ap_block_state43_io;
    sc_signal< sc_logic > ap_CS_fsm_state52;
    sc_signal< bool > ap_predicate_op451_writereq_state65;
    sc_signal< bool > ap_block_state65_io;
    sc_signal< sc_lv<32> > reg_1140;
    sc_signal< sc_logic > ap_sig_ioackin_CTRL_ARREADY;
    sc_signal< sc_lv<3> > indvarinc_fu_1147_p2;
    sc_signal< bool > ap_predicate_op176_writereq_state2;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< bool > ap_block_state4_io;
    sc_signal< bool > ap_block_state5_io;
    sc_signal< bool > ap_block_state6_io;
    sc_signal< sc_lv<23> > ctr_V_fu_1174_p2;
    sc_signal< bool > ap_block_state14_io;
    sc_signal< sc_lv<23> > ctr_V_1_fu_1194_p2;
    sc_signal< bool > ap_block_state23_io;
    sc_signal< sc_lv<23> > ctr_V_2_fu_1214_p2;
    sc_signal< bool > ap_block_state32_io;
    sc_signal< sc_lv<23> > ctr_V_3_fu_1234_p2;
    sc_signal< bool > ap_block_state41_io;
    sc_signal< sc_lv<28> > ctr_V_4_fu_1254_p2;
    sc_signal< bool > ap_block_state50_io;
    sc_signal< sc_lv<23> > ctr_V_5_fu_1274_p2;
    sc_signal< sc_lv<5> > index_1_fu_1300_p2;
    sc_signal< sc_lv<5> > index_1_reg_1562;
    sc_signal< bool > ap_block_state75_io;
    sc_signal< sc_lv<20> > ctr_V_6_fu_1312_p2;
    sc_signal< bool > ap_block_state83_io;
    sc_signal< sc_lv<20> > ctr_V_7_fu_1332_p2;
    sc_signal< sc_logic > ap_CS_fsm_state93;
    sc_signal< sc_lv<3> > index_2_fu_1352_p2;
    sc_signal< sc_lv<3> > index_2_reg_1586;
    sc_signal< bool > ap_block_state94_io;
    sc_signal< sc_lv<32> > CTRL_addr_5_read_reg_1601;
    sc_signal< sc_lv<32> > sensorData_q0;
    sc_signal< sc_lv<32> > sensorData_load_reg_1606;
    sc_signal< sc_logic > ap_CS_fsm_state103;
    sc_signal< sc_lv<32> > sensorData_q1;
    sc_signal< sc_lv<32> > sensorData_load_1_reg_1612;
    sc_signal< sc_lv<32> > sensorData_load_2_reg_1628;
    sc_signal< sc_logic > ap_CS_fsm_state104;
    sc_signal< sc_lv<32> > sensorData_load_3_reg_1633;
    sc_signal< sc_lv<32> > tmp_13_fu_1393_p2;
    sc_signal< sc_lv<32> > tmp_13_reg_1649;
    sc_signal< sc_lv<32> > sensorData_load_4_reg_1654;
    sc_signal< sc_logic > ap_CS_fsm_state105;
    sc_signal< sc_lv<32> > sensorData_load_5_reg_1659;
    sc_signal< sc_lv<32> > tmp_18_fu_1430_p2;
    sc_signal< sc_lv<32> > tmp_18_reg_1664;
    sc_signal< sc_lv<3> > sensorData_address0;
    sc_signal< sc_logic > sensorData_ce0;
    sc_signal< sc_logic > sensorData_we0;
    sc_signal< sc_lv<3> > sensorData_address1;
    sc_signal< sc_logic > sensorData_ce1;
    sc_signal< sc_logic > sensorData_we1;
    sc_signal< sc_lv<3> > invdar9_reg_881;
    sc_signal< sc_lv<23> > p_014_0_i1_reg_892;
    sc_signal< sc_lv<23> > p_014_0_i2_reg_903;
    sc_signal< sc_lv<23> > p_014_0_i3_reg_914;
    sc_signal< sc_lv<23> > p_014_0_i4_reg_925;
    sc_signal< sc_lv<28> > p_014_0_i5_reg_936;
    sc_signal< sc_lv<23> > p_014_0_i_reg_947;
    sc_signal< sc_lv<5> > index_reg_958;
    sc_signal< sc_lv<20> > p_014_0_i6_reg_969;
    sc_signal< sc_lv<20> > p_014_0_i7_reg_980;
    sc_signal< sc_lv<1> > tmp_6_fu_1326_p2;
    sc_signal< sc_lv<3> > index2_reg_991;
    sc_signal< sc_logic > ap_CS_fsm_state102;
    sc_signal< sc_lv<64> > tmp_fu_1153_p1;
    sc_signal< sc_lv<64> > tmp_19_fu_1358_p1;
    sc_signal< sc_lv<32> > grp_fu_1022_p2;
    sc_signal< sc_lv<32> > grp_fu_1065_p2;
    sc_signal< sc_lv<32> > grp_fu_1086_p2;
    sc_signal< sc_logic > ap_reg_ioackin_CTRL_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_CTRL_WREADY;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< bool > ap_block_state15_io;
    sc_signal< bool > ap_block_state24_io;
    sc_signal< bool > ap_block_state33_io;
    sc_signal< bool > ap_block_state42_io;
    sc_signal< sc_logic > ap_reg_ioackin_CTRL_ARREADY;
    sc_signal< bool > ap_block_state66_io;
    sc_signal< bool > ap_block_state67_io;
    sc_signal< bool > ap_block_state68_io;
    sc_signal< bool > ap_block_state84_io;
    sc_signal< bool > ap_block_state85_io;
    sc_signal< bool > ap_block_state86_io;
    sc_signal< sc_logic > ap_reg_ioackin_stateSetUp_dummy_ack;
    sc_signal< sc_logic > ap_reg_ioackin_state_dummy_ack;
    sc_signal< sc_logic > ap_CS_fsm_state106;
    sc_signal< sc_lv<28> > tmp_12_fu_1373_p4;
    sc_signal< sc_lv<32> > tmp_8_fu_1363_p2;
    sc_signal< sc_lv<32> > tmp_11_fu_1383_p1;
    sc_signal< sc_lv<32> > tmp1_fu_1387_p2;
    sc_signal< sc_lv<32> > tmp_10_fu_1368_p2;
    sc_signal< sc_lv<28> > tmp_17_fu_1410_p4;
    sc_signal< sc_lv<32> > tmp_14_fu_1399_p2;
    sc_signal< sc_lv<32> > tmp_16_fu_1420_p1;
    sc_signal< sc_lv<32> > tmp2_fu_1424_p2;
    sc_signal< sc_lv<32> > tmp_15_fu_1404_p2;
    sc_signal< sc_lv<106> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<106> ap_ST_fsm_state1;
    static const sc_lv<106> ap_ST_fsm_state2;
    static const sc_lv<106> ap_ST_fsm_state3;
    static const sc_lv<106> ap_ST_fsm_state4;
    static const sc_lv<106> ap_ST_fsm_state5;
    static const sc_lv<106> ap_ST_fsm_state6;
    static const sc_lv<106> ap_ST_fsm_state7;
    static const sc_lv<106> ap_ST_fsm_state8;
    static const sc_lv<106> ap_ST_fsm_state9;
    static const sc_lv<106> ap_ST_fsm_state10;
    static const sc_lv<106> ap_ST_fsm_state11;
    static const sc_lv<106> ap_ST_fsm_state12;
    static const sc_lv<106> ap_ST_fsm_state13;
    static const sc_lv<106> ap_ST_fsm_state14;
    static const sc_lv<106> ap_ST_fsm_state15;
    static const sc_lv<106> ap_ST_fsm_state16;
    static const sc_lv<106> ap_ST_fsm_state17;
    static const sc_lv<106> ap_ST_fsm_state18;
    static const sc_lv<106> ap_ST_fsm_state19;
    static const sc_lv<106> ap_ST_fsm_state20;
    static const sc_lv<106> ap_ST_fsm_state21;
    static const sc_lv<106> ap_ST_fsm_state22;
    static const sc_lv<106> ap_ST_fsm_state23;
    static const sc_lv<106> ap_ST_fsm_state24;
    static const sc_lv<106> ap_ST_fsm_state25;
    static const sc_lv<106> ap_ST_fsm_state26;
    static const sc_lv<106> ap_ST_fsm_state27;
    static const sc_lv<106> ap_ST_fsm_state28;
    static const sc_lv<106> ap_ST_fsm_state29;
    static const sc_lv<106> ap_ST_fsm_state30;
    static const sc_lv<106> ap_ST_fsm_state31;
    static const sc_lv<106> ap_ST_fsm_state32;
    static const sc_lv<106> ap_ST_fsm_state33;
    static const sc_lv<106> ap_ST_fsm_state34;
    static const sc_lv<106> ap_ST_fsm_state35;
    static const sc_lv<106> ap_ST_fsm_state36;
    static const sc_lv<106> ap_ST_fsm_state37;
    static const sc_lv<106> ap_ST_fsm_state38;
    static const sc_lv<106> ap_ST_fsm_state39;
    static const sc_lv<106> ap_ST_fsm_state40;
    static const sc_lv<106> ap_ST_fsm_state41;
    static const sc_lv<106> ap_ST_fsm_state42;
    static const sc_lv<106> ap_ST_fsm_state43;
    static const sc_lv<106> ap_ST_fsm_state44;
    static const sc_lv<106> ap_ST_fsm_state45;
    static const sc_lv<106> ap_ST_fsm_state46;
    static const sc_lv<106> ap_ST_fsm_state47;
    static const sc_lv<106> ap_ST_fsm_state48;
    static const sc_lv<106> ap_ST_fsm_state49;
    static const sc_lv<106> ap_ST_fsm_state50;
    static const sc_lv<106> ap_ST_fsm_state51;
    static const sc_lv<106> ap_ST_fsm_state52;
    static const sc_lv<106> ap_ST_fsm_state53;
    static const sc_lv<106> ap_ST_fsm_state54;
    static const sc_lv<106> ap_ST_fsm_state55;
    static const sc_lv<106> ap_ST_fsm_state56;
    static const sc_lv<106> ap_ST_fsm_state57;
    static const sc_lv<106> ap_ST_fsm_state58;
    static const sc_lv<106> ap_ST_fsm_state59;
    static const sc_lv<106> ap_ST_fsm_state60;
    static const sc_lv<106> ap_ST_fsm_state61;
    static const sc_lv<106> ap_ST_fsm_state62;
    static const sc_lv<106> ap_ST_fsm_state63;
    static const sc_lv<106> ap_ST_fsm_state64;
    static const sc_lv<106> ap_ST_fsm_state65;
    static const sc_lv<106> ap_ST_fsm_state66;
    static const sc_lv<106> ap_ST_fsm_state67;
    static const sc_lv<106> ap_ST_fsm_state68;
    static const sc_lv<106> ap_ST_fsm_state69;
    static const sc_lv<106> ap_ST_fsm_state70;
    static const sc_lv<106> ap_ST_fsm_state71;
    static const sc_lv<106> ap_ST_fsm_state72;
    static const sc_lv<106> ap_ST_fsm_state73;
    static const sc_lv<106> ap_ST_fsm_state74;
    static const sc_lv<106> ap_ST_fsm_state75;
    static const sc_lv<106> ap_ST_fsm_state76;
    static const sc_lv<106> ap_ST_fsm_state77;
    static const sc_lv<106> ap_ST_fsm_state78;
    static const sc_lv<106> ap_ST_fsm_state79;
    static const sc_lv<106> ap_ST_fsm_state80;
    static const sc_lv<106> ap_ST_fsm_state81;
    static const sc_lv<106> ap_ST_fsm_state82;
    static const sc_lv<106> ap_ST_fsm_state83;
    static const sc_lv<106> ap_ST_fsm_state84;
    static const sc_lv<106> ap_ST_fsm_state85;
    static const sc_lv<106> ap_ST_fsm_state86;
    static const sc_lv<106> ap_ST_fsm_state87;
    static const sc_lv<106> ap_ST_fsm_state88;
    static const sc_lv<106> ap_ST_fsm_state89;
    static const sc_lv<106> ap_ST_fsm_state90;
    static const sc_lv<106> ap_ST_fsm_state91;
    static const sc_lv<106> ap_ST_fsm_state92;
    static const sc_lv<106> ap_ST_fsm_state93;
    static const sc_lv<106> ap_ST_fsm_state94;
    static const sc_lv<106> ap_ST_fsm_state95;
    static const sc_lv<106> ap_ST_fsm_state96;
    static const sc_lv<106> ap_ST_fsm_state97;
    static const sc_lv<106> ap_ST_fsm_state98;
    static const sc_lv<106> ap_ST_fsm_state99;
    static const sc_lv<106> ap_ST_fsm_state100;
    static const sc_lv<106> ap_ST_fsm_state101;
    static const sc_lv<106> ap_ST_fsm_state102;
    static const sc_lv<106> ap_ST_fsm_state103;
    static const sc_lv<106> ap_ST_fsm_state104;
    static const sc_lv<106> ap_ST_fsm_state105;
    static const sc_lv<106> ap_ST_fsm_state106;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2E;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<32> ap_const_lv32_32;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_41;
    static const sc_lv<32> ap_const_lv32_46;
    static const sc_lv<32> ap_const_lv32_42;
    static const sc_lv<32> ap_const_lv32_47;
    static const sc_lv<32> ap_const_lv32_43;
    static const sc_lv<32> ap_const_lv32_48;
    static const sc_lv<32> ap_const_lv32_44;
    static const sc_lv<32> ap_const_lv32_49;
    static const sc_lv<32> ap_const_lv32_52;
    static const sc_lv<32> ap_const_lv32_53;
    static const sc_lv<32> ap_const_lv32_58;
    static const sc_lv<32> ap_const_lv32_54;
    static const sc_lv<32> ap_const_lv32_59;
    static const sc_lv<32> ap_const_lv32_55;
    static const sc_lv<32> ap_const_lv32_5A;
    static const sc_lv<32> ap_const_lv32_56;
    static const sc_lv<32> ap_const_lv32_5B;
    static const sc_lv<32> ap_const_lv32_4A;
    static const sc_lv<32> ap_const_lv32_51;
    static const sc_lv<32> ap_const_lv32_5D;
    static const sc_lv<32> ap_const_lv32_64;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_CTRL_TARGET_ADDR;
    static const int C_M_AXI_CTRL_USER_VALUE;
    static const int C_M_AXI_CTRL_PROT_VALUE;
    static const int C_M_AXI_CTRL_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_33;
    static const sc_lv<32> ap_const_lv32_5C;
    static const sc_lv<32> ap_const_lv32_66;
    static const sc_lv<32> ap_const_lv32_67;
    static const sc_lv<32> ap_const_lv32_68;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<28> ap_const_lv28_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<20> ap_const_lv20_0;
    static const sc_lv<32> ap_const_lv32_65;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_10000448;
    static const sc_lv<64> ap_const_lv64_10000440;
    static const sc_lv<64> ap_const_lv64_10000442;
    static const sc_lv<64> ap_const_lv64_10000443;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_1EC;
    static const sc_lv<32> ap_const_lv32_D0;
    static const sc_lv<32> ap_const_lv32_1ED;
    static const sc_lv<32> ap_const_lv32_E0;
    static const sc_lv<32> ap_const_lv32_B6;
    static const sc_lv<32> ap_const_lv32_F2;
    static const sc_lv<32> ap_const_lv32_F4;
    static const sc_lv<32> ap_const_lv32_F5;
    static const sc_lv<32> ap_const_lv32_A0;
    static const sc_lv<32> ap_const_lv32_88;
    static const sc_lv<32> ap_const_lv32_224;
    static const sc_lv<32> ap_const_lv32_F7;
    static const sc_lv<32> ap_const_lv32_206;
    static const sc_lv<32> ap_const_lv32_69;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<23> ap_const_lv23_4C4B40;
    static const sc_lv<23> ap_const_lv23_1;
    static const sc_lv<28> ap_const_lv28_A6E49C0;
    static const sc_lv<28> ap_const_lv28_1;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<20> ap_const_lv20_F4240;
    static const sc_lv<20> ap_const_lv20_1;
    static const sc_lv<3> ap_const_lv3_6;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const10();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const9();
    void thread_ap_clk_no_reset_();
    void thread_CTRL_ARADDR();
    void thread_CTRL_ARVALID();
    void thread_CTRL_AWADDR();
    void thread_CTRL_AWVALID();
    void thread_CTRL_BREADY();
    void thread_CTRL_RREADY();
    void thread_CTRL_WDATA();
    void thread_CTRL_WVALID();
    void thread_CTRL_blk_n_AR();
    void thread_CTRL_blk_n_AW();
    void thread_CTRL_blk_n_B();
    void thread_CTRL_blk_n_R();
    void thread_CTRL_blk_n_W();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state101();
    void thread_ap_CS_fsm_state102();
    void thread_ap_CS_fsm_state103();
    void thread_ap_CS_fsm_state104();
    void thread_ap_CS_fsm_state105();
    void thread_ap_CS_fsm_state106();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state38();
    void thread_ap_CS_fsm_state39();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state40();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state44();
    void thread_ap_CS_fsm_state47();
    void thread_ap_CS_fsm_state48();
    void thread_ap_CS_fsm_state49();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state50();
    void thread_ap_CS_fsm_state51();
    void thread_ap_CS_fsm_state52();
    void thread_ap_CS_fsm_state56();
    void thread_ap_CS_fsm_state57();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state64();
    void thread_ap_CS_fsm_state65();
    void thread_ap_CS_fsm_state66();
    void thread_ap_CS_fsm_state67();
    void thread_ap_CS_fsm_state68();
    void thread_ap_CS_fsm_state69();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state71();
    void thread_ap_CS_fsm_state72();
    void thread_ap_CS_fsm_state73();
    void thread_ap_CS_fsm_state74();
    void thread_ap_CS_fsm_state75();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state82();
    void thread_ap_CS_fsm_state83();
    void thread_ap_CS_fsm_state84();
    void thread_ap_CS_fsm_state85();
    void thread_ap_CS_fsm_state86();
    void thread_ap_CS_fsm_state87();
    void thread_ap_CS_fsm_state89();
    void thread_ap_CS_fsm_state9();
    void thread_ap_CS_fsm_state90();
    void thread_ap_CS_fsm_state91();
    void thread_ap_CS_fsm_state92();
    void thread_ap_CS_fsm_state93();
    void thread_ap_CS_fsm_state94();
    void thread_ap_block_state14_io();
    void thread_ap_block_state15_io();
    void thread_ap_block_state16_io();
    void thread_ap_block_state23_io();
    void thread_ap_block_state24_io();
    void thread_ap_block_state25_io();
    void thread_ap_block_state2_io();
    void thread_ap_block_state32_io();
    void thread_ap_block_state33_io();
    void thread_ap_block_state34_io();
    void thread_ap_block_state3_io();
    void thread_ap_block_state41_io();
    void thread_ap_block_state42_io();
    void thread_ap_block_state43_io();
    void thread_ap_block_state4_io();
    void thread_ap_block_state50_io();
    void thread_ap_block_state5_io();
    void thread_ap_block_state65_io();
    void thread_ap_block_state66_io();
    void thread_ap_block_state67_io();
    void thread_ap_block_state68_io();
    void thread_ap_block_state6_io();
    void thread_ap_block_state75_io();
    void thread_ap_block_state7_io();
    void thread_ap_block_state83_io();
    void thread_ap_block_state84_io();
    void thread_ap_block_state85_io();
    void thread_ap_block_state86_io();
    void thread_ap_block_state94_io();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_predicate_op176_writereq_state2();
    void thread_ap_predicate_op451_writereq_state65();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_CTRL_ARREADY();
    void thread_ap_sig_ioackin_CTRL_AWREADY();
    void thread_ap_sig_ioackin_CTRL_WREADY();
    void thread_ctr_V_1_fu_1194_p2();
    void thread_ctr_V_2_fu_1214_p2();
    void thread_ctr_V_3_fu_1234_p2();
    void thread_ctr_V_4_fu_1254_p2();
    void thread_ctr_V_5_fu_1274_p2();
    void thread_ctr_V_6_fu_1312_p2();
    void thread_ctr_V_7_fu_1332_p2();
    void thread_ctr_V_fu_1174_p2();
    void thread_exitcond1_fu_1346_p2();
    void thread_exitcond2_fu_1294_p2();
    void thread_firstSample_load_load_fu_1164_p1();
    void thread_grp_fu_1022_p2();
    void thread_grp_fu_1065_p2();
    void thread_grp_fu_1086_p2();
    void thread_index_1_fu_1300_p2();
    void thread_index_2_fu_1352_p2();
    void thread_indvarinc_fu_1147_p2();
    void thread_pressureRaw_ap_vld();
    void thread_pressure_lsb_ap_vld();
    void thread_pressure_msb_ap_vld();
    void thread_pressure_xlsb_ap_vld();
    void thread_reg_1105();
    void thread_reg_1140();
    void thread_sensorData_address0();
    void thread_sensorData_address1();
    void thread_sensorData_ce0();
    void thread_sensorData_ce1();
    void thread_sensorData_we0();
    void thread_sensorData_we1();
    void thread_stateDataReads_ap_vld();
    void thread_stateSetUp_ap_vld();
    void thread_state_ap_vld();
    void thread_temperatureRaw_ap_vld();
    void thread_temperature_lsb_ap_vld();
    void thread_temperature_msb_ap_vld();
    void thread_temperature_xlsb_ap_vld();
    void thread_tmp1_fu_1387_p2();
    void thread_tmp2_fu_1424_p2();
    void thread_tmp_10_fu_1368_p2();
    void thread_tmp_11_fu_1383_p1();
    void thread_tmp_12_fu_1373_p4();
    void thread_tmp_13_fu_1393_p2();
    void thread_tmp_14_fu_1399_p2();
    void thread_tmp_15_fu_1404_p2();
    void thread_tmp_16_fu_1420_p1();
    void thread_tmp_17_fu_1410_p4();
    void thread_tmp_18_fu_1430_p2();
    void thread_tmp_19_fu_1358_p1();
    void thread_tmp_1_fu_1158_p2();
    void thread_tmp_2_fu_1268_p2();
    void thread_tmp_3_fu_1168_p2();
    void thread_tmp_4_fu_1306_p2();
    void thread_tmp_5_fu_1188_p2();
    void thread_tmp_6_fu_1326_p2();
    void thread_tmp_7_fu_1208_p2();
    void thread_tmp_8_fu_1363_p2();
    void thread_tmp_9_fu_1228_p2();
    void thread_tmp_fu_1153_p1();
    void thread_tmp_s_fu_1248_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
